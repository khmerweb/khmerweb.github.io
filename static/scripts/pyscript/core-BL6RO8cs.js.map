{"version":3,"file":"core-BL6RO8cs.js","sources":["../src/zero-redirect.js","../node_modules/sticky-module/esm/index.js","../node_modules/@webreflection/utils/src/with-resolvers.js","../node_modules/polyscript/esm/interpreter/_io.js","../node_modules/@webreflection/fetch/esm/index.js","../node_modules/@webreflection/idb-map/index.js","../node_modules/@webreflection/idb-map/sync.js","../node_modules/codedent/esm/index.js","../node_modules/plain-tag/esm/index.js","../node_modules/html-escaper/esm/index.js","../node_modules/polyscript/esm/utils.js","../node_modules/polyscript/esm/interpreter/_utils.js","../node_modules/reflected-ffi/src/direct/types.js","../node_modules/reflected-ffi/src/direct/web.js","../node_modules/reflected-ffi/src/utils/text.js","../node_modules/reflected-ffi/src/utils/symbol.js","../node_modules/reflected-ffi/src/utils/index.js","../node_modules/reflected-ffi/src/types.js","../node_modules/reflected-ffi/src/direct/views.js","../node_modules/reflected-ffi/src/direct/decoder.js","../node_modules/reflected-ffi/src/direct/array.js","../node_modules/reflected-ffi/src/utils/global.js","../node_modules/reflected-ffi/src/direct/encoder.js","../node_modules/polyscript/esm/interpreter/_python.js","../node_modules/polyscript/esm/interpreter/dummy.js","../node_modules/polyscript/esm/python/mip.js","../node_modules/polyscript/esm/3rd-party.js","../node_modules/polyscript/esm/interpreter/_nativefs.js","../node_modules/polyscript/esm/interpreter/micropython.js","../node_modules/polyscript/esm/interpreter/pyodide.js","../node_modules/polyscript/esm/interpreter/ruby-wasm-wasi.js","../node_modules/polyscript/esm/interpreter/wasmoon.js","../node_modules/polyscript/esm/interpreter/webr.js","../node_modules/polyscript/esm/interpreters.js","../node_modules/basic-devtools/esm/index.js","../node_modules/polyscript/esm/workers.js","../node_modules/reflected-ffi/src/utils/traps.js","../node_modules/reflected-ffi/src/utils/typed.js","../node_modules/reflected-ffi/src/utils/query.js","../node_modules/reflected-ffi/src/utils/gather.js","../node_modules/reflected-ffi/src/local.js","../node_modules/reflected-ffi/src/utils/heap.js","../node_modules/reflected-ffi/src/utils/events.js","../node_modules/coincident/src/window/constants.js","../node_modules/next-resolver/index.js","../node_modules/coincident/src/transfer.js","../node_modules/@webreflection/utils/src/shared-array-buffer.js","../node_modules/coincident/src/utils.js","../node_modules/coincident/src/sabayon/index.js","../node_modules/coincident/src/sabayon/bid.js","../node_modules/coincident/src/main.js","../node_modules/polyscript/esm/worker/xworker.js","../node_modules/coincident/src/window/main.js","../node_modules/polyscript/esm/loader.js","../node_modules/reflected-ffi/src/utils/to-json-callback.js","../node_modules/polyscript/esm/hooks.js","../node_modules/polyscript/esm/worker/hook.js","../node_modules/polyscript/esm/worker/class.js","../node_modules/polyscript/esm/errors.js","../node_modules/polyscript/esm/worker/url.js","../node_modules/polyscript/esm/script-handler.js","../node_modules/polyscript/esm/listeners.js","../node_modules/polyscript/esm/xworker.js","../node_modules/polyscript/esm/custom.js","../node_modules/polyscript/esm/index.js","../src/types.js","../src/all-done.js","../src/plugins.js","../src/exceptions.js","../src/fetch.js","../src/config.js","../src/fs.js","../src/sync.js","../src/plugins-helper.js","../node_modules/type-checked-collections/esm/index.js","../node_modules/to-json-callback/esm/index.js","../src/stdlib.js","../src/stdlib/pyscript.js","../src/hooks.js","../src/plugins/codemirror.js","../src/core.js"],"sourcesContent":["/* eslint no-unused-vars: 0 */\ntry {\n    crypto.randomUUID();\n} catch (_) {\n    if (location.href.startsWith(\"http://0.0.0.0\"))\n        location.href = location.href.replace(\"0.0.0.0\", \"localhost\");\n}\n","/**\n * Allow leaking a module globally to help avoid conflicting exports\n * if the module might have been re-bundled in other projects.\n * @template T\n * @param {string} name the module name to save or retrieve\n * @param {T} value the module as value to save if not known\n * @param {globalThis} [global=globalThis] the reference where modules are saved where `globalThis` is the default\n * @returns {[T, boolean]} the passed `value` or the previous one as first entry, a boolean indicating if it was known or not\n */\nconst stickyModule = (name, value, global = globalThis) => {\n  const symbol = Symbol.for(name);\n  const known = symbol in global;\n  return [\n    known ?\n      global[symbol] :\n      Object.defineProperty(global, symbol, { value })[symbol],\n    known\n  ];\n};\n\nexport default stickyModule;\n","//@ts-check\r\n\r\n/**\r\n * @template T\r\n * @typedef {{promise: Promise<T>, resolve: (value: T) => void, reject: (reason?: any) => void}} Resolvers\r\n */\r\n\r\n//@ts-ignore\r\nconst withResolvers = Promise.withResolvers;\r\n\r\n/**\r\n * @template T\r\n * @type {() => Resolvers<T>}\r\n */\r\nexport default withResolvers.bind(Promise);\r\n","// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const io = new WeakMap();\nexport const stdio = (init) => {\n    const context = init || console;\n    const localIO = {\n        // allow plugins or other io manipulating logic to reuse\n        // the buffered utility exposed in here (see py-editor)\n        buffered,\n        stderr: (context.stderr || console.error).bind(context),\n        stdout: (context.stdout || console.log).bind(context),\n    };\n    return {\n        stderr: (...args) => localIO.stderr(...args),\n        stdout: (...args) => localIO.stdout(...args),\n        async get(engine) {\n            const interpreter = await engine;\n            io.set(interpreter, localIO);\n            return interpreter;\n        },\n    };\n};\n\nconst decoder = new TextDecoder();\nexport const buffered = (callback, EOL = 10) => {\n    const buffer = [];\n    return (maybeUI8) => {\n        if (maybeUI8 instanceof Uint8Array) {\n            for (const c of maybeUI8) {\n                if (c === EOL)\n                    callback(decoder.decode(new Uint8Array(buffer.splice(0))));\n                else\n                    buffer.push(c);\n            }\n        }\n        // if io.stderr(error) is passed instead\n        // or any io.stdout(\"thing\") this should\n        // still work as expected\n        else {\n            callback(maybeUI8);\n        }\n    };\n};\n/* c8 ignore stop */\n","// a bit terser code than I usually write but it's 10 LOC within 80 cols\n// if you are struggling to follow the code you can replace 1-char\n// references around with the following one, hoping that helps :-)\n\n// d => descriptors\n// k => key\n// p => promise\n// r => response\n\nconst d = Object.getOwnPropertyDescriptors(Response.prototype);\n\nconst isFunction = value => typeof value === 'function';\n\nconst bypass = (p, k, { get, value }) => get || !isFunction(value) ?\n                p.then(r => r[k]) :\n                (...args) => p.then(r => r[k](...args));\n\nconst direct = (p, value) => isFunction(value) ? value.bind(p) : value;\n\nconst handler = {\n    get: (p, k) => d.hasOwnProperty(k) ? bypass(p, k, d[k]) : direct(p, p[k])\n};\n\n/**\n * @param {RequestInfo | URL} input\n * @param  {...RequestInit} init\n * @returns {Promise<Response> & Response}\n */\nexport default (input, ...init) => new Proxy(fetch(input, ...init), handler);\n","const { assign } = Object;\n\nconst STORAGE = 'entries';\nconst READONLY = 'readonly';\nconst READWRITE = 'readwrite';\n\n/**\n * @typedef {Object} IDBMapOptions\n * @prop {'strict' | 'relaxed' | 'default'} [durability]\n * @prop {string} [prefix]\n */\n\n/** @typedef {[IDBValidKey, unknown]} IDBMapEntry */\n\n/** @type {IDBMapOptions} */\nconst defaultOptions = { durability: 'default', prefix: 'IDBMap' };\n\n/**\n * @template T\n * @param {{ target: IDBRequest<T> }} event\n * @returns {T}\n */\nconst result = ({ target: { result } }) => result;\n\nexport default class IDBMap extends EventTarget {\n  // Privates\n  /** @type {Promise<IDBDatabase>} */ #db;\n  /** @type {IDBMapOptions} */ #options;\n  /** @type {string} */ #prefix;\n\n  /**\n   * @template T\n   * @param {(store: IDBObjectStore) => IDBRequest<T>} what\n   * @param {'readonly' | 'readwrite'} how\n   * @returns {Promise<T>}\n   */\n  async #transaction(what, how) {\n    const db = await this.#db;\n    const t = db.transaction(STORAGE, how, this.#options);\n    return new Promise((onsuccess, onerror) => assign(\n      what(t.objectStore(STORAGE)),\n      {\n        onsuccess,\n        onerror,\n      }\n    ));\n  }\n\n  /**\n   * @param {string} name\n   * @param {IDBMapOptions} options\n   */\n  constructor(\n    name,\n    {\n      durability = defaultOptions.durability,\n      prefix = defaultOptions.prefix,\n    } = defaultOptions\n  ) {\n    super();\n    this.#prefix = prefix;\n    this.#options = { durability };\n    this.#db = new Promise((resolve, reject) => {\n      assign(\n        indexedDB.open(`${this.#prefix}/${name}`),\n        {\n          onupgradeneeded({ target: { result, transaction } }) {\n            if (!result.objectStoreNames.length)\n              result.createObjectStore(STORAGE);\n            transaction.oncomplete = () => resolve(result);\n          },\n          onsuccess(event) {\n            resolve(result(event));\n          },\n          onerror(event) {\n            reject(event);\n            this.dispatchEvent(event);\n          },\n        },\n      );\n    }).then(result => {\n      const boundDispatch = this.dispatchEvent.bind(this);\n      for (const key in result) {\n        if (key.startsWith('on'))\n          result[key] = boundDispatch;\n      }\n      return result;\n    });\n  }\n\n  // EventTarget Forwards\n  /**\n   * @param {Event} event\n   * @returns \n   */\n  dispatchEvent(event) {\n    const { type, message, isTrusted } = event;\n    return super.dispatchEvent(\n      // avoid re-dispatching of the same event\n      isTrusted ?\n        assign(new Event(type), { message }) :\n        event\n    );\n  }\n\n  // IDBDatabase Forwards\n  async close() {\n    (await this.#db).close();\n  }\n\n  // Map async API\n  get size() {\n    return this.#transaction(\n      store => store.count(),\n      READONLY,\n    ).then(result);\n  }\n\n  async clear() {\n    await this.#transaction(\n      store => store.clear(),\n      READWRITE,\n    );\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   */\n  async delete(key) {\n    await this.#transaction(\n      store => store.delete(key),\n      READWRITE,\n    );\n  }\n\n  /**\n   * @returns {Promise<IDBMapEntry[]>}\n   */\n  async entries() {\n    const keys = await this.keys();\n    return Promise.all(keys.map(key => this.get(key).then(value => [key, value])));\n  }\n\n  /**\n   * @param {(unknown, IDBValidKey, IDBMap) => void} callback\n   * @param {unknown} [context]\n   */\n  async forEach(callback, context = this) {\n    for (const [key, value] of await this.entries())\n      await callback.call(context, value, key, this);\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   * @returns {Promise<unknown | undefined>}\n   */\n  async get(key) {\n    const value = await this.#transaction(\n      store => store.get(key),\n      READONLY,\n    ).then(result);\n    return value;\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   */\n  async has(key) {\n    const k = await this.#transaction(\n      store => store.getKey(key),\n      READONLY,\n    ).then(result);\n    return k !== void 0;\n  }\n\n  async keys() {\n    const keys = await this.#transaction(\n      store => store.getAllKeys(),\n      READONLY,\n    ).then(result);\n    return keys;\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   * @param {unknown} value\n   */\n  async set(key, value) {\n    await this.#transaction(\n      store => store.put(value, key),\n      READWRITE,\n    );\n    return this;\n  }\n\n  async values() {\n    const keys = await this.keys();\n    return Promise.all(keys.map(key => this.get(key)));\n  }\n\n  get [Symbol.toStringTag]() {\n    return this.#prefix;\n  }\n}\n","import IDBMap from './index.js';\n\nexport default class IDBMapSync extends Map {\n  #map;\n  #queue;\n  constructor(...args) {\n    super();\n    this.#map = new IDBMap(...args);\n    this.#queue = this.#map.entries().then(entries => {\n      for (const [key, value] of entries)\n        super.set(key, value);\n    });\n  }\n  async close() {\n    await this.#queue;\n    await this.#map.close();\n  }\n  async sync() {\n    await this.#queue;\n  }\n  clear() {\n    this.#queue = this.#queue.then(() => this.#map.clear());\n    return super.clear();\n  }\n  delete(key) {\n    this.#queue = this.#queue.then(() => this.#map.delete(key));\n    return super.delete(key);\n  }\n  set(key, value) {\n    this.#queue = this.#queue.then(() => this.#map.set(key, value));\n    return super.set(key, value);\n  }\n}\n","import content from 'plain-tag';\n\nconst dedent = {\n  object(...args) {\n    return this.string(content(...args));\n  },\n  string(content) {\n    for (const line of content.split(/[\\r\\n]+/)) {\n      // skip initial empty lines\n      if (line.trim().length) {\n        // trap indentation at the very first line of code\n        if (/^(\\s+)/.test(line))\n          content = content.replace(new RegExp('^' + RegExp.$1, 'gm'), '');\n        // no indentation? all good: get out of here!\n        break;\n      }\n    }\n    return content;\n  }\n};\n\n/**\n * Usable both as template literal tag or just as callback for strings, removes all spaces found\n * at the very first line of code encountered while sanitizing, keeping everything else around.\n * @param {string | TemplateStringsArray} tpl either code as string or as template, when used as tag\n * @param  {...any} values the template interpolations, when used as tag\n * @returns {string} code without undesired indentation\n */\nconst codedent = (tpl, ...values) => dedent[typeof tpl](tpl, ...values);\n\nexport default codedent;\n","export default function (t) {\n  for (var s = t[0], i = 1, l = arguments.length; i < l; i++)\n    s += arguments[i] + t[i];\n  return s;\n};\n","/**\n * Copyright (C) 2017-present by Andrea Giammarchi - @WebReflection\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nconst {replace} = '';\n\n// escape\nconst es = /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34);/g;\nconst ca = /[&<>'\"]/g;\n\nconst esca = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  \"'\": '&#39;',\n  '\"': '&quot;'\n};\nconst pe = m => esca[m];\n\n/**\n * Safely escape HTML entities such as `&`, `<`, `>`, `\"`, and `'`.\n * @param {string} es the input to safely escape\n * @returns {string} the escaped input, and it **throws** an error if\n *  the input type is unexpected, except for boolean and numbers,\n *  converted as string.\n */\nexport const escape = es => replace.call(es, ca, pe);\n\n\n// unescape\nconst unes = {\n  '&amp;': '&',\n  '&#38;': '&',\n  '&lt;': '<',\n  '&#60;': '<',\n  '&gt;': '>',\n  '&#62;': '>',\n  '&apos;': \"'\",\n  '&#39;': \"'\",\n  '&quot;': '\"',\n  '&#34;': '\"'\n};\nconst cape = m => unes[m];\n\n/**\n * Safely unescape previously escaped entities such as `&`, `<`, `>`, `\"`,\n * and `'`.\n * @param {string} un a previously escaped string\n * @returns {string} the unescaped input, and it **throws** an error if\n *  the input type is unexpected, except for boolean and numbers,\n *  converted as string.\n */\nexport const unescape = un => replace.call(un, es, cape);\n","import IDBMapSync from '@webreflection/idb-map/sync';\nimport $dedent from 'codedent';\nimport { unescape as $unescape } from 'html-escaper';\nimport { io } from './interpreter/_io.js';\n\n/** @type {(tpl: string | TemplateStringsArray, ...values:any[]) => string} */\nconst dedent = $dedent;\n\n/** @type {(value:string) => string} */\nconst unescape = $unescape;\n\nconst { isArray } = Array;\n\nconst { assign, create, defineProperties, defineProperty, entries } = Object;\n\nconst { all, resolve } = new Proxy(Promise, {\n    get: ($, name) => $[name].bind($),\n});\n\nconst absoluteURL = (path, base = location.href) =>\n    new URL(path, base.replace(/^blob:/, '')).href;\n\nfunction fixedRelative(path) {\n    'use strict';\n    return path.startsWith('.') ? absoluteURL(path, this) : path;\n}\n\n/* c8 ignore start */\nlet id = 0;\nconst nodeInfo = (node, type) => ({\n    id: node.id || (node.id = `${type}-w${id++}`),\n    tag: node.tagName\n});\n\n/**\n * Notify the main thread about element \"readiness\".\n * @param {HTMLScriptElement | HTMLElement} target the script or custom-type element\n * @param {string} type the custom/type as event prefix\n * @param {string} what the kind of event to dispatch, i.e. `ready` or `done`\n * @param {boolean} [worker = false] `true` if dispatched form a worker, `false` by default if in main\n * @param {globalThis.CustomEvent} [CustomEvent = globalThis.CustomEvent] the `CustomEvent` to use\n */\nconst dispatch = (target, type, what, worker = false, CE = CustomEvent) => {\n    target.dispatchEvent(\n        new CE(`${type}:${what}`, {\n            bubbles: true,\n            detail: { worker },\n        })\n    );\n};\n\nexport const createFunction = value => Function(`'use strict';return (${value})`)();\n\nexport const createResolved = (module, type, config, interpreter) => ({\n    type,\n    config,\n    interpreter,\n    io: io.get(interpreter),\n    run: (code, ...args) => module.run(interpreter, code, ...args),\n    runAsync: (code, ...args) => module.runAsync(interpreter, code, ...args),\n    runEvent: (...args) => module.runEvent(interpreter, ...args),\n});\n\nconst dropLine0 = code => code.replace(/^(?:\\n|\\r\\n)/, '');\n\nexport const createOverload = (module, name, before, after) => {\n    const method = module[name].bind(module);\n    module[name] = name === 'run' ?\n        // patch the sync method\n        (interpreter, code, ...args) => {\n            if (before) method(interpreter, before, ...args);\n            const result = method(interpreter, dropLine0(code), ...args);\n            if (after) method(interpreter, after, ...args);\n            return result;\n        } :\n        // patch the async one\n        async (interpreter, code, ...args) => {\n            if (before) await method(interpreter, before, ...args);\n            const result = await method(interpreter, dropLine0(code), ...args);\n            if (after) await method(interpreter, after, ...args);\n            return result;\n        };\n};\n\nexport const js_modules = Symbol.for('polyscript.js_modules');\n\nconst jsModules = new Map;\ndefineProperty(globalThis, js_modules, { value: jsModules });\n\nexport const JSModules = new Proxy(jsModules, {\n    get: (map, name) => map.get(name),\n    has: (map, name) => map.has(name),\n    ownKeys: map => [...map.keys()],\n});\n\nconst has = (_, field) => !field.startsWith('_');\n\nconst proxy = (modules, name) => new Proxy(\n    modules,\n    { has, get: (modules, field) => modules[name][field] }\n);\n\nexport const registerJSModules = (type, module, interpreter, modules) => {\n    // Pyodide resolves JS modules magically\n    if (type === 'pyodide') return;\n\n    // other runtimes need this pretty ugly dance (it works though)\n    const jsModules = 'polyscript.js_modules';\n    for (const name of Reflect.ownKeys(modules))\n        module.registerJSModule(interpreter, `${jsModules}.${name}`, proxy(modules, name));\n    module.registerJSModule(interpreter, jsModules, modules);\n};\n\nexport const importJS = (source, name) => import(source).then(esm => {\n    jsModules.set(name, { ...esm });\n});\n\nexport const importCSS = href => new Promise((onload, onerror) => {\n    if (document.querySelector(`link[rel=\"stylesheet\"][href=\"${href}\"]`)) {\n        onload();\n    }\n    else {\n        document.head.append(\n            assign(\n                document.createElement('link'),\n                { rel: 'stylesheet', href, onload, onerror },\n            )\n        );\n    }\n});\n\nexport const isCSS = source => /\\.css$/i.test(new URL(source).pathname);\n\nexport const isSync = element =>\n    /^(?:false|0|no)$/i.test(element.getAttribute('async'));\n\n/* c8 ignore stop */\n\nexport {\n    IDBMapSync,\n    dedent, unescape,\n    dispatch,\n    isArray,\n    assign,\n    create,\n    defineProperties,\n    defineProperty,\n    entries,\n    all,\n    resolve,\n    absoluteURL,\n    fixedRelative,\n    nodeInfo,\n};\n","import fetch from '@webreflection/fetch';\n\nimport { absoluteURL, all, entries, importCSS, importJS, isArray, isCSS } from '../utils.js';\n\nexport const RUNNING_IN_WORKER = !globalThis.window;\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\n\n// This should be the only helper needed for all Emscripten based FS exports\nexport const writeFile = ({ FS, PATH, PATH_FS }, path, buffer) => {\n    const absPath = PATH_FS.resolve(path);\n    const dirPath = PATH.dirname(absPath);\n    if (FS.mkdirTree) FS.mkdirTree(dirPath);\n    else mkdirTree(FS, dirPath);\n    return FS.writeFile(absPath, new Uint8Array(buffer), {\n        canOwn: true,\n    });\n};\n\n// This is instead a fallback for Lua or others\nexport const writeFileShim = (FS, path, buffer) => {\n    mkdirTree(FS, dirname(path));\n    path = resolve(FS, path);\n    return FS.writeFile(path, new Uint8Array(buffer), { canOwn: true });\n};\n\nconst dirname = (path) => {\n    const tree = path.split('/');\n    tree.pop();\n    return tree.join('/');\n};\n\nexport const mkdirTree = (FS, path) => {\n    const current = [];\n    for (const branch of path.split('/')) {\n        if (branch === '.' || branch === '..') continue;\n        current.push(branch);\n        if (branch) FS.mkdir(current.join('/'));\n    }\n};\n\nconst resolve = (FS, path) => {\n    const tree = [];\n    for (const branch of path.split('/')) {\n        switch (branch) {\n            case '':\n                break;\n            case '.':\n                break;\n            case '..':\n                tree.pop();\n                break;\n            default:\n                tree.push(branch);\n        }\n    }\n    return [FS.cwd()].concat(tree).join('/').replace(/^\\/+/, '/');\n};\n\nconst calculateFetchPaths = (config_fetch) => {\n    for (const { files, to_file, from = '' } of config_fetch) {\n        if (files !== undefined && to_file !== undefined)\n            throw new Error(\n                'Cannot use \\'to_file\\' and \\'files\\' parameters together!',\n            );\n        if (files === undefined && to_file === undefined && from.endsWith('/'))\n            throw new Error(\n                `Couldn't determine the filename from the path ${from}, please supply 'to_file' parameter.`,\n            );\n    }\n    return config_fetch.flatMap(\n        ({ from = '', to_folder = '.', to_file, files }) => {\n            if (isArray(files))\n                return files.map((file) => ({\n                    url: joinPaths([from, file]),\n                    path: joinPaths([to_folder, file]),\n                }));\n            const filename = to_file || from.slice(1 + from.lastIndexOf('/'));\n            return [{ url: from, path: joinPaths([to_folder, filename]) }];\n        },\n    );\n};\n\nconst joinPaths = (parts) => {\n    const res = parts\n        .map((part) => part.trim().replace(/(^[/]*|[/]*$)/g, ''))\n        .filter((p) => p !== '' && p !== '.')\n        .join('/');\n\n    return parts[0].startsWith('/') ? `/${res}` : res;\n};\n\nconst fetchBuffer = (url, baseURL) =>\n    fetch(absoluteURL(url, baseURL)).arrayBuffer();\n\nexport const fetchPaths = (module, interpreter, config_fetch, baseURL) =>\n    all(\n        calculateFetchPaths(config_fetch).map(({ url, path }) =>\n            fetchBuffer(url, baseURL)\n                .then((buffer) => module.writeFile(interpreter, path, buffer)),\n        ),\n    );\n\n    const fillName = (source, dest) => dest.endsWith('/') ?\n                        `${dest}${source.split('/').pop()}` : dest;\n\nconst parseTemplate = (src, map) => src.replace(\n  /\\{.+?\\}/g,\n  k => {\n    if (!map.has(k))\n      throw new SyntaxError(`Invalid template: ${k}`);\n    return map.get(k);\n  }\n);\n\nconst calculateFilesPaths = files => {\n  const map = new Map;\n  const targets = new Set;\n  const sourceDest = [];\n  for (const [source, dest] of entries(files)) {\n    if (/^\\{.+\\}$/.test(source)) {\n      if (map.has(source))\n        throw new SyntaxError(`Duplicated template: ${source}`);\n      map.set(source, parseTemplate(dest, map));\n    }\n    else {\n      const url = parseTemplate(source, map);\n      const path = fillName(url, parseTemplate(dest || './', map));\n      if (targets.has(path) && !path.endsWith('/*'))\n        throw new SyntaxError(`Duplicated destination: ${path}`);\n      targets.add(path);\n      sourceDest.push({ url, path });\n    }\n  }\n  return sourceDest;\n};\n\nexport const fetchFiles = (module, interpreter, config_files, baseURL) =>\n    all(\n        calculateFilesPaths(config_files).map(({ url, path }) =>\n            fetchBuffer(url, baseURL)\n                .then((buffer) => module.writeFile(\n                    interpreter,\n                    path,\n                    buffer,\n                    url,\n                )),\n        ),\n    );\n\nexport const fetchJSModules = ({ main, worker }, baseURL) => {\n    const promises = [];\n    if (worker && RUNNING_IN_WORKER) {\n        for (let [source, name] of entries(worker)) {\n            source = absoluteURL(source, baseURL);\n            promises.push(importJS(source, name));\n        }\n    }\n    if (main && !RUNNING_IN_WORKER) {\n        for (let [source, name] of entries(main)) {\n            source = absoluteURL(source, baseURL);\n            if (isCSS(source)) importCSS(source);\n            else promises.push(importJS(source, name));\n        }\n    }\n    return all(promises);\n};\n\nexport const createProgress = prefix => detail => {\n    dispatchEvent(new CustomEvent(`${prefix}:progress`, { detail }));\n};\n/* c8 ignore stop */\n","let i = 0;\r\n\r\nexport const FALSE = i++;\r\nexport const TRUE = i++;\r\n\r\nexport const UNDEFINED = i++;\r\nexport const NULL = i++;\r\n\r\nexport const NUMBER = i++;\r\nexport const UI8 = i++;\r\nexport const NAN = i++;\r\nexport const INFINITY = i++;\r\nexport const N_INFINITY = i++;\r\nexport const ZERO = i++;\r\nexport const N_ZERO = i++;\r\n\r\nexport const BIGINT = i++;\r\nexport const BIGUINT = i++;\r\n\r\nexport const STRING = i++;\r\n\r\nexport const SYMBOL = i++;\r\n\r\nexport const ARRAY = i++;\r\nexport const BUFFER = i++;\r\nexport const DATE = i++;\r\nexport const ERROR = i++;\r\nexport const MAP = i++;\r\nexport const OBJECT = i++;\r\nexport const REGEXP = i++;\r\nexport const SET = i++;\r\nexport const VIEW = i++;\r\n\r\nexport const IMAGE_DATA = i++;\r\n\r\nexport const RECURSION = i++;\r\n","class Never {}\r\n\r\nexport const ImageData = globalThis.ImageData || /** @type {typeof ImageData} */(Never);\r\n","export const decoder = new TextDecoder;\r\n\r\nexport const encoder = new TextEncoder;\r\n","/** @type {Map<symbol, string>} */\r\nconst symbols = new Map(\r\n  Reflect.ownKeys(Symbol).map(\r\n    key => [Symbol[key], `@${String(key)}`]\r\n  )\r\n);\r\n\r\n/**\r\n * @param {symbol} value\r\n * @param {string} description\r\n * @returns {string}\r\n */\r\nconst asSymbol = (value, description) => (\r\n  description === void 0 ? '?' :\r\n  (Symbol.keyFor(value) === void 0 ? `!${description}` : `#${description}`)\r\n);\r\n\r\n/**\r\n * Extract the value from a pair of type and value.\r\n * @param {string} name\r\n * @returns {symbol}\r\n */\r\nexport const fromSymbol = name => {\r\n  switch (name[0]) {\r\n    case '@': return Symbol[name.slice(1)];\r\n    case '#': return Symbol.for(name.slice(1));\r\n    case '!': return Symbol(name.slice(1));\r\n    default: return Symbol();\r\n  }\r\n};\r\n\r\n/**\r\n * Create the name of a symbol.\r\n * @param {symbol} value\r\n * @returns {string}\r\n */\r\nexport const toSymbol = value => symbols.get(value) || asSymbol(value, value.description);\r\n","import {\r\n  DIRECT,\r\n  SYMBOL,\r\n} from '../types.js';\r\n\r\nimport { fromSymbol, toSymbol } from './symbol.js';\r\n\r\nexport const defineProperty = Object.defineProperty;\r\n\r\nexport const assign = Object.assign;\r\n\r\nexport const fromArray = Array.from;\r\n\r\nexport const isArray = Array.isArray;\r\n\r\nexport const isView = ArrayBuffer.isView;\r\n\r\n/**\r\n * A type/value pair.\r\n * @typedef {[number, any]} TypeValue\r\n */\r\n\r\n/**\r\n * Create a type/value pair.\r\n * @param {number} type\r\n * @param {any} value\r\n * @returns {TypeValue}\r\n */\r\nexport const tv = (type, value) => [type, value];\r\n\r\nexport const identity = value => value;\r\n\r\nexport const array = [];\r\nexport const object = {};\r\n\r\n/* c8 ignore start */\r\nexport const callback = function () {};\r\n/* c8 ignore stop */\r\n\r\n/**\r\n * Create a function that loops through an array and applies a function to each value.\r\n * @param {(value:any, cache?:Map<any, any>) => any} asValue\r\n * @returns\r\n */\r\nexport const loopValues = asValue => (\r\n  /**\r\n   * Loop through an array and apply a function to each value.\r\n   * @param {any[]} arr\r\n   * @param {Map} [cache]\r\n   * @returns\r\n   */\r\n  (arr, cache = new Map) => {\r\n    for (let i = 0, length = arr.length; i < length; i++)\r\n      arr[i] = asValue(arr[i], cache);\r\n    return arr;\r\n  }\r\n);\r\n\r\n/**\r\n * Extract the value from a pair of type and value.\r\n * @param {TypeValue} pair\r\n * @returns {string|symbol}\r\n */\r\nexport const fromKey = ([type, value]) => type === DIRECT ? value : fromSymbol(value);\r\n\r\n/**\r\n * Associate a key with an optionally transformed value.\r\n * @param {string|symbol} value\r\n * @returns {TypeValue}\r\n */\r\nexport const toKey = value => typeof value === 'string' ?\r\n  tv(DIRECT, value) : tv(SYMBOL, toSymbol(value))\r\n;\r\n\r\nconst MAX_ARGS = 0x7FFF;\r\n\r\n/**\r\n * @param {number[]} output\r\n * @param {Uint8Array} value \r\n */\r\nexport const push = (output, value) => {\r\n  for (let $ = output.push, i = 0, length = value.length; i < length; i += MAX_ARGS)\r\n    $.apply(output, value.subarray(i, i + MAX_ARGS));\r\n};\r\n","export const DIRECT           = 0;\r\nexport const REMOTE           = 1 << 0;\r\nexport const OBJECT           = 1 << 1;\r\nexport const ARRAY            = 1 << 2;\r\nexport const FUNCTION         = 1 << 3;\r\nexport const SYMBOL           = 1 << 4;\r\nexport const BIGINT           = 1 << 5;\r\nexport const BUFFER           = 1 << 6;\r\nexport const STRING           = 1 << 7;\r\nexport const ERROR            = (1 << 8) + ~REMOTE;\r\n\r\nexport const VIEW             = BUFFER | ARRAY;\r\nexport const REMOTE_OBJECT    = REMOTE | OBJECT;\r\nexport const REMOTE_ARRAY     = REMOTE | ARRAY;\r\nexport const REMOTE_FUNCTION  = REMOTE | FUNCTION;\r\n","const buffer = new ArrayBuffer(8);\r\nexport const dv = new DataView(buffer);\r\nexport const u8a8 = new Uint8Array(buffer);\r\n","//@ts-check\r\n\r\nimport {\r\n  FALSE,\r\n  TRUE,\r\n\r\n  NULL,\r\n\r\n  NUMBER,\r\n  UI8,\r\n  NAN,\r\n  INFINITY,\r\n  N_INFINITY,\r\n  ZERO,\r\n  N_ZERO,\r\n\r\n  BIGINT,\r\n  BIGUINT,\r\n  STRING,\r\n  SYMBOL,\r\n\r\n  ARRAY,\r\n  BUFFER,\r\n  DATE,\r\n  ERROR,\r\n  MAP,\r\n  OBJECT,\r\n  REGEXP,\r\n  SET,\r\n  VIEW,\r\n\r\n  IMAGE_DATA,\r\n\r\n  RECURSION\r\n} from './types.js';\r\n\r\nimport { ImageData } from './web.js';\r\n\r\nimport { decoder as textDecoder } from '../utils/text.js';\r\nimport { defineProperty } from '../utils/index.js';\r\nimport { fromSymbol } from '../utils/symbol.js';\r\nimport { dv, u8a8 } from './views.js';\r\n\r\n/** @typedef {Map<number, any>} Cache */\r\n\r\n/**\r\n * @param {Cache} cache\r\n * @param {number} index\r\n * @param {any} value\r\n * @returns {any}\r\n */\r\nconst $ = (cache, index, value) => {\r\n  cache.set(index, value);\r\n  return value;\r\n};\r\n\r\n/**\r\n * @param {Uint8Array} input\r\n */\r\nconst number = input => {\r\n  u8a8[0] = input[i++];\r\n  u8a8[1] = input[i++];\r\n  u8a8[2] = input[i++];\r\n  u8a8[3] = input[i++];\r\n  u8a8[4] = input[i++];\r\n  u8a8[5] = input[i++];\r\n  u8a8[6] = input[i++];\r\n  u8a8[7] = input[i++];\r\n};\r\n\r\n/**\r\n * @param {Uint8Array} input\r\n * @returns {number}\r\n */\r\nconst size = input => {\r\n  u8a8[0] = input[i++];\r\n  u8a8[1] = input[i++];\r\n  u8a8[2] = input[i++];\r\n  u8a8[3] = input[i++];\r\n  return dv.getUint32(0, true);\r\n};\r\n\r\n/**\r\n * @param {Uint8Array} input\r\n * @param {Cache} cache\r\n * @returns {any}\r\n */\r\nconst deflate = (input, cache) => {\r\n  switch (input[i++]) {\r\n    case NUMBER: {\r\n      number(input);\r\n      return dv.getFloat64(0, true);\r\n    }\r\n    case UI8: return input[i++];\r\n    case OBJECT: {\r\n      const object = $(cache, i - 1, {});\r\n      for (let j = 0, length = size(input); j < length; j++)\r\n        object[deflate(input, cache)] = deflate(input, cache);\r\n      return object;\r\n    }\r\n    case ARRAY: {\r\n      const array = $(cache, i - 1, []);\r\n      for (let j = 0, length = size(input); j < length; j++)\r\n        array.push(deflate(input, cache));\r\n      return array;\r\n    }\r\n    case VIEW: {\r\n      const index = i - 1;\r\n      const name = deflate(input, cache);\r\n      return $(cache, index, new globalThis[name](deflate(input, cache)));\r\n    }\r\n    case BUFFER: {\r\n      const index = i - 1;\r\n      const length = size(input);\r\n      return $(cache, index, input.slice(i, i += length).buffer);\r\n    }\r\n    case STRING: {\r\n      const index = i - 1;\r\n      const length = size(input);\r\n      // this could be a subarray but it's not supported on the Web and\r\n      // it wouldn't work with arrays instead of typed arrays.\r\n      return $(cache, index, textDecoder.decode(input.slice(i, i += length)));\r\n    }\r\n    case DATE: {\r\n      return $(cache, i - 1, new Date(deflate(input, cache)));\r\n    }\r\n    case MAP: {\r\n      const map = $(cache, i - 1, new Map);\r\n      for (let j = 0, length = size(input); j < length; j++)\r\n        map.set(deflate(input, cache), deflate(input, cache));\r\n      return map;\r\n    }\r\n    case SET: {\r\n      const set = $(cache, i - 1, new Set);\r\n      for (let j = 0, length = size(input); j < length; j++)\r\n        set.add(deflate(input, cache));\r\n      return set;\r\n    }\r\n    case ERROR: {\r\n      const name = deflate(input, cache);\r\n      const message = deflate(input, cache);\r\n      const stack = deflate(input, cache);\r\n      const Class = globalThis[name] || Error;\r\n      const error = new Class(message);\r\n      return $(cache, i - 1, defineProperty(error, 'stack', { value: stack }));\r\n    }\r\n    /* c8 ignore start */\r\n    case IMAGE_DATA: {\r\n      const data = deflate(input, cache);\r\n      const width = deflate(input, cache);\r\n      const height = deflate(input, cache);\r\n      const colorSpace = deflate(input, cache);\r\n      const pixelFormat = deflate(input, cache);\r\n      const settings = { colorSpace, pixelFormat };\r\n      return $(cache, i - 1, new ImageData(data, width, height, settings));\r\n    }\r\n    /* c8 ignore stop */\r\n    case REGEXP: {\r\n      const source = deflate(input, cache);\r\n      const flags = deflate(input, cache);\r\n      return $(cache, i - 1, new RegExp(source, flags));\r\n    }\r\n    case FALSE: return false;\r\n    case TRUE: return true;\r\n    case NAN: return NaN;\r\n    case INFINITY: return Infinity;\r\n    case N_INFINITY: return -Infinity;\r\n    case ZERO: return 0;\r\n    case N_ZERO: return -0;\r\n    case NULL: return null;\r\n    case BIGINT: return (number(input), dv.getBigInt64(0, true));\r\n    case BIGUINT: return (number(input), dv.getBigUint64(0, true));\r\n    case SYMBOL: return fromSymbol(deflate(input, cache));\r\n    case RECURSION: return cache.get(size(input));\r\n    // this covers functions too\r\n    default: return undefined;\r\n  }\r\n};\r\n\r\nlet i = 0;\r\n\r\n/**\r\n * @param {Uint8Array} value\r\n * @returns {any}\r\n */\r\nexport const decode = value => {\r\n  i = 0;\r\n  return deflate(value, new Map);\r\n};\r\n\r\n/**\r\n * @param {{ byteOffset?: number }} [options]\r\n * @returns {(length: number, buffer: ArrayBufferLike) => any}\r\n */\r\nexport const decoder = ({ byteOffset = 0 } = {}) => (length, buffer) => decode(\r\n  new Uint8Array(buffer, byteOffset, length)\r\n);\r\n","// This is an Array facade for the encoder.\r\n\r\nexport default class Stack {\r\n  /**\r\n   * @param {Stack} self\r\n   * @param {Uint8Array} value\r\n   */\r\n  static push(self, value) {\r\n    self.sync(false);\r\n    self._(value, value.length);\r\n  }\r\n\r\n  /**\r\n   * @param {ArrayBufferLike} buffer\r\n   * @param {number} offset\r\n   */\r\n  constructor(buffer, offset) {\r\n    /** @type {number[]} */\r\n    const output = [];\r\n\r\n    /** @private length */\r\n    this.l = 0;\r\n\r\n    /** @private output */\r\n    this.o = output;\r\n\r\n    /** @private view */\r\n    this.v = new Uint8Array(buffer, offset);\r\n\r\n    /** @type {typeof Array.prototype.push} */\r\n    this.push = output.push.bind(output);\r\n  }\r\n\r\n  /**\r\n   * @readonly\r\n   * @type {number}\r\n   */\r\n  get length() {\r\n    return this.l + this.o.length;\r\n  }\r\n\r\n  /**\r\n   * Sync all entries in the output to the buffer.\r\n   * @param {boolean} last `true` if it's the last sync.\r\n   */\r\n  sync(last) {\r\n    const output = this.o;\r\n    const length = output.length;\r\n    if (length) this._(last ? output : output.splice(0), length);\r\n  }\r\n\r\n  /**\r\n   * Set a value to the buffer\r\n   * @private\r\n   * @param {Uint8Array|number[]} value\r\n   * @param {number} byteLength\r\n   */\r\n  _(value, byteLength) {\r\n    const { buffer, byteOffset } = this.v;\r\n    const offset = this.l;\r\n    this.l += byteLength;\r\n    byteLength += byteOffset + offset;\r\n    if (buffer.byteLength < byteLength)\r\n      /** @type {SharedArrayBuffer} */(buffer).grow(byteLength);\r\n    this.v.set(value, offset);\r\n  }\r\n}\r\n","import { object } from './index.js';\r\n\r\nconst { getPrototypeOf } = Object;\r\nconst { construct } = Reflect;\r\nconst { toStringTag } = Symbol;\r\nconst { toString } = object;\r\n\r\nexport const toName = (ref, name = toString.call(ref).slice(8, -1)) =>\r\n  name in globalThis ? name : toName(getPrototypeOf(ref) || object);\r\n\r\nexport const toTag = (ref, name = ref[toStringTag]) =>\r\n  name in globalThis ? name : toTag(construct(getPrototypeOf(ref.constructor),[0]));\r\n","//@ts-check\r\n\r\nimport {\r\n  FALSE,\r\n  TRUE,\r\n\r\n  UNDEFINED,\r\n  NULL,\r\n\r\n  NUMBER,\r\n  UI8,\r\n  NAN,\r\n  INFINITY,\r\n  N_INFINITY,\r\n  ZERO,\r\n  N_ZERO,\r\n\r\n  BIGINT,\r\n  BIGUINT,\r\n  STRING,\r\n  SYMBOL,\r\n\r\n  ARRAY,\r\n  BUFFER,\r\n  DATE,\r\n  ERROR,\r\n  MAP,\r\n  OBJECT,\r\n  REGEXP,\r\n  SET,\r\n  VIEW,\r\n\r\n  IMAGE_DATA,\r\n\r\n  RECURSION,\r\n} from './types.js';\r\n\r\nimport { ImageData } from './web.js';\r\n\r\nimport Stack from './array.js';\r\nimport { isArray, isView, push } from '../utils/index.js';\r\nimport { encoder as textEncoder } from '../utils/text.js';\r\nimport { toSymbol } from '../utils/symbol.js';\r\nimport { dv, u8a8 } from './views.js';\r\nimport { toTag } from '../utils/global.js';\r\n\r\n/** @typedef {Map<number, number[]>} Cache */\r\n\r\nconst { isNaN, isFinite, isInteger } = Number;\r\nconst { ownKeys } = Reflect;\r\nconst { is } = Object;\r\n\r\n/**\r\n * @param {any} input\r\n * @param {number[]|Stack} output\r\n * @param {Cache} cache\r\n * @returns {boolean}\r\n */\r\nconst process = (input, output, cache) => {\r\n  const value = cache.get(input);\r\n  const unknown = !value;\r\n  if (unknown) {\r\n    dv.setUint32(0, output.length, true);\r\n    cache.set(input, [u8a8[0], u8a8[1], u8a8[2], u8a8[3]]);\r\n  }\r\n  else\r\n    output.push(RECURSION, value[0], value[1], value[2], value[3]);\r\n  return unknown;\r\n};\r\n\r\n/**\r\n * @param {number[]|Stack} output\r\n * @param {number} type\r\n * @param {number} length\r\n */\r\nconst set = (output, type, length) => {\r\n  dv.setUint32(0, length, true);\r\n  output.push(type, u8a8[0], u8a8[1], u8a8[2], u8a8[3]);\r\n};\r\n\r\n/**\r\n * @param {any} input\r\n * @param {number[]|Stack} output\r\n * @param {Cache} cache\r\n */\r\nconst inflate = (input, output, cache) => {\r\n  switch (typeof input) {\r\n    case 'number': {\r\n      if (input && isFinite(input)) {\r\n        if (isInteger(input) && input < 256 && -1 < input)\r\n          output.push(UI8, input);\r\n        else {\r\n          dv.setFloat64(0, input, true);\r\n          output.push(NUMBER, u8a8[0], u8a8[1], u8a8[2], u8a8[3], u8a8[4], u8a8[5], u8a8[6], u8a8[7]);\r\n        }\r\n      }\r\n      else if (isNaN(input)) output.push(NAN);\r\n      else if (!input) output.push(is(input, 0) ? ZERO : N_ZERO);\r\n      else output.push(input < 0 ? N_INFINITY : INFINITY);\r\n      break;\r\n    }\r\n    case 'object': {\r\n      switch (true) {\r\n        case input === null:\r\n          output.push(NULL);\r\n          break;\r\n        case !process(input, output, cache): break;\r\n        case isArray(input): {\r\n          const length = input.length;\r\n          set(output, ARRAY, length);\r\n          for (let i = 0; i < length; i++)\r\n            inflate(input[i], output, cache);\r\n          break;\r\n        }\r\n        case isView(input): {\r\n          output.push(VIEW);\r\n          inflate(toTag(input), output, cache);\r\n          input = input.buffer;\r\n          if (!process(input, output, cache)) break;\r\n          // fallthrough\r\n        }\r\n        case input instanceof ArrayBuffer: {\r\n          const ui8a = new Uint8Array(input);\r\n          set(output, BUFFER, ui8a.length);\r\n          //@ts-ignore\r\n          pushView(output, ui8a);\r\n          break;\r\n        }\r\n        case input instanceof Date:\r\n          output.push(DATE);\r\n          inflate(input.getTime(), output, cache);\r\n          break;\r\n        case input instanceof Map: {\r\n          set(output, MAP, input.size);\r\n          for (const [key, value] of input) {\r\n            inflate(key, output, cache);\r\n            inflate(value, output, cache);\r\n          }\r\n          break;\r\n        }\r\n        case input instanceof Set: {\r\n          set(output, SET, input.size);\r\n          for (const value of input)\r\n            inflate(value, output, cache);\r\n          break;\r\n        }\r\n        case input instanceof Error:\r\n          output.push(ERROR);\r\n          inflate(input.name, output, cache);\r\n          inflate(input.message, output, cache);\r\n          inflate(input.stack, output, cache);\r\n          break;\r\n        /* c8 ignore start */\r\n        case input instanceof ImageData:\r\n          output.push(IMAGE_DATA);\r\n          inflate(input.data, output, cache);\r\n          inflate(input.width, output, cache);\r\n          inflate(input.height, output, cache);\r\n          inflate(input.colorSpace, output, cache);\r\n          //@ts-ignore\r\n          inflate(input.pixelFormat, output, cache);\r\n          break;\r\n        /* c8 ignore stop */\r\n        case input instanceof RegExp:\r\n          output.push(REGEXP);\r\n          inflate(input.source, output, cache);\r\n          inflate(input.flags, output, cache);\r\n          break;\r\n        default: {\r\n          if ('toJSON' in input) {\r\n            const json = input.toJSON();\r\n            inflate(json === input ? null : json, output, cache);\r\n          }\r\n          else {\r\n            const keys = ownKeys(input);\r\n            const length = keys.length;\r\n            set(output, OBJECT, length);\r\n            for (let i = 0; i < length; i++) {\r\n              const key = keys[i];\r\n              inflate(key, output, cache);\r\n              inflate(input[key], output, cache);\r\n            }\r\n          }\r\n          break;\r\n        }\r\n      }\r\n      break;\r\n    }\r\n    case 'string': {\r\n      if (process(input, output, cache)) {\r\n        const encoded = textEncoder.encode(input);\r\n        set(output, STRING, encoded.length);\r\n        //@ts-ignore\r\n        pushView(output, encoded);\r\n      }\r\n      break;\r\n    }\r\n    case 'boolean': {\r\n      output.push(input ? TRUE : FALSE);\r\n      break;\r\n    }\r\n    case 'symbol': {\r\n      output.push(SYMBOL);\r\n      inflate(toSymbol(input), output, cache);\r\n      break;\r\n    }\r\n    case 'bigint': {\r\n      let type = BIGINT;\r\n      if (9223372036854775807n < input) {\r\n        dv.setBigUint64(0, input, true);\r\n        type = BIGUINT;\r\n      }\r\n      else dv.setBigInt64(0, input, true);\r\n      output.push(type, u8a8[0], u8a8[1], u8a8[2], u8a8[3], u8a8[4], u8a8[5], u8a8[6], u8a8[7]);\r\n      break;\r\n    }\r\n    // this covers functions too\r\n    default: {\r\n      output.push(UNDEFINED);\r\n      break;\r\n    }\r\n  }\r\n};\r\n\r\n/** @type {typeof push|typeof Stack.push} */\r\nlet pushView = push;\r\n\r\n/**\r\n * @param {any} value\r\n * @returns {number[]}\r\n */\r\nexport const encode = value => {\r\n  const output = [];\r\n  pushView = push;\r\n  inflate(value, output, new Map);\r\n  return output;\r\n};\r\n\r\n/**\r\n * @param {{ byteOffset?: number, Array?: typeof Stack }} [options]\r\n * @returns {(value: any, buffer: ArrayBufferLike) => number}\r\n */\r\nexport const encoder = ({ byteOffset = 0, Array = Stack } = {}) => (value, buffer) => {\r\n  const output = new Array(buffer, byteOffset);\r\n  pushView = Array.push;\r\n  inflate(value, output, new Map);\r\n  const length = output.length;\r\n  output.sync(true);\r\n  return length;\r\n};\r\n","import * as DIRECT from 'reflected-ffi/direct';\nconst JSON = { parse: DIRECT.decode, stringify: DIRECT.encode };\n\nimport { fetchFiles, fetchJSModules, fetchPaths } from './_utils.js';\nimport { IDBMapSync, dedent } from '../utils.js';\nimport { io } from './_io.js';\n\nexport const loader = new WeakMap();\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const loadProgress = async (self, progress, interpreter, config, baseURL) => {\n    if (config.files) {\n        progress('Loading files');\n        await fetchFiles(self, interpreter, config.files, baseURL);\n        progress('Loaded files');\n    }\n    if (config.fetch) {\n        progress('Loading fetch');\n        await fetchPaths(self, interpreter, config.fetch, baseURL);\n        progress('Loaded fetch');\n    }\n    if (config.js_modules) {\n        progress('Loading JS modules');\n        await fetchJSModules(config.js_modules, baseURL);\n        progress('Loaded JS modules');\n    }\n};\n\nexport const registerJSModule = (interpreter, name, value) => {\n    if (name === 'polyscript') {\n        value.lazy_py_modules = async (...packages) => {\n            await loader.get(interpreter)(packages);\n            return packages.map(name => interpreter.pyimport(name));\n        };\n        value.storage = async (name) => {\n            const storage = new IDBMapSync(name);\n            await storage.sync();\n            return storage;\n        };\n        value.JSON = JSON;\n    }\n    interpreter.registerJsModule(name, value);\n};\n\nexport const getFormat = (path, url) => {\n    if (path.endsWith('/*')) {\n        if (/\\.(zip|whl|tgz|tar(?:\\.gz)?)$/.test(url))\n            return RegExp.$1;\n        throw new Error(`Unsupported archive ${url}`);\n    }\n    return '';\n};\n\nexport const run = (interpreter, code, ...args) => {\n    try {\n        return interpreter.runPython(dedent(code), ...args);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport const runAsync = async (interpreter, code, ...args) => {\n    try {\n        return await interpreter.runPythonAsync(dedent(code), ...args);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport const runEvent = async (interpreter, code, event) => {\n    // allows method(event) as well as namespace.method(event)\n    // it does not allow fancy brackets names for now\n    const [name, ...keys] = code.split('.');\n    let target = interpreter.globals.get(name);\n    let context;\n    for (const key of keys) [context, target] = [target, target[key]];\n    try {\n        await target.call(context, event);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n/* c8 ignore stop */\n","import { io, stdio } from './_io.js';\n\nconst registry = new Map;\n\nconst type = 'dummy';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst require = name => registry.get(name);\n\nconst run = (interpreter, code) => {\n    try {\n        return Function('require', code)(require);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport default {\n    type,\n    module: () => 'data:text/javascript,',\n    engine: module => stdio().get(module),\n    registerJSModule(_, name, value) {\n        registry.set(name, value);\n    },\n    run,\n    runAsync: run,\n    runEvent: async (interpreter, code, event) => {\n        try {\n            await Function('require', 'e', `return ${code}(e)`)(require, event);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    transform: (_, value) => value,\n    writeFile() {},\n};\n","// ⚠️ DO NOT MODIFY - SOURCE FILE: \"../../python/mip.py\"\nexport default new TextEncoder().encode(\"_F='github:'\\n_E='user-agent'\\n_D=True\\n_C=False\\n_B='/'\\n_A=None\\nfrom uio import StringIO\\nimport sys\\nclass Response:\\n\\tdef __init__(A,f):A.raw=f;A.encoding='utf-8';A._cached=_A\\n\\tdef close(A):\\n\\t\\tif A.raw:A.raw.close();A.raw=_A\\n\\t\\tA._cached=_A\\n\\t@property\\n\\tdef content(self):\\n\\t\\tA=self\\n\\t\\tif A._cached is _A:\\n\\t\\t\\ttry:A._cached=A.raw.read()\\n\\t\\t\\tfinally:A.raw.close();A.raw=_A\\n\\t\\treturn A._cached\\n\\t@property\\n\\tdef text(self):return str(self.content,self.encoding)\\n\\tdef json(A):import ujson;return ujson.loads(A.content)\\nHEADERS_TO_IGNORE=_E,\\ntry:import js\\nexcept Exception as err:raise OSError('This version of urequests can only be used in the browser')\\nHEADERS_TO_IGNORE=_E,\\ndef request(method,url,data=_A,json=_A,headers={},stream=_A,auth=_A,timeout=_A,parse_headers=_D):\\n\\tE=timeout;D=method;C=data;from js import XMLHttpRequest as G;A=G.new();A.withCredentials=_C\\n\\tif auth is not _A:import ubinascii;H,I=auth;A.open(D,url,_C,H,I)\\n\\telse:A.open(D,url,_C)\\n\\tfor(F,J)in headers.items():\\n\\t\\tif F.lower()not in HEADERS_TO_IGNORE:A.setRequestHeader(F,J)\\n\\tif E:A.timeout=int(E*1000)\\n\\tif json is not _A:assert C is _A;import ujson;C=ujson.dumps(json);A.setRequestHeader('Content-Type','application/json')\\n\\tA.send(C);B=Response(StringIO(A.responseText));B.status_code=A.status;B.reason=A.statusText;B.headers=A.getAllResponseHeaders();return B\\ndef get(url,**A):return request('GET',url,**A)\\n_PACKAGE_INDEX=const('https://micropython.org/pi/v2')\\n_CHUNK_SIZE=128\\ndef _ensure_path_exists(path):\\n\\timport os;A=path.split(_B)\\n\\tif not A[0]:A.pop(0);A[0]=_B+A[0]\\n\\tB=''\\n\\tfor C in range(len(A)-1):\\n\\t\\tB+=A[C]\\n\\t\\ttry:os.stat(B)\\n\\t\\texcept:os.mkdir(B)\\n\\t\\tB+=_B\\ndef _chunk(src,dest):\\n\\tA=memoryview(bytearray(_CHUNK_SIZE))\\n\\twhile _D:\\n\\t\\tB=src.readinto(A)\\n\\t\\tif B==0:break\\n\\t\\tdest(A if B==_CHUNK_SIZE else A[:B])\\ndef _check_exists(path,short_hash):\\n\\tA=short_hash;import os\\n\\ttry:\\n\\t\\timport binascii as C,hashlib as D\\n\\t\\twith open(path,'rb')as E:B=D.sha256();_chunk(E,B.update);F=str(C.hexlify(B.digest())[:len(A)],'utf-8');return F==A\\n\\texcept:return _C\\ndef _rewrite_url(url,branch=_A):\\n\\tB=branch;A=url\\n\\tif not B:B='HEAD'\\n\\tif A.startswith(_F):A=A[7:].split(_B);A='https://raw.githubusercontent.com/'+A[0]+_B+A[1]+_B+B+_B+_B.join(A[2:])\\n\\treturn A\\ndef _download_file(url,dest):\\n\\tB=dest;A=get(url)\\n\\ttry:\\n\\t\\tif A.status_code!=200:print('Error',A.status_code,'requesting',url);return _C\\n\\t\\tprint('Copying:',B);_ensure_path_exists(B)\\n\\t\\twith open(B,'wb')as C:_chunk(A.raw,C.write)\\n\\t\\treturn _D\\n\\tfinally:A.close()\\ndef _install_json(package_json_url,index,target,version,mpy):\\n\\tK='File not found: {} {}';I=version;H=index;G=package_json_url;D=target;E=get(_rewrite_url(G,I))\\n\\ttry:\\n\\t\\tif E.status_code!=200:print('Package not found:',G);return _C\\n\\t\\tF=E.json()\\n\\tfinally:E.close()\\n\\tfor(A,C)in F.get('hashes',()):\\n\\t\\tB=D+_B+A\\n\\t\\tif _check_exists(B,C):print('Exists:',B)\\n\\t\\telse:\\n\\t\\t\\tL='{}/file/{}/{}'.format(H,C[:2],C)\\n\\t\\t\\tif not _download_file(L,B):print(K.format(A,C));return _C\\n\\tfor(A,J)in F.get('urls',()):\\n\\t\\tB=D+_B+A\\n\\t\\tif not _download_file(_rewrite_url(J,I),B):print(K.format(A,J));return _C\\n\\tfor(M,N)in F.get('deps',()):\\n\\t\\tif not _install_package(M,H,D,N,mpy):return _C\\n\\treturn _D\\ndef _install_package(package,index,target,version,mpy):\\n\\tD=index;C=target;B=version;A=package\\n\\tif A.startswith('http://')or A.startswith('https://')or A.startswith(_F):\\n\\t\\tif A.endswith('.py')or A.endswith('.mpy'):print('Downloading {} to {}'.format(A,C));return _download_file(_rewrite_url(A,B),C+_B+A.rsplit(_B)[-1])\\n\\t\\telse:\\n\\t\\t\\tif not A.endswith('.json'):\\n\\t\\t\\t\\tif not A.endswith(_B):A+=_B\\n\\t\\t\\t\\tA+='package.json'\\n\\t\\t\\tprint('Installing {} to {}'.format(A,C))\\n\\telse:\\n\\t\\tif not B:B='latest'\\n\\t\\tprint('Installing {} ({}) from {} to {}'.format(A,B,D,C));E=sys.implementation._mpy&255 if mpy and hasattr(sys.implementation,'_mpy')else'py';A='{}/package/{}/{}/{}.json'.format(D,'py',A,B)\\n\\treturn _install_json(A,D,C,B,mpy)\\ndef install(package,index=_A,target=_A,version=_A,mpy=_D):\\n\\tB=target;A=index\\n\\tif not B:\\n\\t\\tfor C in sys.path:\\n\\t\\t\\tif C.endswith('/lib'):B=C;break\\n\\t\\telse:print('Unable to find lib dir in sys.path');return\\n\\tif not A:A=_PACKAGE_INDEX\\n\\tif _install_package(package,A.rstrip(_B),B,version,mpy):print('Done')\\n\\telse:print('Package may be partially installed')\");","/* c8 ignore start */\n\n// toml\nexport const toml = async (text) => (\n  await import(/* webpackIgnore: true */'./3rd-party/toml.js')\n).parse(text);\n\n// zip\nexport const zip = () => import(/* webpackIgnore: true */'./3rd-party/zip.js');\n\n/* c8 ignore stop */\n","import { mkdirTree } from './_utils.js';\n\nasync function syncfs(FS, direction) {\n    return new Promise((resolve, reject) => {\n        FS.syncfs(direction, err => {\n            if (err) reject(err);\n            else resolve();\n        });\n    });\n}\n\n// (C) Pyodide  https://github.com/pyodide/pyodide - Mozilla Public License Version 2.0\n// JS port of https://github.com/pyodide/pyodide/blob/34fcd02172895d75db369994011409324f9e3cce/src/js/nativefs.ts\nexport function initializeNativeFS(module) {\n    const FS = module.FS;\n    const MEMFS = module.FS.filesystems.MEMFS;\n    const PATH = module.PATH;\n\n    const nativeFSAsync = {\n        // DIR_MODE: {{{ cDefine('S_IFDIR') }}} | 511 /* 0777 */,\n        // FILE_MODE: {{{ cDefine('S_IFREG') }}} | 511 /* 0777 */,\n        DIR_MODE: 16384 | 511,\n        FILE_MODE: 32768 | 511,\n        mount: function (mount) {\n            if (!mount.opts.fileSystemHandle) {\n                throw new Error('opts.fileSystemHandle is required');\n            }\n\n            // reuse all of the core MEMFS functionality\n            return MEMFS.mount.apply(null, arguments);\n        },\n        syncfs: async (mount, populate, callback) => {\n            try {\n                const local = nativeFSAsync.getLocalSet(mount);\n                const remote = await nativeFSAsync.getRemoteSet(mount);\n                const src = populate ? remote : local;\n                const dst = populate ? local : remote;\n                await nativeFSAsync.reconcile(mount, src, dst);\n                callback(null);\n            } catch (e) {\n                callback(e);\n            }\n        },\n        // Returns file set of emscripten's filesystem at the mountpoint.\n        getLocalSet: (mount) => {\n            let entries = Object.create(null);\n\n            function isRealDir(p) {\n                return p !== '.' && p !== '..';\n            }\n\n            function toAbsolute(root) {\n                return (p) => {\n                    return PATH.join2(root, p);\n                };\n            }\n\n            let check = FS.readdir(mount.mountpoint)\n                .filter(isRealDir)\n                .map(toAbsolute(mount.mountpoint));\n\n            while (check.length) {\n                let path = check.pop();\n                let stat = FS.stat(path);\n\n                if (FS.isDir(stat.mode)) {\n                    check.push.apply(\n                        check,\n                        FS.readdir(path).filter(isRealDir).map(toAbsolute(path)),\n                    );\n                }\n\n                entries[path] = { timestamp: stat.mtime, mode: stat.mode };\n            }\n\n            return { type: 'local', entries: entries };\n        },\n        // Returns file set of the real, on-disk filesystem at the mountpoint.\n        getRemoteSet: async (mount) => {\n            // TODO: this should be a map.\n            const entries = Object.create(null);\n\n            const handles = await getFsHandles(mount.opts.fileSystemHandle);\n            for (const [path, handle] of handles) {\n                if (path === '.') continue;\n\n                entries[PATH.join2(mount.mountpoint, path)] = {\n                    timestamp:\n                        handle.kind === 'file'\n                            ? (await handle.getFile()).lastModifiedDate\n                            : new Date(),\n                    mode:\n                        handle.kind === 'file'\n                            ? nativeFSAsync.FILE_MODE\n                            : nativeFSAsync.DIR_MODE,\n                };\n            }\n\n            return { type: 'remote', entries, handles };\n        },\n        loadLocalEntry: (path) => {\n            const lookup = FS.lookupPath(path);\n            const node = lookup.node;\n            const stat = FS.stat(path);\n\n            if (FS.isDir(stat.mode)) {\n                return { timestamp: stat.mtime, mode: stat.mode };\n            } else if (FS.isFile(stat.mode)) {\n                node.contents = MEMFS.getFileDataAsTypedArray(node);\n                return {\n                    timestamp: stat.mtime,\n                    mode: stat.mode,\n                    contents: node.contents,\n                };\n            } else {\n                throw new Error('node type not supported');\n            }\n        },\n        storeLocalEntry: (path, entry) => {\n            if (FS.isDir(entry['mode'])) {\n                FS.mkdirTree(path, entry['mode']);\n            } else if (FS.isFile(entry['mode'])) {\n                FS.writeFile(path, entry['contents'], { canOwn: true });\n            } else {\n                throw new Error('node type not supported');\n            }\n\n            FS.chmod(path, entry['mode']);\n            FS.utime(path, entry['timestamp'], entry['timestamp']);\n        },\n        removeLocalEntry: (path) => {\n            var stat = FS.stat(path);\n\n            if (FS.isDir(stat.mode)) {\n                FS.rmdir(path);\n            } else if (FS.isFile(stat.mode)) {\n                FS.unlink(path);\n            }\n        },\n        loadRemoteEntry: async (handle) => {\n            if (handle.kind === 'file') {\n                const file = await handle.getFile();\n                return {\n                    contents: new Uint8Array(await file.arrayBuffer()),\n                    mode: nativeFSAsync.FILE_MODE,\n                    timestamp: file.lastModifiedDate,\n                };\n            } else if (handle.kind === 'directory') {\n                return {\n                    mode: nativeFSAsync.DIR_MODE,\n                    timestamp: new Date(),\n                };\n            } else {\n                throw new Error('unknown kind: ' + handle.kind);\n            }\n        },\n        storeRemoteEntry: async (handles, path, entry) => {\n            const parentDirHandle = handles.get(PATH.dirname(path));\n            const handle = FS.isFile(entry.mode)\n                ? await parentDirHandle.getFileHandle(PATH.basename(path), {\n                    create: true,\n                })\n                : await parentDirHandle.getDirectoryHandle(PATH.basename(path), {\n                    create: true,\n                });\n            if (handle.kind === 'file') {\n                const writable = await handle.createWritable();\n                await writable.write(entry.contents);\n                await writable.close();\n            }\n            handles.set(path, handle);\n        },\n        removeRemoteEntry: async (handles, path) => {\n            const parentDirHandle = handles.get(PATH.dirname(path));\n            await parentDirHandle.removeEntry(PATH.basename(path));\n            handles.delete(path);\n        },\n        reconcile: async (mount, src, dst) => {\n            let total = 0;\n\n            const create = [];\n            Object.keys(src.entries).forEach(function (key) {\n                const e = src.entries[key];\n                const e2 = dst.entries[key];\n                if (\n                    !e2 ||\n                    (FS.isFile(e.mode) &&\n                        e['timestamp'].getTime() > e2['timestamp'].getTime())\n                ) {\n                    create.push(key);\n                    total++;\n                }\n            });\n            // sort paths in ascending order so directory entries are created\n            // before the files inside them\n            create.sort();\n\n            const remove = [];\n            Object.keys(dst.entries).forEach(function (key) {\n                if (!src.entries[key]) {\n                    remove.push(key);\n                    total++;\n                }\n            });\n            // sort paths in descending order so files are deleted before their\n            // parent directories\n            remove.sort().reverse();\n\n            if (!total) {\n                return;\n            }\n\n            const handles = src.type === 'remote' ? src.handles : dst.handles;\n\n            for (const path of create) {\n                const relPath = PATH.normalize(\n                    path.replace(mount.mountpoint, '/'),\n                ).substring(1);\n                if (dst.type === 'local') {\n                    const handle = handles.get(relPath);\n                    const entry = await nativeFSAsync.loadRemoteEntry(handle);\n                    nativeFSAsync.storeLocalEntry(path, entry);\n                } else {\n                    const entry = nativeFSAsync.loadLocalEntry(path);\n                    await nativeFSAsync.storeRemoteEntry(handles, relPath, entry);\n                }\n            }\n\n            for (const path of remove) {\n                if (dst.type === 'local') {\n                    nativeFSAsync.removeLocalEntry(path);\n                } else {\n                    const relPath = PATH.normalize(\n                        path.replace(mount.mountpoint, '/'),\n                    ).substring(1);\n                    await nativeFSAsync.removeRemoteEntry(handles, relPath);\n                }\n            }\n        },\n    };\n\n    module.FS.filesystems.NATIVEFS_ASYNC = nativeFSAsync;\n\n    function ensureMountPathExists(path) {\n        if (FS.mkdirTree) FS.mkdirTree(path);\n        else mkdirTree(FS, path);\n\n        const { node } = FS.lookupPath(path, {\n            follow_mount: false,\n        });\n\n        if (FS.isMountpoint(node)) {\n            throw new Error(`path '${path}' is already a file system mount point`);\n        }\n        if (!FS.isDir(node.mode)) {\n            throw new Error(`path '${path}' points to a file not a directory`);\n        }\n        // eslint-disable-next-line\n        for (const _ in node.contents) {\n            throw new Error(`directory '${path}' is not empty`);\n        }\n    }\n\n    return async function mountNativeFS(path, fileSystemHandle) {\n        if (fileSystemHandle.constructor.name !== 'FileSystemDirectoryHandle') {\n            throw new TypeError(\n              'Expected argument \\'fileSystemHandle\\' to be a FileSystemDirectoryHandle',\n            );\n        }\n        ensureMountPathExists(path);\n      \n        FS.mount(\n            FS.filesystems.NATIVEFS_ASYNC,\n            { fileSystemHandle },\n            path,\n        );\n\n        // sync native ==> browser\n        await syncfs(FS, true);\n\n        return {\n            // sync browser ==> native\n            syncfs: async () => await syncfs(FS, false),\n        };\n    };\n}\n\nconst getFsHandles = async (dirHandle) => {\n    const handles = [];\n\n    async function collect(curDirHandle) {\n        for await (const entry of curDirHandle.values()) {\n            handles.push(entry);\n            if (entry.kind === 'directory') {\n                await collect(entry);\n            }\n        }\n    }\n\n    await collect(dirHandle);\n\n    const result = new Map();\n    result.set('.', dirHandle);\n    for (const handle of handles) {\n        const relativePath = (await dirHandle.resolve(handle)).join('/');\n        result.set(relativePath, handle);\n    }\n    return result;\n};\n","import fetch from '@webreflection/fetch';\n\nimport { createProgress, writeFile } from './_utils.js';\nimport { getFormat, loader, loadProgress, registerJSModule, run, runAsync, runEvent } from './_python.js';\nimport { stdio, buffered } from './_io.js';\nimport { absoluteURL, fixedRelative } from '../utils.js';\nimport mip from '../python/mip.js';\nimport { zip } from '../3rd-party.js';\n\nimport { initializeNativeFS } from './_nativefs.js';\n\nconst type = 'micropython';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst mkdir = (FS, path) => {\n    try {\n        FS.mkdir(path);\n    }\n    // eslint-disable-next-line no-unused-vars\n    catch (_) {\n        // ignore as there's no path.exists here\n    }\n};\n\nconst progress = createProgress('mpy');\n\nexport default {\n    type,\n    module: (version = '1.26.0-preview-386') =>\n        `https://cdn.jsdelivr.net/npm/@micropython/micropython-webassembly-pyscript@${version}/micropython.mjs`,\n    async engine({ loadMicroPython }, config, url, baseURL) {\n        const { stderr, stdout, get } = stdio({\n            stderr: buffered(console.error),\n            stdout: buffered(console.log),\n        });\n        url = url.replace(/\\.m?js$/, '.wasm');\n        progress('Loading MicroPython');\n        const interpreter = await get(loadMicroPython({ linebuffer: false, stderr, stdout, url }));\n        const py_imports = importPackages.bind(this, interpreter, baseURL);\n        loader.set(interpreter, py_imports);\n        await loadProgress(this, progress, interpreter, config, baseURL);\n        // Install Micropython Package\n        this.writeFile(interpreter, './mip.py', mip);\n        if (config.packages) {\n            progress('Loading packages');\n            await py_imports(config.packages.map(fixedRelative, baseURL));\n            progress('Loaded packages');\n        }\n        progress('Loaded MicroPython');\n        if (!interpreter.mountNativeFS)\n            interpreter.mountNativeFS = initializeNativeFS(interpreter._module);\n        return interpreter;\n    },\n    registerJSModule,\n    run,\n    runAsync,\n    runEvent,\n    transform: (interpreter, value) => interpreter.PyProxy.toJs(value),\n    writeFile: (interpreter, path, buffer, url) => {\n        const { FS, _module: { PATH, PATH_FS } } = interpreter;\n        const fs = { FS, PATH, PATH_FS };\n        const format = getFormat(path, url);\n        if (format) {\n            const extractDir = path.slice(0, -1);\n            if (extractDir !== './') FS.mkdir(extractDir);\n            switch (format) {\n                case 'whl':\n                case 'zip': {\n                    const blob = new Blob([buffer], { type: 'application/zip' });\n                    return zip().then(async ({ BlobReader, Uint8ArrayWriter, ZipReader }) => {\n                        const zipFileReader = new BlobReader(blob);\n                        const zipReader = new ZipReader(zipFileReader);\n                        for (const entry of await zipReader.getEntries()) {\n                            const { directory, filename } = entry;\n                            const name = extractDir + filename;\n                            if (directory) mkdir(FS, name);\n                            else {\n                                mkdir(FS, PATH.dirname(name));\n                                const buffer = await entry.getData(new Uint8ArrayWriter);\n                                FS.writeFile(name, buffer, {\n                                    canOwn: true,\n                                });\n                            }\n                        }\n                        zipReader.close();\n                    });\n                }\n                case 'tgz':\n                case 'tar.gz': {\n                    const TMP = './_.tar.gz';\n                    writeFile(fs, TMP, buffer);\n                    interpreter.runPython(`\n                        import os, gzip, tarfile\n                        tar = tarfile.TarFile(fileobj=gzip.GzipFile(fileobj=open(\"${TMP}\", \"rb\")))\n                        for f in tar:\n                            name = f\"${extractDir}{f.name}\"\n                            if f.type == tarfile.DIRTYPE:\n                                if f.name != \"./\":\n                                    os.mkdir(name.strip(\"/\"))\n                            else:\n                                dir = os.path.dirname(name)\n                                if not os.path.exists(dir):\n                                    os.mkdir(dir)\n                                source = tar.extractfile(f)\n                                with open(name, \"wb\") as dest:\n                                    dest.write(source.read())\n                                    dest.close()\n                        tar.close()\n                        os.remove(\"${TMP}\")\n                    `);\n                    return;\n                }\n            }\n        }\n        return writeFile(fs, path, buffer);\n    },\n};\n\nasync function importPackages(interpreter, baseURL, packages) {\n    let mip;\n    for (const mpyPackage of packages) {\n        if (mpyPackage.endsWith('.whl')) {\n            const url = absoluteURL(mpyPackage, baseURL);\n            const buffer = await fetch(url).arrayBuffer();\n            await this.writeFile(interpreter, './*', buffer, url);\n        }\n        else {\n            if (!mip) mip = interpreter.pyimport('mip');\n            mip.install(mpyPackage);\n        }\n    }\n}\n/* c8 ignore stop */\n","import { createProgress, writeFile } from './_utils.js';\nimport { getFormat, loader, loadProgress, registerJSModule, run, runAsync, runEvent } from './_python.js';\nimport { stdio } from './_io.js';\nimport { IDBMapSync, isArray, fixedRelative } from '../utils.js';\n\nconst type = 'pyodide';\nconst toJsOptions = { dict_converter: Object.fromEntries };\n\nconst { stringify } = JSON;\n\nconst { apply } = Reflect;\nconst FunctionPrototype = Function.prototype;\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst overrideMethod = method => function (...args) {\n    return apply(method, this, args);\n};\n\nlet pyproxy, to_js;\nconst override = intercept => {\n\n    const proxies = new WeakMap;\n\n    const patch = args => {\n        for (let arg, i = 0; i < args.length; i++) {\n            switch (typeof(arg = args[i])) {\n                case 'object':\n                    if (arg === null) break;\n                    // falls through\n                case 'function': {\n                    if (pyproxy in arg && !arg[pyproxy].shared?.gcRegistered) {\n                        intercept = false;\n                        let proxy = proxies.get(arg)?.deref();\n                        if (!proxy) {\n                            proxy = to_js(arg);\n                            const wr = new WeakRef(proxy);\n                            proxies.set(arg, wr);\n                            proxies.set(proxy, wr);\n                        }\n                        args[i] = proxy;\n                        intercept = true;\n                    }\n                    break;\n                }\n            }\n        }\n    };\n\n    // the patch\n    Object.defineProperties(FunctionPrototype, {\n        apply: {\n            value(context, args) {\n                if (intercept) patch(args);\n                return apply(this, context, args);\n            }\n        },\n        call: {\n            value(context, ...args) {\n                if (intercept) patch(args);\n                return apply(this, context, args);\n            }\n        }\n    });\n};\n\nconst progress = createProgress('py');\nconst indexURLs = new WeakMap();\n\nexport default {\n    type,\n    module: (version = '0.27.7') =>\n        `https://cdn.jsdelivr.net/pyodide/v${version}/full/pyodide.mjs`,\n    async engine({ loadPyodide, version }, config, url, baseURL) {\n        progress('Loading Pyodide');\n        let { packages, index_urls } = config;\n        if (packages) packages = packages.map(fixedRelative, baseURL);\n        progress('Loading Storage');\n        const indexURL = url.slice(0, url.lastIndexOf('/'));\n        // each pyodide version shares its own cache\n        const storage = new IDBMapSync(`${indexURL}@${version}`);\n        const options = { indexURL };\n        // 0.28.0 has a bug where lockFileURL cannot be used directly\n        // https://github.com/pyodide/pyodide/issues/5736\n        const save = config.packages_cache !== 'never' && version !== '0.28.0';\n        await storage.sync();\n        // packages_cache = 'never' means: erase the whole DB\n        if (!save) storage.clear();\n        // otherwise check if cache is known\n        else if (packages) {\n            // packages_cache = 'passthrough' means: do not use micropip.install\n            if (config.packages_cache === 'passthrough') {\n                options.packages = packages;\n                packages = null;\n                storage.clear();\n            }\n            else {\n                packages = packages.sort();\n                // packages are uniquely stored as JSON key\n                const key = stringify(packages);\n                if (storage.has(key)) {\n                    const blob = new Blob(\n                        [storage.get(key)],\n                        { type: 'application/json' },\n                    );\n                    // this should be used to bootstrap loadPyodide\n                    options.lockFileURL = URL.createObjectURL(blob);\n                    // versions are not currently understood by pyodide when\n                    // a lockFileURL is used instead of micropip.install(packages)\n                    // https://github.com/pyodide/pyodide/issues/5135#issuecomment-2441038644\n                    // https://github.com/pyscript/pyscript/issues/2245\n                    options.packages = packages.map(name => name.split(/[>=<]=/)[0]);\n                    packages = null;\n                }\n            }\n        }\n        progress('Loaded Storage');\n        const { stderr, stdout, get } = stdio();\n        const interpreter = await get(\n            loadPyodide({ stderr, stdout, ...options }),\n        );\n        if (config.debug) interpreter.setDebug(true);\n        const py_imports = importPackages.bind(interpreter);\n        if (index_urls) indexURLs.set(interpreter, index_urls);\n        loader.set(interpreter, py_imports);\n        await loadProgress(this, progress, interpreter, config, baseURL);\n        // if cache wasn't know, import and freeze it for the next time\n        if (packages) await py_imports(packages, storage, save);\n        await storage.close();\n        if (options.lockFileURL) URL.revokeObjectURL(options.lockFileURL);\n        progress('Loaded Pyodide');\n        if (config.experimental_create_proxy === 'auto') {\n            interpreter.runPython([\n                'import js',\n                'from pyodide.ffi import to_js',\n                'o=js.Object.fromEntries',\n                'js.experimental_create_proxy=lambda r:to_js(r,dict_converter=o)'\n            ].join(';'), { globals: interpreter.toPy({}) });\n            to_js = globalThis.experimental_create_proxy;\n            delete globalThis.experimental_create_proxy;\n            [pyproxy] = Reflect.ownKeys(to_js).filter(\n                k => (\n                    typeof k === 'symbol' &&\n                    String(k) === 'Symbol(pyproxy.attrs)'\n                )\n            );\n            override(true);\n        }\n        return interpreter;\n    },\n    registerJSModule,\n    run: overrideMethod(run),\n    runAsync: overrideMethod(runAsync),\n    runEvent: overrideMethod(runEvent),\n    transform: (interpreter, value) => apply(transform, interpreter, [value]),\n    writeFile: (interpreter, path, buffer, url) => {\n        const format = getFormat(path, url);\n        if (format) {\n            return interpreter.unpackArchive(buffer, format, {\n                extractDir: path.slice(0, -1)\n            });\n        }\n        const { FS, PATH, _module: { PATH_FS } } = interpreter;\n        return writeFile({ FS, PATH, PATH_FS }, path, buffer);\n    },\n};\n\nfunction transform(value) {\n    const { ffi: { PyProxy } } = this;\n    if (value && typeof value === 'object') {\n        if (value instanceof PyProxy) return value.toJs(toJsOptions);\n        // I believe this case is for LiteralMap which is not a PyProxy\n        // and yet it needs to be re-converted to something useful.\n        if (value instanceof Map) return new Map([...value.entries()]);\n        if (isArray(value)) return value.map(transform, this);\n    }\n    return value;\n}\n\n// exposed utility to import packages via polyscript.lazy_py_modules\nasync function importPackages(packages, storage, save = false) {\n    // temporary patch/fix console.log which is used\n    // not only by Pyodide but by micropip too and there's\n    // no way to intercept those calls otherwise\n    const { log } = console;\n    const _log = (detail, ...rest) => {\n        log(detail, ...rest);\n        console.log = log;\n        progress(detail);\n        console.log = _log;\n    };\n    console.log = _log;\n    await this.loadPackage('micropip');\n    const micropip = this.pyimport('micropip');\n    if (indexURLs.has(this)) micropip.set_index_urls(indexURLs.get(this));\n    await micropip.install(packages, { keep_going: true });\n    console.log = log;\n    if (save && (storage instanceof IDBMapSync)) {\n        const frozen = micropip.freeze();\n        storage.set(stringify(packages), frozen);\n    }\n    micropip.destroy();\n}\n/* c8 ignore stop */\n","import fetch from '@webreflection/fetch';\n\nimport { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths } from './_utils.js';\n\nconst type = 'ruby-wasm-wasi';\nconst jsType = type.replace(/\\W+/g, '_');\n\n// MISSING:\n//  * there is no VFS apparently or I couldn't reach any\n//  * I've no idea how to override the stderr and stdout\n//  * I've no idea how to import packages\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    experimental: true,\n    module: (version = '2.7.1') =>\n        `https://cdn.jsdelivr.net/npm/@ruby/3.2-wasm-wasi@${version}/dist/browser/+esm`,\n    async engine({ DefaultRubyVM }, config, url, baseURL) {\n        url = url.replace(/\\/browser\\/\\+esm$/, '/ruby.wasm');\n        const buffer = await fetch(url).arrayBuffer();\n        const module = await WebAssembly.compile(buffer);\n        const { vm: interpreter } = await DefaultRubyVM(module);\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields (i.e. $xworker)\n    registerJSModule(interpreter, name, value) {\n        name = name.replace(/\\W+/g, '__');\n        const id = `__module_${jsType}_${name}`;\n        globalThis[id] = value;\n        this.run(interpreter, `require \"js\";$${name}=JS.global[:${id}]`);\n        delete globalThis[id];\n    },\n    run: (interpreter, code, ...args) => interpreter.eval(dedent(code), ...args),\n    runAsync: (interpreter, code, ...args) => interpreter.evalAsync(dedent(code), ...args),\n    async runEvent(interpreter, code, event) {\n        // patch common xworker.onmessage/onerror cases\n        if (/^xworker\\.(on\\w+)$/.test(code)) {\n            const { $1: name } = RegExp;\n            const id = `__module_${jsType}_event`;\n            globalThis[id] = event;\n            this.run(\n                interpreter,\n                `require \"js\";$xworker.call(\"${name}\",JS.global[:${id}])`,\n            );\n            delete globalThis[id];\n        } else {\n            // Experimental: allows only events by fully qualified method name\n            const method = this.run(interpreter, `method(:${code})`);\n            await method.call(code, interpreter.wrap(event));\n        }\n    },\n    transform: (_, value) => value,\n    writeFile: () => {\n        throw new Error(`writeFile is not supported in ${type}`);\n    },\n};\n/* c8 ignore stop */\n","import { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths, writeFileShim } from './_utils.js';\nimport { io, stdio } from './_io.js';\n\nconst type = 'wasmoon';\n\n// MISSING:\n//  * I've no idea how to import packages\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    module: (version = '1.16.0') =>\n        `https://cdn.jsdelivr.net/npm/wasmoon@${version}/+esm`,\n    async engine({ LuaFactory, LuaLibraries }, config, _, baseURL) {\n        const { stderr, stdout, get } = stdio();\n        const interpreter = await get(new LuaFactory().createEngine());\n        interpreter.global.getTable(LuaLibraries.Base, (index) => {\n            interpreter.global.setField(index, 'print', stdout);\n            interpreter.global.setField(index, 'printErr', stderr);\n        });\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields\n    registerJSModule: (interpreter, name, value) => {\n        interpreter.global.set(name, value);\n    },\n    run: (interpreter, code, ...args) => {\n        try {\n            return interpreter.doStringSync(dedent(code), ...args);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    runAsync: async (interpreter, code, ...args) => {\n        try {\n            return await interpreter.doString(dedent(code), ...args);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    runEvent: async (interpreter, code, event) => {\n        // allows method(event) as well as namespace.method(event)\n        // it does not allow fancy brackets names for now\n        const [name, ...keys] = code.split('.');\n        let target = interpreter.global.get(name);\n        let context;\n        for (const key of keys) [context, target] = [target, target[key]];\n        try {\n            await target.call(context, event);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    transform: (_, value) => value,\n    writeFile: (\n        {\n            cmodule: {\n                module: { FS },\n            },\n        },\n        path,\n        buffer,\n    ) => writeFileShim(FS, path, buffer),\n};\n/* c8 ignore stop */\n","import { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths } from './_utils.js';\nimport { io, stdio } from './_io.js';\n\nconst type = 'webr';\nconst r = new WeakMap();\nconst fr = new FinalizationRegistry(fn => fn());\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst run = async (interpreter, code) => {\n  const { shelter, destroy, io } = r.get(interpreter);\n  const { output, result } = await shelter.captureR(dedent(code));\n  for (const { type, data } of output) io[type](data);\n  fr.register(result, destroy);\n  return result;\n};\n\nexport default {\n    type,\n    experimental: true,\n    module: (version = '0.5.5-dev') =>\n        `https://cdn.jsdelivr.net/npm/webr@${version}/dist/webr.mjs`,\n    async engine(module, config, _, baseURL) {\n        const { get } = stdio();\n        const interpreter = new module.WebR();\n        await get(interpreter.init().then(() => interpreter));\n        const shelter = await new interpreter.Shelter();\n        r.set(interpreter, {\n          module,\n          shelter,\n          destroy: shelter.destroy.bind(shelter),\n          io: io.get(interpreter),\n        });\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields (i.e. $xworker)\n    registerJSModule(_, name) {\n        console.warn(`Experimental interpreter: module ${name} is not supported (yet)`);\n        // TODO: as complex JS objects / modules are not allowed\n        // it's not clear how we can bind anything or import a module\n        // in a context that doesn't understand methods from JS\n        // https://docs.r-wasm.org/webr/latest/convert-js-to-r.html#constructing-r-objects-from-javascript-objects\n    },\n    run,\n    runAsync: run,\n    async runEvent(interpreter, code, event) {\n        // TODO: WebR cannot convert exoteric objects or any literal\n        // to an easy to reason about data/frame ... that conversion\n        // is reserved for the future:\n        // https://docs.r-wasm.org/webr/latest/convert-js-to-r.html#constructing-r-objects-from-javascript-objects\n        await interpreter.evalRVoid(`${code}(event)`, {\n          env: { event: { type: [ event.type ] } }\n        });\n    },\n    transform: (_, value) => value,\n    writeFile: () => {\n        // MAYBE ???\n    },\n};\n/* c8 ignore stop */\n","// ⚠️ Part of this file is automatically generated\n//    The :RUNTIMES comment is a delimiter and no code should be written/changed after\n//    See rollup/build_interpreters.cjs to know more\n\n/** @type {Map<string, object>} */\nexport const registry = new Map();\n\n/** @type {Map<string, object>} */\nexport const configs = new Map();\n\n/** @type {string[]} */\nexport const selectors = [];\n\n/** @type {string[]} */\nexport const prefixes = [];\n\n/* c8 ignore start */\nexport const interpreter = new Proxy(new Map(), {\n    get(map, id) {\n        if (!map.has(id)) {\n            const [type, ...rest] = id.split('@');\n            const interpreter = registry.get(type);\n            const url = /^(?:\\.?\\.?\\/|[a-z0-9-]+:\\/\\/)/i.test(rest)\n                ? rest.join('@')\n                : interpreter.module(...rest);\n            map.set(id, {\n                url,\n                module: import(/* webpackIgnore: true */url),\n                engine: interpreter.engine.bind(interpreter),\n            });\n        }\n        const { url, module, engine } = map.get(id);\n        return (config, baseURL) =>\n            module.then((module) => {\n                configs.set(id, config);\n                return engine(module, config, url, baseURL);\n            });\n    },\n});\n/* c8 ignore stop */\n\nconst register = (interpreter) => {\n    for (const type of [].concat(interpreter.type)) {\n        registry.set(type, interpreter);\n        selectors.push(`script[type=\"${type}\"]`);\n        prefixes.push(`${type}-`);\n    }\n};\n\n//:RUNTIMES\nimport dummy from './interpreter/dummy.js';\nimport micropython from './interpreter/micropython.js';\nimport pyodide from './interpreter/pyodide.js';\nimport ruby_wasm_wasi from './interpreter/ruby-wasm-wasi.js';\nimport wasmoon from './interpreter/wasmoon.js';\nimport webr from './interpreter/webr.js';\nfor (const interpreter of [dummy, micropython, pyodide, ruby_wasm_wasi, wasmoon, webr])\n    register(interpreter);\n","/**\n * Given a CSS selector, returns the first matching node, if any.\n * @param {string} css the CSS selector to query\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Element?} the found element, if any\n */\nconst $ = (css, root = document) => root.querySelector(css);\n\n/**\n * Given a CSS selector, returns a list of all matching nodes.\n * @param {string} css the CSS selector to query\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Element[]} a list of found nodes\n */\nconst $$ = (css, root = document) => [...root.querySelectorAll(css)];\n\n/**\n * Given a XPath selector, returns a list of all matching nodes.\n * @param {string} path the XPath selector to evaluate\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Node[]} a list of found nodes (elements, attributes, text, comments)\n */\nconst $x = (path, root = document) => {\n  const expression = (new XPathEvaluator).createExpression(path);\n  const xpath = expression.evaluate(root, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE);\n  const result = [];\n  for (let i = 0, {snapshotLength} = xpath; i < snapshotLength; i++)\n    result.push(xpath.snapshotItem(i));\n  return result;\n};\n\nexport {$, $$, $x};\n","import withResolvers from '@webreflection/utils/with-resolvers';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const workers = new Proxy(new Map, {\n  get(map, name) {\n    if (!map.has(name))\n      map.set(name, withResolvers());\n    return map.get(name);\n  },\n});\n\n// filter out forever pending Promises in Pyodide\n// @issue https://github.com/pyscript/pyscript/issues/2106\nconst ignore = new Set(['__dict__', 'constructor', 'get', 'has', 'includes', 'next', 'set', 'then']);\n\nexport const workersHandler = new Proxy(Object.freeze({}), {\n  // guard against forever pending Promises in Pyodide\n  // @issue https://github.com/pyscript/pyscript/issues/2106\n  get: (_, name) => (typeof name === 'string' && !ignore.has(name)) ?\n    workers[name].promise.then(w => w.sync) :\n    void 0,\n});\n/* c8 ignore stop */\n","let i = 0;\r\n\r\n// extras\r\nexport const UNREF = i++;\r\nexport const ASSIGN = i++;\r\nexport const EVALUATE = i++;\r\nexport const GATHER = i++;\r\nexport const QUERY = i++;\r\n\r\n// traps\r\nexport const APPLY = i++;\r\nexport const CONSTRUCT = i++;\r\nexport const DEFINE_PROPERTY = i++;\r\nexport const DELETE_PROPERTY = i++;\r\nexport const GET = i++;\r\nexport const GET_OWN_PROPERTY_DESCRIPTOR = i++;\r\nexport const GET_PROTOTYPE_OF = i++;\r\nexport const HAS = i++;\r\nexport const IS_EXTENSIBLE = i++;\r\nexport const OWN_KEYS = i++;\r\nexport const PREVENT_EXTENSIONS = i++;\r\nexport const SET = i++;\r\nexport const SET_PROTOTYPE_OF = i++;\r\n","import { toTag } from './global.js';\r\nimport { fromArray } from './index.js';\r\n\r\n/** @typedef {[ArrayBufferLike|number[], number]} BufferDetails */\r\n/** @typedef {[string, BufferDetails, number, number]} ViewDetails */\r\n\r\n/**\r\n * @param {number} length\r\n * @param {number} maxByteLength\r\n * @returns {ArrayBufferLike}\r\n */\r\nconst resizable = (length, maxByteLength) => new ArrayBuffer(length, { maxByteLength });\r\n\r\n/**\r\n * @param {BufferDetails} details \r\n * @param {boolean} direct\r\n * @returns {ArrayBufferLike}\r\n */\r\nexport const fromBuffer = ([value, maxByteLength], direct) => {\r\n  const length = direct ? /** @type {ArrayBufferLike} */ (value).byteLength : /** @type {number[]} */ (value).length;\r\n  if (direct) {\r\n    if (maxByteLength) {\r\n      const buffer = resizable(length, maxByteLength);\r\n      new Uint8Array(buffer).set(new Uint8Array(/** @type {ArrayBufferLike} */ (value)));\r\n      value = buffer;\r\n    }\r\n  }\r\n  else {\r\n    const buffer = maxByteLength ? resizable(length, maxByteLength) : new ArrayBuffer(length);\r\n    new Uint8Array(buffer).set(/** @type {number[]} */ (value));\r\n    value = buffer;\r\n  }\r\n  return /** @type {ArrayBufferLike} */ (value);\r\n};\r\n\r\n/**\r\n * @param {ViewDetails} details\r\n * @param {boolean} direct\r\n */\r\nexport const fromView = ([name, args, byteOffset, length], direct) => {\r\n  const buffer = fromBuffer(args, direct);\r\n  const Class = globalThis[name];\r\n  return length ? new Class(buffer, byteOffset, length) : new Class(buffer, byteOffset);\r\n};\r\n\r\n/**\r\n * @param {ArrayBufferLike} value\r\n * @param {boolean} direct\r\n * @returns {BufferDetails}\r\n */\r\nexport const toBuffer = (value, direct) => [\r\n  direct ? value : fromArray(new Uint8Array(value)),\r\n  //@ts-ignore\r\n  value.resizable ? value.maxByteLength : 0\r\n];\r\n\r\n/**\r\n * @param {ArrayBufferView} value\r\n * @param {boolean} direct\r\n * @returns {ViewDetails}\r\n */\r\nexport const toView = (value, direct) => {\r\n  //@ts-ignore\r\n  const { BYTES_PER_ELEMENT, byteOffset, buffer, length } = value;\r\n  return [\r\n    toTag(value),\r\n    toBuffer(buffer, direct),\r\n    byteOffset,\r\n    length !== ((buffer.byteLength - byteOffset) / BYTES_PER_ELEMENT) ? length : 0,\r\n  ];\r\n};\r\n","const brackets = /\\[('|\")?(.+?)\\1\\]/g;\r\n\r\nconst keys = (target, key) => target?.[key];\r\n\r\n/**\r\n * Parses the given path and returns the value at the given target.\r\n * @param {any} target\r\n * @param {string} path\r\n * @returns {any}\r\n */\r\nexport default (target, path) => path.replace(brackets, '.$2').split('.').reduce(keys, target);\r\n","import query from './query.js';\r\n\r\n/**\r\n * Parses each given path and returns each value at the given target.\r\n * @param {any} target\r\n * @param  {...(string|symbol)[]} keys\r\n * @returns {any[]}\r\n */\r\nexport default (target, ...keys) => keys.map(asResult, target);\r\n\r\nfunction asResult(key) {\r\n  return typeof key === 'string' ? query(this, key) : this[key];\r\n}\r\n","// import DEBUG from './utils/debug.js';\r\n\r\nimport {\r\n  UNREF,\r\n  ASSIGN,\r\n  EVALUATE,\r\n  GATHER,\r\n  QUERY,\r\n\r\n  APPLY,\r\n  CONSTRUCT,\r\n  DEFINE_PROPERTY,\r\n  DELETE_PROPERTY,\r\n  GET,\r\n  GET_OWN_PROPERTY_DESCRIPTOR,\r\n  GET_PROTOTYPE_OF,\r\n  HAS,\r\n  IS_EXTENSIBLE,\r\n  OWN_KEYS,\r\n  SET,\r\n  SET_PROTOTYPE_OF,\r\n} from './utils/traps.js';\r\n\r\nimport {\r\n  DIRECT,\r\n  OBJECT,\r\n  ARRAY,\r\n  FUNCTION,\r\n  REMOTE,\r\n  SYMBOL,\r\n  BIGINT,\r\n  VIEW,\r\n  BUFFER,\r\n\r\n  REMOTE_OBJECT,\r\n  REMOTE_ARRAY,\r\n  REMOTE_FUNCTION,\r\n} from './types.js';\r\n\r\nimport { ImageData } from './direct/web.js';\r\n\r\nimport {\r\n  fromSymbol,\r\n  toSymbol,\r\n} from './utils/symbol.js';\r\n\r\nimport {\r\n  toBuffer,\r\n  toView,\r\n} from './utils/typed.js';\r\n\r\nimport {\r\n  assign,\r\n  isArray,\r\n  isView,\r\n  fromKey,\r\n  toKey,\r\n  identity,\r\n  loopValues,\r\n  object,\r\n  tv,\r\n} from './utils/index.js';\r\n\r\nimport gather from './utils/gather.js';\r\nimport query from './utils/query.js';\r\n\r\nimport heap from './utils/heap.js';\r\n\r\nconst Node = globalThis.Node || class Node {};\r\n\r\nconst {\r\n  apply,\r\n  construct,\r\n  defineProperty,\r\n  deleteProperty,\r\n  get,\r\n  getOwnPropertyDescriptor,\r\n  getPrototypeOf,\r\n  has,\r\n  isExtensible,\r\n  ownKeys,\r\n  set,\r\n  setPrototypeOf,\r\n} = Reflect;\r\n\r\n/**\r\n * @typedef {Object} LocalOptions Optional utilities used to orchestrate local <-> remote communication.\r\n * @property {Function} [reflect=identity] The function used to reflect operations via the remote receiver. Currently only `apply` and `unref` are supported.\r\n * @property {Function} [transform=identity] The function used to transform local values into simpler references that the remote side can understand.\r\n * @property {Function} [remote=identity] The function used to intercept remote invokes *before* these happen. Usable to sync `events` or do other tasks.\r\n * @property {Function} [module] The function used to import modules when remote asks to `import(...)` something.\r\n * @property {boolean} [buffer=false] Optionally allows direct buffer serialization breaking JSON compatibility.\r\n * @property {number} [timeout=-1] Optionally allows remote values to be cached when possible for a `timeout` milliseconds value. `-1` means no timeout.\r\n */\r\n\r\n/**\r\n * @param {LocalOptions} options\r\n * @returns\r\n */\r\nexport default ({\r\n  reflect = identity,\r\n  transform = identity,\r\n  remote = identity,\r\n  module = name => import(name),\r\n  buffer = false,\r\n  timeout = -1,\r\n} = object) => {\r\n  // received values arrive via postMessage so are compatible\r\n  // with the structured clone algorithm\r\n  const fromValue = (value, cache = new Map) => {\r\n    if (!isArray(value)) return value;\r\n    const [t, v] = value;\r\n    switch (t) {\r\n      case OBJECT: {\r\n        if (v === null) return globalThis;\r\n        let cached = cache.get(value);\r\n        if (!cached) {\r\n          cached = v;\r\n          cache.set(value, v);\r\n          for (const k in v) v[k] = fromValue(v[k], cache);\r\n        }\r\n        return cached;\r\n      }\r\n      case ARRAY: {\r\n        return cache.get(value) || (\r\n          cache.set(value, v),\r\n          fromValues(v, cache)\r\n        );\r\n      }\r\n      case FUNCTION: {\r\n        let wr = weakRefs.get(v), fn = wr?.deref();\r\n        if (!fn) {\r\n          /* c8 ignore start */\r\n          if (wr) fr.unregister(wr);\r\n          /* c8 ignore stop */\r\n          fn = function (...args) {\r\n            remote.apply(this, args);\r\n\r\n            // values reflected asynchronously are not passed stringified\r\n            // because it makes no sense to use Atomics and SharedArrayBuffer\r\n            // to transfer these ... yet these must reflect the current state\r\n            // on this local side of affairs.\r\n            for (let i = 0, length = args.length; i < length; i++)\r\n              args[i] = toValue(args[i]);\r\n\r\n            const result = reflect(APPLY, v, toValue(this), args);\r\n            return result.then(fromValue);\r\n          };\r\n          wr = new WeakRef(fn);\r\n          weakRefs.set(v, wr);\r\n          fr.register(fn, v, wr);\r\n        }\r\n        return fn;\r\n      }\r\n      case SYMBOL: return fromSymbol(v);\r\n      default: return (t & REMOTE) ? ref(v) : v;\r\n    }\r\n  };\r\n\r\n  // OBJECT, DIRECT, VIEW, BUFFER, REMOTE_ARRAY, REMOTE_OBJECT, REMOTE_FUNCTION, SYMBOL, BIGINT\r\n  /**\r\n   * Converts values into TypeValue pairs when these\r\n   * are not JSON compatible (symbol, bigint) or\r\n   * local (functions, arrays, objects, globalThis).\r\n   * @param {any} value the current value\r\n   * @returns {any} the value as is or its TypeValue counterpart\r\n   */\r\n  const toValue = value => {\r\n    switch (typeof value) {\r\n      case 'object': {\r\n        if (value === null) break;\r\n        if (value === globalThis) return globalTarget;\r\n        const $ = transform(value);\r\n        return ((hasDirect && direct.has($)) || $ instanceof ImageData) ?\r\n          tv(DIRECT, $) : (\r\n          isView($) ?\r\n            tv(VIEW, toView($, buffer)) : (\r\n              $ instanceof ArrayBuffer ?\r\n                tv(BUFFER, toBuffer($, buffer)) :\r\n                tv(isArray($) ? REMOTE_ARRAY : REMOTE_OBJECT, id($))\r\n            )\r\n        );\r\n      }\r\n      case 'function': return tv(REMOTE_FUNCTION, id(transform(value)));\r\n      case 'symbol': return tv(SYMBOL, toSymbol(value));\r\n      case 'bigint': return tv(BIGINT, value.toString());\r\n    }\r\n    return value;\r\n  };\r\n\r\n  const fromValues = loopValues(fromValue);\r\n  const fromKeys = loopValues(fromKey);\r\n  const toKeys = loopValues(toKey);\r\n\r\n  const { clear, id, ref, unref } = heap();\r\n\r\n  const arrayKey = /^(?:[0-9]+|length)$/;\r\n  const memoize = -1 < timeout;\r\n  const weakRefs = new Map;\r\n  const globalTarget = tv(OBJECT, null);\r\n  const fr = new FinalizationRegistry(v => {\r\n    weakRefs.delete(v);\r\n    reflect(UNREF, v);\r\n  });\r\n\r\n  let hasDirect = false, direct;\r\n\r\n  return {\r\n    assign,\r\n    gather,\r\n    query,\r\n\r\n    /**\r\n     * Alows local references to be passed directly to the remote receiver,\r\n     * either as copy or serliazied values (it depends on the implementation).\r\n     * @template {WeakKey} T\r\n     * @param {T} value\r\n     * @returns {T}\r\n     */\r\n    direct(value) {\r\n      if (!hasDirect) {\r\n        // if (DEBUG) console.debug('DIRECT');\r\n        hasDirect = true;\r\n        direct = new WeakSet;\r\n      }\r\n      direct.add(value);\r\n      return value;\r\n    },\r\n\r\n    /**\r\n     * Provide a portable API that just invokes the given callback with the given arguments.\r\n     * @param {Function} callback\r\n     * @param  {...any} args\r\n     * @returns {any}\r\n     */\r\n    evaluate: (callback, ...args) => apply(callback, null, args),\r\n\r\n    /**\r\n     * This callback reflects locally every remote call.\r\n     * It accepts TypeValue pairs but it always returns a string\r\n     * to make it possible to use Atomics and SharedArrayBuffer.\r\n     * @param {number} method\r\n     * @param {number?} uid\r\n     * @param  {...any} args\r\n     * @returns\r\n     */\r\n    reflect(method, uid, ...args) {\r\n      // if (DEBUG) console.debug(method === UNREF ? 'GC' : 'ROUNDTRIP');\r\n      const isGlobal = uid === null;\r\n      const target = isGlobal ? globalThis : ref(uid);\r\n      // the order is by most common use cases\r\n      switch (method) {\r\n        case GET: {\r\n          const key = fromKey(args[0]);\r\n          const asModule = isGlobal && key === 'import';\r\n          const value = asModule ? module : get(target, key);\r\n          const result = toValue(value);\r\n          if (!memoize) return result;\r\n          let cache = asModule, t = target, d;\r\n          if (!asModule && !(\r\n            // avoid caching DOM related stuff (all accessors)\r\n            (t instanceof Node) ||\r\n            // avoid also caching Array length or index accessors\r\n            (isArray(t) && typeof key === 'string' && arrayKey.test(key))\r\n          )) {\r\n            // cache unknown properties but ...\r\n            if (key in target) {\r\n              // ... avoid caching accessors!\r\n              while (!(d = getOwnPropertyDescriptor(t, key))) {\r\n                t = getPrototypeOf(t);\r\n                /* c8 ignore start */\r\n                // this is an emergency case for \"unknown\" values\r\n                if (!t) break;\r\n                /* c8 ignore stop */\r\n              }\r\n              cache = !!d && 'value' in d;\r\n            }\r\n            // accessing non existent properties could be repeated\r\n            // for no reason whatsoever and it gets removed once\r\n            // the property is eventually set so ...\r\n            else cache = true;\r\n          }\r\n          return [cache, result];\r\n        }\r\n        case APPLY: {\r\n          const map = new Map;\r\n          return toValue(apply(target, fromValue(args[0], map), fromValues(args[1], map)));\r\n        }\r\n        case SET: return set(target, fromKey(args[0]), fromValue(args[1]));\r\n        case HAS: return has(target, fromKey(args[0]));\r\n        case OWN_KEYS: return toKeys(ownKeys(target), weakRefs);\r\n        case CONSTRUCT: return toValue(construct(target, fromValues(args[0])));\r\n        case GET_OWN_PROPERTY_DESCRIPTOR: {\r\n          const descriptor = getOwnPropertyDescriptor(target, fromKey(args[0]));\r\n          if (descriptor) {\r\n            for (const k in descriptor)\r\n              descriptor[k] = toValue(descriptor[k]);\r\n          }\r\n          return descriptor;\r\n        }\r\n        case DEFINE_PROPERTY: return defineProperty(target, fromKey(args[0]), fromValue(args[1]));\r\n        case DELETE_PROPERTY: return deleteProperty(target, fromKey(args[0]));\r\n        case GET_PROTOTYPE_OF: return toValue(getPrototypeOf(target));\r\n        case SET_PROTOTYPE_OF: return setPrototypeOf(target, fromValue(args[0]));\r\n        case ASSIGN: {\r\n          assign(target, fromValue(args[0]));\r\n          return;\r\n        }\r\n        case EVALUATE: {\r\n          const body = fromValue(args[0]);\r\n          const fn = Function(`return(${body}).apply(null,arguments)`);\r\n          return toValue(apply(fn, null, fromValues(args[1])));\r\n        }\r\n        case GATHER: {\r\n          args = fromKeys(args[0], weakRefs);\r\n          for (let k, i = 0, length = args.length; i < length; i++) {\r\n            k = args[i];\r\n            args[i] = toValue(typeof k === 'string' ? query(target, k) : target[k]);\r\n          }\r\n          return args;\r\n        }\r\n        case QUERY: return toValue(query(target, args[0]));\r\n        case UNREF: return unref(uid);\r\n        case IS_EXTENSIBLE: return isExtensible(target);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Terminates the local side of the communication,\r\n     * erasing and unregistering all the cached references.\r\n     */\r\n    terminate() {\r\n      for (const wr of weakRefs.values()) fr.unregister(wr);\r\n      weakRefs.clear();\r\n      clear();\r\n    },\r\n  };\r\n};\r\n","/**\r\n * @template T\r\n * @typedef {Object} Heap\r\n * @property {() => void} clear\r\n * @property {(ref:T) => number} id\r\n * @property {(id:number) => T} ref\r\n * @property {(id:number) => boolean} unref\r\n */\r\n\r\n/**\r\n * Create a heap-like utility to hold references in memory.\r\n * @param {number} [id=0] The initial `id` which is `0` by default.\r\n * @param {Map<number, any>} [ids=new Map] The used map of ids to references.\r\n * @param {Map<any, number>} [refs=new Map] The used map of references to ids.\r\n * @returns {Heap<any>}\r\n */\r\nexport default (id = 0, ids = new Map, refs = new Map) => ({\r\n  clear: () => {\r\n    ids.clear();\r\n    refs.clear();\r\n  },\r\n  id: ref => {\r\n    let uid = refs.get(ref);\r\n    if (uid === void 0) {\r\n      /* c8 ignore next */\r\n      while (ids.has(uid = id++));\r\n      ids.set(uid, ref);\r\n      refs.set(ref, uid);\r\n    }\r\n    return uid;\r\n  },\r\n  ref: id => ids.get(id),\r\n  unref: id => {\r\n    refs.delete(ids.get(id));\r\n    return ids.delete(id);\r\n  },\r\n});\r\n","// This is an optional utility that needs to patch `addEventListener`.\r\n// Its `default` return value can be used as `remote` field when\r\n// the `local({ remote: ... })` is invoked.\r\n\r\nconst { addEventListener } = EventTarget.prototype;\r\nconst eventsHandler = new WeakMap;\r\nReflect.defineProperty(EventTarget.prototype, 'addEventListener', {\r\n  /**\r\n   * Intercepts `options` with an `invoke` field that could contain\r\n   * `preventDefault`, `stopPropagation` or `stopImmediatePropagation`\r\n   * strings so that when the event will be triggered locally,\r\n   * the remote side can still enforce one of those operations, even if\r\n   * invoked asynchronously (those calls will happen on the local thread).\r\n   * \r\n   * @param {string} type\r\n   * @param {EventListenerOrEventListenerObject?} callback\r\n   * @param  {AddEventListenerOptions & { invoke?: string|string[]} | boolean} options\r\n   * @returns {void}\r\n   */\r\n  value(type, callback, options) {\r\n    //@ts-ignore\r\n    const invoke = options?.invoke;\r\n    if (invoke) {\r\n      let map = eventsHandler.get(this);\r\n      if (!map) eventsHandler.set(this, (map = new Map));\r\n      map.set(type, [].concat(invoke));\r\n      //@ts-ignore\r\n      delete options.invoke;\r\n    }\r\n    return addEventListener.apply(this, arguments);\r\n  },\r\n});\r\n\r\n/**\r\n * This utility is used to perform `preventDefault` or `stopPropagation`\r\n * on events that are triggered via functions defined on the remote side.\r\n * It is meant to be passed as `remote`, or as part of `remote` field when\r\n * the `local({ remote: ... })` is invoked, meaning it happens right before\r\n * the *remote* event handler is requested to be called.\r\n * @param {Event} event\r\n */\r\nexport default event => {\r\n  const { currentTarget, target, type } = event;\r\n  const methods = eventsHandler.get(currentTarget || target)?.get(type);\r\n  if (methods) for (const method of methods) event[method]();\r\n};\r\n","// ⚠️ AUTOMATICALLY GENERATED - DO NOT CHANGE\nconst CHANNEL = 'a26fee79';\nexport const MAIN = '=' + CHANNEL;\nexport const WORKER = '-' + CHANNEL;\n","//@ts-check\r\n\r\nimport withResolvers from '@webreflection/utils/with-resolvers';\r\n\r\n/**\r\n * @template V\r\n * @callback Resolve\r\n * @param {V?} [value]\r\n * @returns {void}\r\n */\r\n\r\n/**\r\n * @callback Reject\r\n * @param {any?} [error]\r\n * @returns {void}\r\n */\r\n\r\n/**\r\n * @template V\r\n * @typedef {object} Resolvers\r\n * @prop {Promise<V>} promise\r\n * @prop {Resolve<V>} resolve\r\n * @prop {Reject} reject\r\n */\r\n\r\n/**\r\n * @template K,V\r\n * @typedef {() => [K, Promise<V>]} Next\r\n */\r\n\r\n/**\r\n * @template K,V\r\n * @callback Resolver\r\n * @param {K} uid\r\n * @param {V?} [value]\r\n * @param {any?} [error]\r\n */\r\n\r\n/**\r\n * @template K,V\r\n * @typedef {[Next<K,V>, Resolver<K,V>]} NextResolver\r\n */\r\n\r\n/**\r\n * @template K,V\r\n * @param {(id: number) => K} [as]\r\n * @returns\r\n */\r\nexport default (as = (id => /** @type {K} */(id))) => {\r\n  /** @type {Map<K,Resolvers<V>>} */\r\n  const map = new Map;\r\n  let id = 0;\r\n  return /** @type {NextResolver<K,V>} */([\r\n    /** @type {Next<K,V>} */\r\n    () => {\r\n      let uid;\r\n      do { uid = as(id++) }\r\n      while (map.has(uid));\r\n      const wr = /** @type {Resolvers<V>} */(/** @type {unknown} */(withResolvers()));\r\n      map.set(uid, wr);\r\n      return [uid, wr.promise];\r\n    },\r\n    /** @type {Resolver<K,V>} */\r\n    (uid, value, error) => {\r\n      const wr = map.get(uid);\r\n      map.delete(uid);\r\n      if (error) wr?.reject(error);\r\n      else wr?.resolve(value);\r\n    },\r\n  ]);\r\n};\r\n","//@ts-check\r\n\r\n/** @type {ArrayBuffer[]} */\r\nconst nothing = [];\r\n\r\n/** @type {WeakSet<ArrayBuffer[]>} */\r\nconst buffers = new WeakSet;\r\n\r\n/**\r\n * @param {boolean} check\r\n * @param {any[]} args\r\n * @returns\r\n */\r\nexport const get = (check, args) => {\r\n  let transfer = nothing;\r\n  if (check && buffers.has(args.at(-1) || nothing)) {\r\n    transfer = args.pop();\r\n    buffers.delete(transfer);\r\n  }\r\n  return transfer;\r\n};\r\n\r\n/**\r\n * @param  {...ArrayBuffer} args\r\n * @returns\r\n */\r\nexport const set = (...args) => {\r\n  buffers.add(args);\r\n  return args;\r\n};\r\n","//@ts-check\r\n\r\nlet { SharedArrayBuffer: SAB } = globalThis, native = true;\r\n\r\ntry {\r\n  //@ts-ignore due valid options not recognized\r\n  new SAB(4, { maxByteLength: 8 });\r\n}\r\ncatch (_) {\r\n  native = false;\r\n  SAB = /** @type {SharedArrayBufferConstructor} */(\r\n    /** @type {unknown} */(\r\n      class SharedArrayBuffer extends ArrayBuffer {\r\n        get growable() {\r\n          //@ts-ignore due valid property not recognized\r\n          return super.resizable;\r\n        }\r\n        /** @param {number} newLength */\r\n        grow(newLength) {\r\n          //@ts-ignore due valid method not recognized\r\n          super.resize(newLength);\r\n        }\r\n      }\r\n    )\r\n  );\r\n}\r\n\r\nexport { SAB as SharedArrayBuffer, native };\r\n","import { native } from '@webreflection/utils/shared-array-buffer';\r\n\r\nconst {\r\n  assign,\r\n  create,\r\n} = Object;\r\n\r\n/* c8 ignore start */\r\nconst ID = `coincident-${native ? crypto.randomUUID() : Math.random().toString(36).substring(2)}`;\r\n/* c8 ignore end */\r\n\r\nconst byteOffset = 2 * Int32Array.BYTES_PER_ELEMENT;\r\nconst minByteLength = 0x7FFF; // throws at 0xFFFF via .apply(...)\r\nconst maxByteLength = 0x1000000;\r\n\r\nconst defaults = {\r\n  // ⚠️ mandatory: first int32 to notify, second one to store the written length\r\n  byteOffset,\r\n};\r\n\r\nconst result = async (data, proxied, transform) => {\r\n  try {\r\n    const result = await proxied[data[1]].apply(null, data[2]);\r\n    data[1] = transform ? transform(result) : result;\r\n    data[2] = null;\r\n  }\r\n  catch (error) { data[2] = error }\r\n};\r\n\r\nconst set = (proxied, name, callback) => {\r\n  const ok = name !== 'then';\r\n  if (ok) proxied[name] = callback;\r\n  return ok;\r\n};\r\n\r\n/** @param {Event} event */\r\nconst stop = event => {\r\n  event.stopImmediatePropagation();\r\n  event.preventDefault();\r\n};\r\n\r\nexport const ffi_timeout = (options, fallback = -1) => (\r\n  options?.reflected_ffi_timeout ?? fallback\r\n);\r\n\r\nexport {\r\n  ID,\r\n  assign,\r\n  create,\r\n  defaults,\r\n  maxByteLength,\r\n  minByteLength,\r\n  native,\r\n  result,\r\n  set,\r\n  stop,\r\n};\r\n","import BROADCAST_CHANNEL_UID from './bid.js';\r\n\r\nimport { SharedArrayBuffer as SAB, native } from '@webreflection/utils/shared-array-buffer';\r\nimport withResolvers from '@webreflection/utils/with-resolvers';\r\nimport nextResolver from 'next-resolver';\r\nimport { ID, stop } from '../utils.js';\r\n\r\nconst { defineProperty } = Object;\r\n\r\nconst [next, resolve] = nextResolver();\r\nlet [bootstrap, promise] = next();\r\n\r\n/**\r\n * @callback sabayon\r\n * @param {string|URL} [serviceWorkerURL] - The URL of the service worker to register on the main thread.\r\n * @returns {Promise<void>} - A promise that resolves when the polyfill is ready.\r\n */\r\n\r\nlet register = /** @type {sabayon} */(() => promise);\r\n\r\nlet track = () => {};\r\n\r\nlet {\r\n  Atomics,\r\n  MessageChannel,\r\n  MessagePort,\r\n  SharedArrayBuffer,\r\n  Worker,\r\n  postMessage,\r\n} = globalThis;\r\n\r\nif (native) resolve(bootstrap);\r\nelse {\r\n  SharedArrayBuffer = SAB;\r\n\r\n  const views = new Map;\r\n\r\n  const addListener = (target, ...args) => {\r\n    target.addEventListener(...args);\r\n  };\r\n\r\n  // Web Worker\r\n  if ('importScripts' in globalThis) {\r\n    track = view => {\r\n      views.set(view, null);\r\n    };\r\n\r\n    const transform = data => {\r\n      const view = data[0];\r\n      const id = ids++;\r\n      views.set(view, id);\r\n      return [id, view, data];\r\n    };\r\n\r\n    const _postMessage = postMessage;\r\n    postMessage = function $postMessage(data, transfer) {\r\n      if (ready) {\r\n        const details = { ID: data.ID, data: transform(data.data) };\r\n        _postMessage(details, transfer);\r\n      }\r\n      else promise.then(() => this.postMessage(data, transfer));\r\n    }\r\n\r\n    MessagePort = class extends MessagePort {\r\n      postMessage(data, transfer) {\r\n        if (ready) super.postMessage(transform(data), transfer);\r\n        else promise.then(() => this.postMessage(data, transfer));\r\n      }\r\n    }\r\n\r\n    addListener(\r\n      globalThis,\r\n      'message',\r\n      event => {\r\n        stop(event);\r\n        resolve(bootstrap, event.data);\r\n      },\r\n      { once: true }\r\n    );\r\n\r\n    // <Atomics Patch>\r\n    const { wait } = Atomics;\r\n    const { parse } = JSON;\r\n\r\n    const Request = view => {\r\n      const xhr = new XMLHttpRequest;\r\n      xhr.open('POST', `${SW}?sabayon`, false);\r\n      xhr.setRequestHeader('Content-Type', 'application/json');\r\n      xhr.send(`[\"${UID}\",${views.get(view)}]`);\r\n      return xhr;\r\n    };\r\n\r\n    const Response = (view, xhr) => {\r\n      view.set(parse(xhr.responseText));\r\n      return 'ok';\r\n    };\r\n\r\n    Atomics = {\r\n      wait: (view, ..._) => views.has(view) ?\r\n        Response(view, Request(view)) :\r\n        wait(view, ..._)\r\n      ,\r\n    };\r\n\r\n    let UID, SW, ready = false, ids = Math.random();\r\n\r\n    promise = promise.then(data => {\r\n      [UID, SW] = data;\r\n      ready = true;\r\n    });\r\n  }\r\n  // Main\r\n  else {\r\n    const UID = [ID, Math.random()].join('-').replace(/\\W/g, '-');\r\n\r\n    const bc = new BroadcastChannel(BROADCAST_CHANNEL_UID);\r\n    bc.onmessage = async event => {\r\n      const [swid, wid, vid] = event.data;\r\n      if (wid === UID) {\r\n        for (const [view, [id, wr]] of views) {\r\n          if (id === vid) {\r\n            await wr.promise;\r\n            let length = view.length;\r\n            while (length-- && !view[length]);\r\n            bc.postMessage([swid, view.slice(0, length + 1)]);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    const intercept = event => {\r\n      const [id, view, value] = event.data;\r\n      views.set(view, [id, withResolvers()]);\r\n      defineProperty(event, 'data', { value });\r\n    };\r\n\r\n    MessageChannel = class extends MessageChannel {\r\n      constructor() {\r\n        super();\r\n        addListener(this.port1, 'message', intercept);\r\n      }\r\n    };\r\n\r\n    Worker = class extends Worker {\r\n      /**\r\n       * @param {string | URL} scriptURL \r\n       * @param {WorkerOptions} options \r\n       */\r\n      constructor(scriptURL, options) {\r\n        super(scriptURL, options);\r\n        super.postMessage([UID, SW]);\r\n      }\r\n    };\r\n\r\n    const { notify } = Atomics;\r\n    Atomics = {\r\n      notify(view, ..._) {\r\n        const details = views.get(view);\r\n        if (details) {\r\n          details[1].resolve();\r\n          return 0;\r\n        }\r\n        // this will throw with a proper error\r\n        return notify(view, ..._);\r\n      },\r\n    };\r\n\r\n    let SW = '';\r\n    let serviceWorker = null;\r\n\r\n    /**\r\n     * @param {ServiceWorkerContainer} swc\r\n     * @param {RegistrationOptions} [options]\r\n     */\r\n    const activate = (swc, options) => {\r\n      let w, c = true;\r\n      swc.getRegistration(SW)\r\n        .then(r => (r ?? swc.register(SW, options)))\r\n        .then(function ready(r) {\r\n          const { controller } = swc;\r\n          c = c && !!controller;\r\n          w = (r.installing || r.waiting || r.active);\r\n          if (w.state === 'activated') {\r\n            if (c) {\r\n              // allow ServiceWorker swap on different URL\r\n              if (controller.scriptURL === SW)\r\n                return resolve(bootstrap);\r\n              r.unregister();\r\n            }\r\n            location.reload();\r\n          }\r\n          else {\r\n            addListener(w, 'statechange', () => ready(r), { once: true });\r\n          }\r\n        });\r\n    };\r\n\r\n    register = /** @type {sabayon} */((serviceWorkerURL, options) => {\r\n      if (!serviceWorker) {\r\n        // resolve the fully qualified URL for Blob based workers\r\n        SW = new URL(serviceWorkerURL, location.href).href;\r\n        activate(navigator.serviceWorker, options);\r\n        serviceWorker = promise;\r\n      }\r\n      return serviceWorker;\r\n    });\r\n  }\r\n}\r\n\r\nexport {\r\n  Atomics,\r\n  MessageChannel,\r\n  MessagePort,\r\n  SharedArrayBuffer,\r\n  Worker,\r\n  postMessage,\r\n  register,\r\n  track,\r\n};\r\n","// ⚠️ AUTOMATED ⚠️\r\nexport default 'dc78209b-186c-4f83-80e9-406becb7d9f3';\r\n","import { MAIN, WORKER } from './window/constants.js';\r\n\r\nimport nextResolver from 'next-resolver';\r\n\r\nimport { encoder } from 'reflected-ffi/encoder';\r\n\r\nimport * as transferred from './transfer.js';\r\n\r\nimport * as sabayon from './sabayon/index.js';\r\n\r\nimport {\r\n  ID,\r\n  assign,\r\n  create,\r\n  defaults,\r\n  native,\r\n  result,\r\n  set,\r\n  stop,\r\n  ffi_timeout,\r\n} from './utils.js';\r\n\r\n// @bug https://bugzilla.mozilla.org/show_bug.cgi?id=1956778\r\n// Note: InstallTrigger is deprecated so once it's gone I do hope\r\n//       this workaround would be gone too!\r\nconst UID = 'InstallTrigger' in globalThis ? ID : '';\r\n\r\nconst Number = value => value;\r\n\r\nconst info = name => {\r\n  if (name === MAIN) return 'main';\r\n  if (name === WORKER) return 'worker';\r\n  return name;\r\n};\r\n\r\n// @bug https://bugzilla.mozilla.org/show_bug.cgi?id=1956778\r\nclass MessageEvent extends Event {\r\n  #data;\r\n  constructor(data) {\r\n    super('message');\r\n    this.#data = data;\r\n  }\r\n  get data() {\r\n    return this.#data;\r\n  }\r\n}\r\n\r\nexport default options => {\r\n  const transform = options?.transform;\r\n  const timeout = ffi_timeout(options);\r\n  const encode = (options?.encoder || encoder)(defaults);\r\n  const checkTransferred = options?.transfer !== false;\r\n\r\n  /** @type {Worker & { proxy: Record<string, function> }} */\r\n  class Worker extends sabayon.Worker {\r\n    constructor(url, options) {\r\n      const serviceWorker = native ? '' : (options?.serviceWorker || '');\r\n      const { notify } = (serviceWorker ? sabayon.Atomics : Atomics);\r\n      const { port1: channel, port2 } = new (\r\n        serviceWorker ? sabayon.MessageChannel : MessageChannel\r\n      );\r\n      const [ next, resolve ] = nextResolver(Number);\r\n      const callbacks = new Map;\r\n      const proxied = create(null);\r\n\r\n      if (serviceWorker) sabayon.register(serviceWorker);\r\n\r\n      let resolving = '';\r\n\r\n      const deadlock = (promise, name) => {\r\n        if (resolving) {\r\n          const t = setTimeout(\r\n            console.warn,\r\n            3e3,\r\n            `💀🔒 - is proxy.${info(resolving)}() awaiting proxy.${info(name)}() ?`\r\n          );\r\n          promise = promise.then(\r\n            result => {\r\n              clearTimeout(t);\r\n              return result;\r\n            },\r\n            error => {\r\n              clearTimeout(t);\r\n              return Promise.reject(error);\r\n            },\r\n          );\r\n        }\r\n        return promise;\r\n      };\r\n\r\n      super(url, assign({ type: 'module' }, options));\r\n\r\n      this.proxy = new Proxy(proxied, {\r\n        get: (_, name) => {\r\n          // the curse of potentially awaiting proxies in the wild\r\n          // requires this ugly guard around `then`\r\n          if (name === 'then') return;\r\n          let cb = callbacks.get(name);\r\n          if (!cb) {\r\n            callbacks.set(name, cb = (...args) => {\r\n              const transfer = transferred.get(checkTransferred, args);\r\n              const [uid, promise] = next();\r\n              channel.postMessage(\r\n                [uid, name, transform ? args.map(transform) : args],\r\n                transfer\r\n              );\r\n              return deadlock(promise, name);\r\n            });\r\n          }\r\n          return cb;\r\n        },\r\n        set\r\n      });\r\n\r\n      // @bug https://bugzilla.mozilla.org/show_bug.cgi?id=1956778\r\n      if (UID && (native || serviceWorker)) {\r\n        super.addEventListener('message', event => {\r\n          const { data } = event;\r\n          if (data?.ID === UID) {\r\n            stop(event);\r\n            channel.dispatchEvent(new MessageEvent(data.data));\r\n          }\r\n        });\r\n      }\r\n\r\n      super.postMessage([UID, serviceWorker, ffi_timeout(options, timeout)], [port2]);\r\n\r\n      channel.addEventListener('message', async ({ data }) => {\r\n        const i32 = data[0];\r\n        const type = typeof i32;\r\n        if (type === 'number')\r\n          resolve.apply(null, data);\r\n        else {\r\n          resolving = data[1];\r\n          await result(data, proxied, transform);\r\n          resolving = '';\r\n          if (type === 'string')\r\n            channel.postMessage(data);\r\n          else {\r\n            const result = data[2] || data[1];\r\n            // at index 1 we store the written length or 0, if undefined\r\n            i32[1] = result === void 0 ? 0 : encode(result, i32.buffer);\r\n            // at index 0 we set the SharedArrayBuffer as ready\r\n            i32[0] = 1;\r\n            notify(i32, 0);\r\n          }\r\n        }\r\n      });\r\n\r\n      channel.start();\r\n    }\r\n  }\r\n\r\n  return {\r\n    Worker,\r\n    native,\r\n    transfer: transferred.set,\r\n  };\r\n};\r\n","/* c8 ignore start */\nconst {url} = import.meta;\nconst re = /import\\((['\"])([^)]+?\\.js)\\1\\)/g;\nconst place = (_,q,f) => `import(${q}${new URL(f,url).href}${q})`;\nimport coincident from 'coincident/window/main';\nconst { Worker } = coincident({ transfer: false });\nexport default (...args) => new Worker(URL.createObjectURL(new Blob(['/*@*/'+\"const{assign:e}=Object,t=\\\"entries\\\",n=\\\"readonly\\\",r=\\\"readwrite\\\",s={durability:\\\"default\\\",prefix:\\\"IDBMap\\\"},o=({target:{result:e}})=>e;class a extends EventTarget{#e;#t;#n;async#r(n,r){const s=(await this.#e).transaction(t,r,this.#t);return new Promise((r,o)=>e(n(s.objectStore(t)),{onsuccess:r,onerror:o}))}constructor(n,{durability:r=s.durability,prefix:a=s.prefix}=s){super(),this.#n=a,this.#t={durability:r},this.#e=new Promise((r,s)=>{e(indexedDB.open(`${this.#n}/${n}`),{onupgradeneeded({target:{result:e,transaction:n}}){e.objectStoreNames.length||e.createObjectStore(t),n.oncomplete=()=>r(e)},onsuccess(e){r(o(e))},onerror(e){s(e),this.dispatchEvent(e)}})}).then(e=>{const t=this.dispatchEvent.bind(this);for(const n in e)n.startsWith(\\\"on\\\")&&(e[n]=t);return e})}dispatchEvent(t){const{type:n,message:r,isTrusted:s}=t;return super.dispatchEvent(s?e(new Event(n),{message:r}):t)}async close(){(await this.#e).close()}get size(){return this.#r(e=>e.count(),n).then(o)}async clear(){await this.#r(e=>e.clear(),r)}async delete(e){await this.#r(t=>t.delete(e),r)}async entries(){const e=await this.keys();return Promise.all(e.map(e=>this.get(e).then(t=>[e,t])))}async forEach(e,t=this){for(const[n,r]of await this.entries())await e.call(t,r,n,this)}async get(e){return await this.#r(t=>t.get(e),n).then(o)}async has(e){return void 0!==await this.#r(t=>t.getKey(e),n).then(o)}async keys(){return await this.#r(e=>e.getAllKeys(),n).then(o)}async set(e,t){return await this.#r(n=>n.put(t,e),r),this}async values(){const e=await this.keys();return Promise.all(e.map(e=>this.get(e)))}get[Symbol.toStringTag](){return this.#n}}class i extends Map{#s;#o;constructor(...e){super(),this.#s=new a(...e),this.#o=this.#s.entries().then(e=>{for(const[t,n]of e)super.set(t,n)})}async close(){await this.#o,await this.#s.close()}async sync(){await this.#o}clear(){return this.#o=this.#o.then(()=>this.#s.clear()),super.clear()}delete(e){return this.#o=this.#o.then(()=>this.#s.delete(e)),super.delete(e)}set(e,t){return this.#o=this.#o.then(()=>this.#s.set(e,t)),super.set(e,t)}}const c=\\\"a26fee79\\\",l=\\\"=\\\"+c,u=\\\"-\\\"+c;let p=0;const d=p++,f=p++,h=p++,y=p++,m=p++,g=p++,w=p++,_=p++,b=p++,A=p++,E=p++,v=p++,k=p++,S=p++,x=p++,$=p++,j=p++,B=p++,M=p++,F=p++,P=p++,R=p++,D=p++,T=p++,O=p++,L=p++;const C=globalThis.ImageData||class{},I=new TextDecoder,H=new TextEncoder,U=new Map(Reflect.ownKeys(Symbol).map(e=>[Symbol[e],`@${String(e)}`])),W=e=>{switch(e[0]){case\\\"@\\\":return Symbol[e.slice(1)];case\\\"#\\\":return Symbol.for(e.slice(1));case\\\"!\\\":return Symbol(e.slice(1));default:return Symbol()}},N=e=>U.get(e)||((e,t)=>void 0===t?\\\"?\\\":void 0===Symbol.keyFor(e)?`!${t}`:`#${t}`)(e,e.description),q=Object.defineProperty,J=Object.assign,z=Array.isArray,K=ArrayBuffer.isView,G=(e,t)=>[e,t],V=e=>e,X=[],Y={},Z=function(){},Q=e=>(t,n=new Map)=>{for(let r=0,s=t.length;r<s;r++)t[r]=e(t[r],n);return t},ee=([e,t])=>0===e?t:W(t),te=e=>\\\"string\\\"==typeof e?G(0,e):G(16,N(e)),ne=(e,t)=>{for(let n=e.push,r=0,s=t.length;r<s;r+=32767)n.apply(e,t.subarray(r,r+32767))},re=new ArrayBuffer(8),se=new DataView(re),oe=new Uint8Array(re),ae=(e,t,n)=>(e.set(t,n),n),ie=e=>{oe[0]=e[ue++],oe[1]=e[ue++],oe[2]=e[ue++],oe[3]=e[ue++],oe[4]=e[ue++],oe[5]=e[ue++],oe[6]=e[ue++],oe[7]=e[ue++]},ce=e=>(oe[0]=e[ue++],oe[1]=e[ue++],oe[2]=e[ue++],oe[3]=e[ue++],se.getUint32(0,!0)),le=(e,t)=>{switch(e[ue++]){case m:return ie(e),se.getFloat64(0,!0);case g:return e[ue++];case P:{const n=ae(t,ue-1,{});for(let r=0,s=ce(e);r<s;r++)n[le(e,t)]=le(e,t);return n}case $:{const n=ae(t,ue-1,[]);for(let r=0,s=ce(e);r<s;r++)n.push(le(e,t));return n}case T:{const n=ue-1,r=le(e,t);return ae(t,n,new globalThis[r](le(e,t)))}case j:{const n=ue-1,r=ce(e);return ae(t,n,e.slice(ue,ue+=r).buffer)}case S:{const n=ue-1,r=ce(e);return ae(t,n,I.decode(e.slice(ue,ue+=r)))}case B:return ae(t,ue-1,new Date(le(e,t)));case F:{const n=ae(t,ue-1,new Map);for(let r=0,s=ce(e);r<s;r++)n.set(le(e,t),le(e,t));return n}case D:{const n=ae(t,ue-1,new Set);for(let r=0,s=ce(e);r<s;r++)n.add(le(e,t));return n}case M:{const n=le(e,t),r=le(e,t),s=le(e,t),o=new(globalThis[n]||Error)(r);return ae(t,ue-1,q(o,\\\"stack\\\",{value:s}))}case O:{const n=le(e,t),r=le(e,t),s=le(e,t),o=le(e,t),a=le(e,t);return ae(t,ue-1,new C(n,r,s,{colorSpace:o,pixelFormat:a}))}case R:{const n=le(e,t),r=le(e,t);return ae(t,ue-1,new RegExp(n,r))}case d:return!1;case f:return!0;case w:return NaN;case _:return 1/0;case b:return-1/0;case A:return 0;case E:return-0;case y:return null;case v:return ie(e),se.getBigInt64(0,!0);case k:return ie(e),se.getBigUint64(0,!0);case x:return W(le(e,t));case L:return t.get(ce(e));default:return}};let ue=0;const pe=e=>(ue=0,le(e,new Map)),de=({byteOffset:e=0}={})=>(t,n)=>pe(new Uint8Array(n,e,t));let fe=0;const he=fe++,ye=fe++,me=fe++,ge=fe++,we=fe++,_e=fe++,be=fe++,Ae=fe++,Ee=fe++,ve=fe++,ke=fe++,Se=fe++,xe=fe++,$e=fe++,je=fe++;fe++;const Be=fe++,Me=fe++,{getPrototypeOf:Fe}=Object,{construct:Pe}=Reflect,{toStringTag:Re}=Symbol,{toString:De}=Y,Te=(e,t=De.call(e).slice(8,-1))=>t in globalThis?t:Te(Fe(e)||Y),Oe=(e,t=e[Re])=>t in globalThis?t:Oe(Pe(Fe(e.constructor),[0])),Le=(e,t)=>new ArrayBuffer(e,{maxByteLength:t}),Ce=([e,t],n)=>{const r=n?e.byteLength:e.length;if(n){if(t){const n=Le(r,t);new Uint8Array(n).set(new Uint8Array(e)),e=n}}else{const n=t?Le(r,t):new ArrayBuffer(r);new Uint8Array(n).set(e),e=n}return e};const Ie=/\\\\[('|\\\")?(.+?)\\\\1\\\\]/g,He=(e,t)=>e?.[t];var Ue=e=>{const t=[],n=e=>{const n=t.splice(e);for(;e<n.length;)n[e++].delete(n[e++])};return class r extends Map{static keys=Symbol();static proto=Symbol();drop(e,t){return e!==r.proto&&super.delete(r.keys),super.delete(e),t}set(r,s){return((r,s)=>{t.push(r,s)<3&&setTimeout(n,e,0)})(super.set(r,s),r),s}}},We=({reflect:e=V,transform:t=V,released:n=V,buffer:r=!1,timeout:s=-1}=Y)=>{const o=Q(ee),a=Q(te),i=e=>{if(!z(e))return e;const[t,n]=e;if(1&t)return u(t,n);switch(t){case 2:return x;case 0:return n;case 16:return W(n);case 32:return BigInt(n);case 68:return(([e,t,n,r],s)=>{const o=Ce(t,s),a=globalThis[e];return r?new a(o,n,r):new a(o,n)})(n,r);case 64:return Ce(n,r)}},c=(e,n=new Map)=>{switch(typeof e){case\\\"object\\\":{if(null===e)break;if(e===globalThis)return S;if(k in e)return g;let r=n.get(e);if(!r){const s=t(e);if(w||!m.has(s)){if(z(s)){const t=[];r=G(4,t),n.set(e,r);for(let e=0,r=s.length;e<r;e++)t[e]=c(s[e],n);return r}if(!(K(s)||s instanceof ArrayBuffer||\\\"Object\\\"!==Te(s))){const t={};r=G(2,t),n.set(e,r);for(const e in s)t[e]=c(s[e],n);return r}}r=G(0,s),n.set(e,r)}return r}case\\\"function\\\":{if(k in e)return g;let r=n.get(e);if(!r){const s=t(e);r=G(8,b(s)),n.set(e,r)}return r}case\\\"symbol\\\":return G(16,N(e))}return e},l=Q(c),u=(e,t)=>{let n=v.get(t),r=n?.deref();return r||(n&&$.unregister(n),r=3===e?new Proxy(Y,new h(e,t)):5===e?new Proxy(X,new h(e,t)):new Proxy(Z,new y(e,t)),n=new WeakRef(r),v.set(t,n),$.register(r,t,n)),r},p=e=>{switch(typeof e){case\\\"object\\\":if(null===e)break;case\\\"function\\\":return k in e;default:return!1}},d=-1<s,f=d?Ue(s):Map;class h{constructor(e,t){this.t=e,this.v=t,d&&(this.$=new f)}get(t,n){if(d&&this.$.has(n))return this.$.get(n);const r=e(ve,this.v,te(n));return d?r[0]?this.$.set(n,i(r[1])):i(r[1]):i(r)}set(t,n,r){const s=e(Be,this.v,te(n),c(r));return d?this.$.drop(n,s):s}has(t,n){return n===k?(g=[this.t,this.v],!0):e(xe,this.v,te(n))}_oK(){return o(e(je,this.v),v)}ownKeys(e){return d?this.$.has(f.keys)?this.$.get(f.keys):this.$.set(f.keys,this._oK()):this._oK()}getOwnPropertyDescriptor(t,n){const r=i(e(ke,this.v,te(n)));if(r)for(const e in r)r[e]=i(r[e]);return r}defineProperty(t,n,r){const s=e(Ae,this.v,te(n),c(r));return d?this.$.drop(n,s):s}deleteProperty(t,n){const r=e(Ee,this.v,te(n));return d?this.$.drop(n,r):r}_gPO(){return i(e(Se,this.v))}getPrototypeOf(e){return d?this.$.has(f.proto)?this.$.get(f.proto):this.$.set(f.proto,this._gPO()):this._gPO()}setPrototypeOf(t,n){const r=e(Me,this.v,c(n));return d?this.$.drop(f.proto,r):r}isExtensible(t){return e($e,this.v)}preventExtensions(e){return!1}}class y extends h{construct(t,n){return i(e(be,this.v,l(n)))}apply(t,n,r){const s=new Map;return i(e(_e,this.v,c(n,s),l(r,s)))}get(e,t){switch(t){case\\\"apply\\\":return(t,n)=>this.apply(e,t,n);case\\\"call\\\":return(t,...n)=>this.apply(e,t,n);default:return super.get(e,t)}}}let m,g,w=!0;const{apply:_}=Reflect,{id:b,ref:A,unref:E}=((e=0,t=new Map,n=new Map)=>({clear:()=>{t.clear(),n.clear()},id:r=>{let s=n.get(r);if(void 0===s){for(;t.has(s=e++););t.set(s,r),n.set(r,s)}return s},ref:e=>t.get(e),unref:e=>(n.delete(t.get(e)),t.delete(e))}))(),v=new Map,k=Symbol(\\\"reflected-ffi\\\"),S=G(2,null),x=new Proxy(Y,new h(2,null)),$=new FinalizationRegistry(t=>{v.delete(t),e(he,t)});return{global:x,isProxy:p,assign(t,...n){const r=p(t),s=J(r?{}:t,...n);return r&&e(ye,g[1],c(s)),t},direct:e=>(w&&(w=!1,m=new WeakSet),m.add(e),e),evaluate:(t,...n)=>i(e(me,null,function(e=this){return String(e).replace(/^(async\\\\s*)?(\\\\bfunction\\\\b)?(.*?)\\\\(/,(e,t,n,r)=>r&&!n?`${t||\\\"\\\"}function ${r}(`:e)}(t),l(n))),gather(t,...n){const r=p(t),s=r?i:e=>t[e];r&&(n=e(ge,g[1],a(n,v)));for(let e=0;e<n.length;e++)n[e]=s(n[e]);return n},query:(t,n)=>p(t)?i(e(we,g[1],n)):((e,t)=>t.replace(Ie,\\\".$2\\\").split(\\\".\\\").reduce(He,e))(t,n),reflect:async(e,t,...r)=>{switch(e){case _e:{const[e,n]=r;for(let e=0,t=n.length;e<t;e++)n[e]=i(n[e]);return c(await _(A(t),i(e),n))}case he:return n(A(t)),E(t)}}}};var Ne=Promise.withResolvers.bind(Promise),qe=(e=e=>e)=>{const t=new Map;let n=0;return[()=>{let r;do{r=e(n++)}while(t.has(r));const s=Ne();return t.set(r,s),[r,s.promise]},(e,n,r)=>{const s=t.get(e);t.delete(e),r?s?.reject(r):s?.resolve(n)}]};const Je=[],ze=new WeakSet,Ke=(...e)=>(ze.add(e),e);let{SharedArrayBuffer:Ge}=globalThis,Ve=!0;try{new Ge(4,{maxByteLength:8})}catch(e){Ve=!1,Ge=class extends ArrayBuffer{get growable(){return super.resizable}grow(e){super.resize(e)}}}const{create:Xe}=Object,Ye=`coincident-${Ve?crypto.randomUUID():Math.random().toString(36).substring(2)}`,Ze=2*Int32Array.BYTES_PER_ELEMENT,Qe={byteOffset:Ze},et=(e,t,n)=>{const r=\\\"then\\\"!==t;return r&&(e[t]=n),r},tt=e=>{e.stopImmediatePropagation(),e.preventDefault()},[nt,rt]=qe();let[st,ot]=nt(),at=()=>ot,it=()=>{},{Atomics:ct,MessagePort:lt,SharedArrayBuffer:ut,postMessage:pt}=globalThis;if(Ve)rt(st);else{ut=Ge;const e=new Map,t=(e,...t)=>{e.addEventListener(...t)};if(\\\"importScripts\\\"in globalThis){it=t=>{e.set(t,null)};const n=t=>{const n=t[0],r=p++;return e.set(n,r),[r,n,t]},r=pt;pt=function(e,t){if(u){const s={ID:e.ID,data:n(e.data)};r(s,t)}else ot.then(()=>this.postMessage(e,t))},lt=class extends lt{postMessage(e,t){u?super.postMessage(n(e),t):ot.then(()=>this.postMessage(e,t))}},t(globalThis,\\\"message\\\",e=>{tt(e),rt(st,e.data)},{once:!0});const{wait:s}=ct,{parse:o}=JSON,a=t=>{const n=new XMLHttpRequest;return n.open(\\\"POST\\\",`${l}?sabayon`,!1),n.setRequestHeader(\\\"Content-Type\\\",\\\"application/json\\\"),n.send(`[\\\"${c}\\\",${e.get(t)}]`),n},i=(e,t)=>(e.set(o(t.responseText)),\\\"ok\\\");ct={wait:(t,...n)=>e.has(t)?i(t,a(t)):s(t,...n)};let c,l,u=!1,p=Math.random();ot=ot.then(e=>{[c,l]=e,u=!0})}else{const n=[Ye,Math.random()].join(\\\"-\\\").replace(/\\\\W/g,\\\"-\\\"),r=new BroadcastChannel(\\\"dc78209b-186c-4f83-80e9-406becb7d9f3\\\");r.onmessage=async t=>{const[s,o,a]=t.data;if(o===n)for(const[t,[n,o]]of e)if(n===a){await o.promise;let e=t.length;for(;e--&&!t[e];);r.postMessage([s,t.slice(0,e+1)]);break}};const{notify:s}=ct;ct={notify(t,...n){const r=e.get(t);return r?(r[1].resolve(),0):s(t,...n)}};let o=\\\"\\\",a=null;const i=(e,n)=>{let r,s=!0;e.getRegistration(o).then(t=>t??e.register(o,n)).then(function n(a){const{controller:i}=e;if(s=s&&!!i,r=a.installing||a.waiting||a.active,\\\"activated\\\"===r.state){if(s){if(i.scriptURL===o)return rt(st);a.unregister()}location.reload()}else t(r,\\\"statechange\\\",()=>n(a),{once:!0})})};at=(e,t)=>(a||(o=new URL(e,location.href).href,i(navigator.serviceWorker,t),a=ot),a)}}const{setPrototypeOf:dt}=Reflect;let{postMessage:ft}=globalThis;const ht=Ne(),yt=lt.prototype;addEventListener(\\\"message\\\",e=>{tt(e);const[t,n,r]=e.data,[s]=e.ports;n&&(dt(s,yt),t&&(ft=pt)),ht.resolve([t,n,r,s])},{once:!0});var mt=async e=>{const[t,n,r,s]=await at().then(()=>ht.promise),o=!!t,a=Ve||!!n,i=e?.transform,c=(e?.decoder||de)(Qe),l=!1!==e?.transfer;let u,p,d;if(a){const t=new(n?ut:SharedArrayBuffer)(e?.minByteLength||32767,{maxByteLength:e?.maxByteLength||16777216});u=new Int32Array(t),n?(({wait:d}=ct),it(u)):(({pause:p,wait:d}=Atomics),p&&!o&&(d=(e,t)=>{for(;e[t]<1;)p()}))}const[f,h]=qe(String),y=new Map,m=Xe(null),g=new Proxy(m,{get(e,n){if(\\\"then\\\"===n)return;let r=y.get(n);return r||y.set(n,r=(...e)=>{const r=((e,t)=>{let n=Je;return e&&ze.has(t.at(-1)||Je)&&(n=t.pop(),ze.delete(n)),n})(l,e),p=[u,n,i?e.map(i):e];if(a){o?ft({ID:t,data:p},r):s.postMessage(p,r),d(u,0),u[0]=0;const e=u[1]?c(u[1],u.buffer):void 0;if(e instanceof Error)throw e;return e}{const[e,t]=f();return p[0]=e,s.postMessage(p,r),t}}),r},set:et});return s.addEventListener(\\\"message\\\",async({data:e})=>{\\\"string\\\"==typeof e[0]?h.apply(null,e):(await(async(e,t,n)=>{try{const r=await t[e[1]].apply(null,e[2]);e[1]=n?n(r):r,e[2]=null}catch(t){e[2]=t}})(e,m,i),s.postMessage(e))}),s.start(),{native:Ve,proxy:g,ffi_timeout:r,sync:a,transfer:Ke}};const gt={object(...e){return this.string(function(e){for(var t=e[0],n=1,r=arguments.length;n<r;n++)t+=arguments[n]+e[n];return t}(...e))},string(e){for(const t of e.split(/[\\\\r\\\\n]+/))if(t.trim().length){/^(\\\\s+)/.test(t)&&(e=e.replace(new RegExp(\\\"^\\\"+RegExp.$1,\\\"gm\\\"),\\\"\\\"));break}return e}},wt=new WeakMap,_t=e=>{const t=e||console,n={buffered:At,stderr:(t.stderr||console.error).bind(t),stdout:(t.stdout||console.log).bind(t)};return{stderr:(...e)=>n.stderr(...e),stdout:(...e)=>n.stdout(...e),async get(e){const t=await e;return wt.set(t,n),t}}},bt=new TextDecoder,At=(e,t=10)=>{const n=[];return r=>{if(r instanceof Uint8Array)for(const s of r)s===t?e(bt.decode(new Uint8Array(n.splice(0)))):n.push(s);else e(r)}},Et=(e,...t)=>gt[typeof e](e,...t),{isArray:vt}=Array,{assign:kt,create:St,defineProperty:xt,entries:$t}=Object,{all:jt,resolve:Bt}=new Proxy(Promise,{get:(e,t)=>e[t].bind(e)}),Mt=(e,t=location.href)=>new URL(e,t.replace(/^blob:/,\\\"\\\")).href;function Ft(e){return e.startsWith(\\\".\\\")?Mt(e,this):e}const Pt=(e,t,n,r=!1,s=CustomEvent)=>{e.dispatchEvent(new s(`${t}:${n}`,{bubbles:!0,detail:{worker:r}}))},Rt=e=>Function(`'use strict';return (${e})`)(),Dt=e=>e.replace(/^(?:\\\\n|\\\\r\\\\n)/,\\\"\\\"),Tt=Symbol.for(\\\"polyscript.js_modules\\\"),Ot=new Map;xt(globalThis,Tt,{value:Ot}),new Proxy(Ot,{get:(e,t)=>e.get(t),has:(e,t)=>e.has(t),ownKeys:e=>[...e.keys()]});const Lt=(e,t)=>!t.startsWith(\\\"_\\\"),Ct=(e,t)=>new Proxy(e,{has:Lt,get:(e,n)=>e[t][n]}),It=(e,t)=>import(e).then(e=>{Ot.set(t,{...e})}),Ht=e=>new Promise((t,n)=>{document.querySelector(`link[rel=\\\"stylesheet\\\"][href=\\\"${e}\\\"]`)?t():document.head.append(kt(document.createElement(\\\"link\\\"),{rel:\\\"stylesheet\\\",href:e,onload:t,onerror:n}))}),Ut=e=>/\\\\.css$/i.test(new URL(e).pathname),Wt=(e,t)=>e.has(t),Nt=e=>[...e.keys()];var qt=(e,t,n,r)=>{const s=globalThis[Tt];if(n)for(let[e,t]of $t(n)){let n=s.get(t);n&&!vt(n)||(s.set(t,n||(n=[])),n.push(e))}return((e,t,n,r)=>new Proxy(e,{has:Wt,ownKeys:Nt,get:(e,s)=>{let o=e.get(s);if(vt(o)){let a=o;o=null;for(let e of a)e=Mt(e,r),Ut(e)?n.importCSS(e):(n.importJS(e,s),o=t[Tt].get(s));e.set(s,o)}return o}}))(s,e,t,r)};const Jt=new Map,zt=e=>Jt.get(e),Kt=(e,t)=>{try{return Function(\\\"require\\\",t)(zt)}catch(t){wt.get(e).stderr(t)}};var Gt={type:\\\"dummy\\\",module:()=>\\\"data:text/javascript,\\\",engine:e=>_t().get(e),registerJSModule(e,t,n){Jt.set(t,n)},run:Kt,runAsync:Kt,runEvent:async(e,t,n)=>{try{await Function(\\\"require\\\",\\\"e\\\",`return ${t}(e)`)(zt,n)}catch(t){wt.get(e).stderr(t)}},transform:(e,t)=>t,writeFile(){}};const Vt=Object.getOwnPropertyDescriptors(Response.prototype),Xt=e=>\\\"function\\\"==typeof e,Yt={get:(e,t)=>Vt.hasOwnProperty(t)?((e,t,{get:n,value:r})=>n||!Xt(r)?e.then(e=>e[t]):(...n)=>e.then(e=>e[t](...n)))(e,t,Vt[t]):((e,t)=>Xt(t)?t.bind(e):t)(e,e[t])};var Zt=(e,...t)=>new Proxy(fetch(e,...t),Yt);const Qt=!globalThis.window,en=({FS:e,PATH:t,PATH_FS:n},r,s)=>{const o=n.resolve(r),a=t.dirname(o);return e.mkdirTree?e.mkdirTree(a):nn(e,a),e.writeFile(o,new Uint8Array(s),{canOwn:!0})},tn=e=>{const t=e.split(\\\"/\\\");return t.pop(),t.join(\\\"/\\\")},nn=(e,t)=>{const n=[];for(const r of t.split(\\\"/\\\"))\\\".\\\"!==r&&\\\"..\\\"!==r&&(n.push(r),r&&e.mkdir(n.join(\\\"/\\\")))},rn=(e,t)=>{const n=[];for(const e of t.split(\\\"/\\\"))switch(e){case\\\"\\\":case\\\".\\\":break;case\\\"..\\\":n.pop();break;default:n.push(e)}return[e.cwd()].concat(n).join(\\\"/\\\").replace(/^\\\\/+/,\\\"/\\\")},sn=e=>{const t=e.map(e=>e.trim().replace(/(^[/]*|[/]*$)/g,\\\"\\\")).filter(e=>\\\"\\\"!==e&&\\\".\\\"!==e).join(\\\"/\\\");return e[0].startsWith(\\\"/\\\")?`/${t}`:t},on=(e,t)=>Zt(Mt(e,t)).arrayBuffer(),an=(e,t,n,r)=>jt((e=>{for(const{files:t,to_file:n,from:r=\\\"\\\"}of e){if(void 0!==t&&void 0!==n)throw new Error(\\\"Cannot use 'to_file' and 'files' parameters together!\\\");if(void 0===t&&void 0===n&&r.endsWith(\\\"/\\\"))throw new Error(`Couldn't determine the filename from the path ${r}, please supply 'to_file' parameter.`)}return e.flatMap(({from:e=\\\"\\\",to_folder:t=\\\".\\\",to_file:n,files:r})=>{if(vt(r))return r.map(n=>({url:sn([e,n]),path:sn([t,n])}));const s=n||e.slice(1+e.lastIndexOf(\\\"/\\\"));return[{url:e,path:sn([t,s])}]})})(n).map(({url:n,path:s})=>on(n,r).then(n=>e.writeFile(t,s,n)))),cn=(e,t)=>t.endsWith(\\\"/\\\")?`${t}${e.split(\\\"/\\\").pop()}`:t,ln=(e,t)=>e.replace(/\\\\{.+?\\\\}/g,e=>{if(!t.has(e))throw new SyntaxError(`Invalid template: ${e}`);return t.get(e)}),un=(e,t,n,r)=>jt((e=>{const t=new Map,n=new Set,r=[];for(const[s,o]of $t(e))if(/^\\\\{.+\\\\}$/.test(s)){if(t.has(s))throw new SyntaxError(`Duplicated template: ${s}`);t.set(s,ln(o,t))}else{const e=ln(s,t),a=cn(e,ln(o||\\\"./\\\",t));if(n.has(a)&&!a.endsWith(\\\"/*\\\"))throw new SyntaxError(`Duplicated destination: ${a}`);n.add(a),r.push({url:e,path:a})}return r})(n).map(({url:n,path:s})=>on(n,r).then(r=>e.writeFile(t,s,r,n)))),pn=({main:e,worker:t},n)=>{const r=[];if(t&&Qt)for(let[e,s]of $t(t))e=Mt(e,n),r.push(It(e,s));if(e&&!Qt)for(let[t,s]of $t(e))t=Mt(t,n),Ut(t)?Ht(t):r.push(It(t,s));return jt(r)},dn=e=>t=>{dispatchEvent(new CustomEvent(`${e}:progress`,{detail:t}))},{isNaN:fn,isFinite:hn,isInteger:yn}=Number,{ownKeys:mn}=Reflect,{is:gn}=Object,wn=(e,t,n)=>{const r=n.get(e),s=!r;return s?(se.setUint32(0,t.length,!0),n.set(e,[oe[0],oe[1],oe[2],oe[3]])):t.push(L,r[0],r[1],r[2],r[3]),s},_n=(e,t,n)=>{se.setUint32(0,n,!0),e.push(t,oe[0],oe[1],oe[2],oe[3])},bn=(e,t,n)=>{switch(typeof e){case\\\"number\\\":e&&hn(e)?yn(e)&&e<256&&-1<e?t.push(g,e):(se.setFloat64(0,e,!0),t.push(m,oe[0],oe[1],oe[2],oe[3],oe[4],oe[5],oe[6],oe[7])):fn(e)?t.push(w):e?t.push(e<0?b:_):t.push(gn(e,0)?A:E);break;case\\\"object\\\":switch(!0){case null===e:t.push(y);break;case!wn(e,t,n):break;case z(e):{const r=e.length;_n(t,$,r);for(let s=0;s<r;s++)bn(e[s],t,n);break}case K(e):if(t.push(T),bn(Oe(e),t,n),e=e.buffer,!wn(e,t,n))break;case e instanceof ArrayBuffer:{const n=new Uint8Array(e);_n(t,j,n.length),An(t,n);break}case e instanceof Date:t.push(B),bn(e.getTime(),t,n);break;case e instanceof Map:_n(t,F,e.size);for(const[r,s]of e)bn(r,t,n),bn(s,t,n);break;case e instanceof Set:_n(t,D,e.size);for(const r of e)bn(r,t,n);break;case e instanceof Error:t.push(M),bn(e.name,t,n),bn(e.message,t,n),bn(e.stack,t,n);break;case e instanceof C:t.push(O),bn(e.data,t,n),bn(e.width,t,n),bn(e.height,t,n),bn(e.colorSpace,t,n),bn(e.pixelFormat,t,n);break;case e instanceof RegExp:t.push(R),bn(e.source,t,n),bn(e.flags,t,n);break;default:if(\\\"toJSON\\\"in e){const r=e.toJSON();bn(r===e?null:r,t,n)}else{const r=mn(e),s=r.length;_n(t,P,s);for(let o=0;o<s;o++){const s=r[o];bn(s,t,n),bn(e[s],t,n)}}}break;case\\\"string\\\":if(wn(e,t,n)){const n=H.encode(e);_n(t,S,n.length),An(t,n)}break;case\\\"boolean\\\":t.push(e?f:d);break;case\\\"symbol\\\":t.push(x),bn(N(e),t,n);break;case\\\"bigint\\\":{let n=v;9223372036854775807n<e?(se.setBigUint64(0,e,!0),n=k):se.setBigInt64(0,e,!0),t.push(n,oe[0],oe[1],oe[2],oe[3],oe[4],oe[5],oe[6],oe[7]);break}default:t.push(h)}};let An=ne;const En={parse:pe,stringify:e=>{const t=[];return An=ne,bn(e,t,new Map),t}},vn=new WeakMap,kn=async(e,t,n,r,s)=>{r.files&&(t(\\\"Loading files\\\"),await un(e,n,r.files,s),t(\\\"Loaded files\\\")),r.fetch&&(t(\\\"Loading fetch\\\"),await an(e,n,r.fetch,s),t(\\\"Loaded fetch\\\")),r.js_modules&&(t(\\\"Loading JS modules\\\"),await pn(r.js_modules,s),t(\\\"Loaded JS modules\\\"))},Sn=(e,t,n)=>{\\\"polyscript\\\"===t&&(n.lazy_py_modules=async(...t)=>(await vn.get(e)(t),t.map(t=>e.pyimport(t))),n.storage=async e=>{const t=new i(e);return await t.sync(),t},n.JSON=En),e.registerJsModule(t,n)},xn=(e,t)=>{if(e.endsWith(\\\"/*\\\")){if(/\\\\.(zip|whl|tgz|tar(?:\\\\.gz)?)$/.test(t))return RegExp.$1;throw new Error(`Unsupported archive ${t}`)}return\\\"\\\"},$n=(e,t,...n)=>{try{return e.runPython(Et(t),...n)}catch(t){wt.get(e).stderr(t)}},jn=async(e,t,...n)=>{try{return await e.runPythonAsync(Et(t),...n)}catch(t){wt.get(e).stderr(t)}},Bn=async(e,t,n)=>{const[r,...s]=t.split(\\\".\\\");let o,a=e.globals.get(r);for(const e of s)[o,a]=[a,a[e]];try{await a.call(o,n)}catch(t){wt.get(e).stderr(t)}};var Mn=(new TextEncoder).encode(\\\"_F='github:'\\\\n_E='user-agent'\\\\n_D=True\\\\n_C=False\\\\n_B='/'\\\\n_A=None\\\\nfrom uio import StringIO\\\\nimport sys\\\\nclass Response:\\\\n\\\\tdef __init__(A,f):A.raw=f;A.encoding='utf-8';A._cached=_A\\\\n\\\\tdef close(A):\\\\n\\\\t\\\\tif A.raw:A.raw.close();A.raw=_A\\\\n\\\\t\\\\tA._cached=_A\\\\n\\\\t@property\\\\n\\\\tdef content(self):\\\\n\\\\t\\\\tA=self\\\\n\\\\t\\\\tif A._cached is _A:\\\\n\\\\t\\\\t\\\\ttry:A._cached=A.raw.read()\\\\n\\\\t\\\\t\\\\tfinally:A.raw.close();A.raw=_A\\\\n\\\\t\\\\treturn A._cached\\\\n\\\\t@property\\\\n\\\\tdef text(self):return str(self.content,self.encoding)\\\\n\\\\tdef json(A):import ujson;return ujson.loads(A.content)\\\\nHEADERS_TO_IGNORE=_E,\\\\ntry:import js\\\\nexcept Exception as err:raise OSError('This version of urequests can only be used in the browser')\\\\nHEADERS_TO_IGNORE=_E,\\\\ndef request(method,url,data=_A,json=_A,headers={},stream=_A,auth=_A,timeout=_A,parse_headers=_D):\\\\n\\\\tE=timeout;D=method;C=data;from js import XMLHttpRequest as G;A=G.new();A.withCredentials=_C\\\\n\\\\tif auth is not _A:import ubinascii;H,I=auth;A.open(D,url,_C,H,I)\\\\n\\\\telse:A.open(D,url,_C)\\\\n\\\\tfor(F,J)in headers.items():\\\\n\\\\t\\\\tif F.lower()not in HEADERS_TO_IGNORE:A.setRequestHeader(F,J)\\\\n\\\\tif E:A.timeout=int(E*1000)\\\\n\\\\tif json is not _A:assert C is _A;import ujson;C=ujson.dumps(json);A.setRequestHeader('Content-Type','application/json')\\\\n\\\\tA.send(C);B=Response(StringIO(A.responseText));B.status_code=A.status;B.reason=A.statusText;B.headers=A.getAllResponseHeaders();return B\\\\ndef get(url,**A):return request('GET',url,**A)\\\\n_PACKAGE_INDEX=const('https://micropython.org/pi/v2')\\\\n_CHUNK_SIZE=128\\\\ndef _ensure_path_exists(path):\\\\n\\\\timport os;A=path.split(_B)\\\\n\\\\tif not A[0]:A.pop(0);A[0]=_B+A[0]\\\\n\\\\tB=''\\\\n\\\\tfor C in range(len(A)-1):\\\\n\\\\t\\\\tB+=A[C]\\\\n\\\\t\\\\ttry:os.stat(B)\\\\n\\\\t\\\\texcept:os.mkdir(B)\\\\n\\\\t\\\\tB+=_B\\\\ndef _chunk(src,dest):\\\\n\\\\tA=memoryview(bytearray(_CHUNK_SIZE))\\\\n\\\\twhile _D:\\\\n\\\\t\\\\tB=src.readinto(A)\\\\n\\\\t\\\\tif B==0:break\\\\n\\\\t\\\\tdest(A if B==_CHUNK_SIZE else A[:B])\\\\ndef _check_exists(path,short_hash):\\\\n\\\\tA=short_hash;import os\\\\n\\\\ttry:\\\\n\\\\t\\\\timport binascii as C,hashlib as D\\\\n\\\\t\\\\twith open(path,'rb')as E:B=D.sha256();_chunk(E,B.update);F=str(C.hexlify(B.digest())[:len(A)],'utf-8');return F==A\\\\n\\\\texcept:return _C\\\\ndef _rewrite_url(url,branch=_A):\\\\n\\\\tB=branch;A=url\\\\n\\\\tif not B:B='HEAD'\\\\n\\\\tif A.startswith(_F):A=A[7:].split(_B);A='https://raw.githubusercontent.com/'+A[0]+_B+A[1]+_B+B+_B+_B.join(A[2:])\\\\n\\\\treturn A\\\\ndef _download_file(url,dest):\\\\n\\\\tB=dest;A=get(url)\\\\n\\\\ttry:\\\\n\\\\t\\\\tif A.status_code!=200:print('Error',A.status_code,'requesting',url);return _C\\\\n\\\\t\\\\tprint('Copying:',B);_ensure_path_exists(B)\\\\n\\\\t\\\\twith open(B,'wb')as C:_chunk(A.raw,C.write)\\\\n\\\\t\\\\treturn _D\\\\n\\\\tfinally:A.close()\\\\ndef _install_json(package_json_url,index,target,version,mpy):\\\\n\\\\tK='File not found: {} {}';I=version;H=index;G=package_json_url;D=target;E=get(_rewrite_url(G,I))\\\\n\\\\ttry:\\\\n\\\\t\\\\tif E.status_code!=200:print('Package not found:',G);return _C\\\\n\\\\t\\\\tF=E.json()\\\\n\\\\tfinally:E.close()\\\\n\\\\tfor(A,C)in F.get('hashes',()):\\\\n\\\\t\\\\tB=D+_B+A\\\\n\\\\t\\\\tif _check_exists(B,C):print('Exists:',B)\\\\n\\\\t\\\\telse:\\\\n\\\\t\\\\t\\\\tL='{}/file/{}/{}'.format(H,C[:2],C)\\\\n\\\\t\\\\t\\\\tif not _download_file(L,B):print(K.format(A,C));return _C\\\\n\\\\tfor(A,J)in F.get('urls',()):\\\\n\\\\t\\\\tB=D+_B+A\\\\n\\\\t\\\\tif not _download_file(_rewrite_url(J,I),B):print(K.format(A,J));return _C\\\\n\\\\tfor(M,N)in F.get('deps',()):\\\\n\\\\t\\\\tif not _install_package(M,H,D,N,mpy):return _C\\\\n\\\\treturn _D\\\\ndef _install_package(package,index,target,version,mpy):\\\\n\\\\tD=index;C=target;B=version;A=package\\\\n\\\\tif A.startswith('http://')or A.startswith('https://')or A.startswith(_F):\\\\n\\\\t\\\\tif A.endswith('.py')or A.endswith('.mpy'):print('Downloading {} to {}'.format(A,C));return _download_file(_rewrite_url(A,B),C+_B+A.rsplit(_B)[-1])\\\\n\\\\t\\\\telse:\\\\n\\\\t\\\\t\\\\tif not A.endswith('.json'):\\\\n\\\\t\\\\t\\\\t\\\\tif not A.endswith(_B):A+=_B\\\\n\\\\t\\\\t\\\\t\\\\tA+='package.json'\\\\n\\\\t\\\\t\\\\tprint('Installing {} to {}'.format(A,C))\\\\n\\\\telse:\\\\n\\\\t\\\\tif not B:B='latest'\\\\n\\\\t\\\\tprint('Installing {} ({}) from {} to {}'.format(A,B,D,C));E=sys.implementation._mpy&255 if mpy and hasattr(sys.implementation,'_mpy')else'py';A='{}/package/{}/{}/{}.json'.format(D,'py',A,B)\\\\n\\\\treturn _install_json(A,D,C,B,mpy)\\\\ndef install(package,index=_A,target=_A,version=_A,mpy=_D):\\\\n\\\\tB=target;A=index\\\\n\\\\tif not B:\\\\n\\\\t\\\\tfor C in sys.path:\\\\n\\\\t\\\\t\\\\tif C.endswith('/lib'):B=C;break\\\\n\\\\t\\\\telse:print('Unable to find lib dir in sys.path');return\\\\n\\\\tif not A:A=_PACKAGE_INDEX\\\\n\\\\tif _install_package(package,A.rstrip(_B),B,version,mpy):print('Done')\\\\n\\\\telse:print('Package may be partially installed')\\\");const Fn=async e=>(await import(\\\"./toml-BK2RWy-G.js\\\")).parse(e);async function Pn(e,t){return new Promise((n,r)=>{e.syncfs(t,e=>{e?r(e):n()})})}function Rn(e){const t=e.FS,n=e.FS.filesystems.MEMFS,r=e.PATH,s={DIR_MODE:16895,FILE_MODE:33279,mount:function(e){if(!e.opts.fileSystemHandle)throw new Error(\\\"opts.fileSystemHandle is required\\\");return n.mount.apply(null,arguments)},syncfs:async(e,t,n)=>{try{const r=s.getLocalSet(e),o=await s.getRemoteSet(e),a=t?o:r,i=t?r:o;await s.reconcile(e,a,i),n(null)}catch(e){n(e)}},getLocalSet:e=>{let n=Object.create(null);function s(e){return\\\".\\\"!==e&&\\\"..\\\"!==e}function o(e){return t=>r.join2(e,t)}let a=t.readdir(e.mountpoint).filter(s).map(o(e.mountpoint));for(;a.length;){let e=a.pop(),r=t.stat(e);t.isDir(r.mode)&&a.push.apply(a,t.readdir(e).filter(s).map(o(e))),n[e]={timestamp:r.mtime,mode:r.mode}}return{type:\\\"local\\\",entries:n}},getRemoteSet:async e=>{const t=Object.create(null),n=await Dn(e.opts.fileSystemHandle);for(const[o,a]of n)\\\".\\\"!==o&&(t[r.join2(e.mountpoint,o)]={timestamp:\\\"file\\\"===a.kind?(await a.getFile()).lastModifiedDate:new Date,mode:\\\"file\\\"===a.kind?s.FILE_MODE:s.DIR_MODE});return{type:\\\"remote\\\",entries:t,handles:n}},loadLocalEntry:e=>{const r=t.lookupPath(e).node,s=t.stat(e);if(t.isDir(s.mode))return{timestamp:s.mtime,mode:s.mode};if(t.isFile(s.mode))return r.contents=n.getFileDataAsTypedArray(r),{timestamp:s.mtime,mode:s.mode,contents:r.contents};throw new Error(\\\"node type not supported\\\")},storeLocalEntry:(e,n)=>{if(t.isDir(n.mode))t.mkdirTree(e,n.mode);else{if(!t.isFile(n.mode))throw new Error(\\\"node type not supported\\\");t.writeFile(e,n.contents,{canOwn:!0})}t.chmod(e,n.mode),t.utime(e,n.timestamp,n.timestamp)},removeLocalEntry:e=>{var n=t.stat(e);t.isDir(n.mode)?t.rmdir(e):t.isFile(n.mode)&&t.unlink(e)},loadRemoteEntry:async e=>{if(\\\"file\\\"===e.kind){const t=await e.getFile();return{contents:new Uint8Array(await t.arrayBuffer()),mode:s.FILE_MODE,timestamp:t.lastModifiedDate}}if(\\\"directory\\\"===e.kind)return{mode:s.DIR_MODE,timestamp:new Date};throw new Error(\\\"unknown kind: \\\"+e.kind)},storeRemoteEntry:async(e,n,s)=>{const o=e.get(r.dirname(n)),a=t.isFile(s.mode)?await o.getFileHandle(r.basename(n),{create:!0}):await o.getDirectoryHandle(r.basename(n),{create:!0});if(\\\"file\\\"===a.kind){const e=await a.createWritable();await e.write(s.contents),await e.close()}e.set(n,a)},removeRemoteEntry:async(e,t)=>{const n=e.get(r.dirname(t));await n.removeEntry(r.basename(t)),e.delete(t)},reconcile:async(e,n,o)=>{let a=0;const i=[];Object.keys(n.entries).forEach(function(e){const r=n.entries[e],s=o.entries[e];(!s||t.isFile(r.mode)&&r.timestamp.getTime()>s.timestamp.getTime())&&(i.push(e),a++)}),i.sort();const c=[];if(Object.keys(o.entries).forEach(function(e){n.entries[e]||(c.push(e),a++)}),c.sort().reverse(),!a)return;const l=\\\"remote\\\"===n.type?n.handles:o.handles;for(const t of i){const n=r.normalize(t.replace(e.mountpoint,\\\"/\\\")).substring(1);if(\\\"local\\\"===o.type){const e=l.get(n),r=await s.loadRemoteEntry(e);s.storeLocalEntry(t,r)}else{const e=s.loadLocalEntry(t);await s.storeRemoteEntry(l,n,e)}}for(const t of c)if(\\\"local\\\"===o.type)s.removeLocalEntry(t);else{const n=r.normalize(t.replace(e.mountpoint,\\\"/\\\")).substring(1);await s.removeRemoteEntry(l,n)}}};return e.FS.filesystems.NATIVEFS_ASYNC=s,async function(e,n){if(\\\"FileSystemDirectoryHandle\\\"!==n.constructor.name)throw new TypeError(\\\"Expected argument 'fileSystemHandle' to be a FileSystemDirectoryHandle\\\");return function(e){t.mkdirTree?t.mkdirTree(e):nn(t,e);const{node:n}=t.lookupPath(e,{follow_mount:!1});if(t.isMountpoint(n))throw new Error(`path '${e}' is already a file system mount point`);if(!t.isDir(n.mode))throw new Error(`path '${e}' points to a file not a directory`);for(const t in n.contents)throw new Error(`directory '${e}' is not empty`)}(e),t.mount(t.filesystems.NATIVEFS_ASYNC,{fileSystemHandle:n},e),await Pn(t,!0),{syncfs:async()=>await Pn(t,!1)}}}const Dn=async e=>{const t=[];await async function e(n){for await(const r of n.values())t.push(r),\\\"directory\\\"===r.kind&&await e(r)}(e);const n=new Map;n.set(\\\".\\\",e);for(const r of t){const t=(await e.resolve(r)).join(\\\"/\\\");n.set(t,r)}return n},Tn=(e,t)=>{try{e.mkdir(t)}catch(e){}},On=dn(\\\"mpy\\\");var Ln={type:\\\"micropython\\\",module:(e=\\\"1.26.0-preview-386\\\")=>`https://cdn.jsdelivr.net/npm/@micropython/micropython-webassembly-pyscript@${e}/micropython.mjs`,async engine({loadMicroPython:e},t,n,r){const{stderr:s,stdout:o,get:a}=_t({stderr:At(console.error),stdout:At(console.log)});n=n.replace(/\\\\.m?js$/,\\\".wasm\\\"),On(\\\"Loading MicroPython\\\");const i=await a(e({linebuffer:!1,stderr:s,stdout:o,url:n})),c=Cn.bind(this,i,r);return vn.set(i,c),await kn(this,On,i,t,r),this.writeFile(i,\\\"./mip.py\\\",Mn),t.packages&&(On(\\\"Loading packages\\\"),await c(t.packages.map(Ft,r)),On(\\\"Loaded packages\\\")),On(\\\"Loaded MicroPython\\\"),i.mountNativeFS||(i.mountNativeFS=Rn(i._module)),i},registerJSModule:Sn,run:$n,runAsync:jn,runEvent:Bn,transform:(e,t)=>e.PyProxy.toJs(t),writeFile:(e,t,n,r)=>{const{FS:s,_module:{PATH:o,PATH_FS:a}}=e,i={FS:s,PATH:o,PATH_FS:a},c=xn(t,r);if(c){const r=t.slice(0,-1);switch(\\\"./\\\"!==r&&s.mkdir(r),c){case\\\"whl\\\":case\\\"zip\\\":{const e=new Blob([n],{type:\\\"application/zip\\\"});return import(\\\"./zip-BU7PvvcW.js\\\").then(async({BlobReader:t,Uint8ArrayWriter:n,ZipReader:a})=>{const i=new a(new t(e));for(const e of await i.getEntries()){const{directory:t,filename:a}=e,i=r+a;if(t)Tn(s,i);else{Tn(s,o.dirname(i));const t=await e.getData(new n);s.writeFile(i,t,{canOwn:!0})}}i.close()})}case\\\"tgz\\\":case\\\"tar.gz\\\":{const t=\\\"./_.tar.gz\\\";return en(i,t,n),void e.runPython(`\\\\n                        import os, gzip, tarfile\\\\n                        tar = tarfile.TarFile(fileobj=gzip.GzipFile(fileobj=open(\\\"${t}\\\", \\\"rb\\\")))\\\\n                        for f in tar:\\\\n                            name = f\\\"${r}{f.name}\\\"\\\\n                            if f.type == tarfile.DIRTYPE:\\\\n                                if f.name != \\\"./\\\":\\\\n                                    os.mkdir(name.strip(\\\"/\\\"))\\\\n                            else:\\\\n                                dir = os.path.dirname(name)\\\\n                                if not os.path.exists(dir):\\\\n                                    os.mkdir(dir)\\\\n                                source = tar.extractfile(f)\\\\n                                with open(name, \\\"wb\\\") as dest:\\\\n                                    dest.write(source.read())\\\\n                                    dest.close()\\\\n                        tar.close()\\\\n                        os.remove(\\\"${t}\\\")\\\\n                    `)}}}return en(i,t,n)}};async function Cn(e,t,n){let r;for(const s of n)if(s.endsWith(\\\".whl\\\")){const n=Mt(s,t),r=await Zt(n).arrayBuffer();await this.writeFile(e,\\\"./*\\\",r,n)}else r||(r=e.pyimport(\\\"mip\\\")),r.install(s)}const In={dict_converter:Object.fromEntries},{stringify:Hn}=JSON,{apply:Un}=Reflect,Wn=Function.prototype,Nn=e=>function(...t){return Un(e,this,t)};let qn,Jn;const zn=e=>{const t=new WeakMap,n=n=>{for(let r,s=0;s<n.length;s++)switch(typeof(r=n[s])){case\\\"object\\\":if(null===r)break;case\\\"function\\\":if(qn in r&&!r[qn].shared?.gcRegistered){e=!1;let o=t.get(r)?.deref();if(!o){o=Jn(r);const e=new WeakRef(o);t.set(r,e),t.set(o,e)}n[s]=o,e=!0}}};Object.defineProperties(Wn,{apply:{value(t,r){return e&&n(r),Un(this,t,r)}},call:{value(t,...r){return e&&n(r),Un(this,t,r)}}})},Kn=dn(\\\"py\\\"),Gn=new WeakMap;var Vn={type:\\\"pyodide\\\",module:(e=\\\"0.27.7\\\")=>`https://cdn.jsdelivr.net/pyodide/v${e}/full/pyodide.mjs`,async engine({loadPyodide:e,version:t},n,r,s){Kn(\\\"Loading Pyodide\\\");let{packages:o,index_urls:a}=n;o&&(o=o.map(Ft,s)),Kn(\\\"Loading Storage\\\");const c=r.slice(0,r.lastIndexOf(\\\"/\\\")),l=new i(`${c}@${t}`),u={indexURL:c},p=\\\"never\\\"!==n.packages_cache&&\\\"0.28.0\\\"!==t;if(await l.sync(),p){if(o)if(\\\"passthrough\\\"===n.packages_cache)u.packages=o,o=null,l.clear();else{o=o.sort();const e=Hn(o);if(l.has(e)){const t=new Blob([l.get(e)],{type:\\\"application/json\\\"});u.lockFileURL=URL.createObjectURL(t),u.packages=o.map(e=>e.split(/[>=<]=/)[0]),o=null}}}else l.clear();Kn(\\\"Loaded Storage\\\");const{stderr:d,stdout:f,get:h}=_t(),y=await h(e({stderr:d,stdout:f,...u}));n.debug&&y.setDebug(!0);const m=Yn.bind(y);return a&&Gn.set(y,a),vn.set(y,m),await kn(this,Kn,y,n,s),o&&await m(o,l,p),await l.close(),u.lockFileURL&&URL.revokeObjectURL(u.lockFileURL),Kn(\\\"Loaded Pyodide\\\"),\\\"auto\\\"===n.experimental_create_proxy&&(y.runPython([\\\"import js\\\",\\\"from pyodide.ffi import to_js\\\",\\\"o=js.Object.fromEntries\\\",\\\"js.experimental_create_proxy=lambda r:to_js(r,dict_converter=o)\\\"].join(\\\";\\\"),{globals:y.toPy({})}),Jn=globalThis.experimental_create_proxy,delete globalThis.experimental_create_proxy,[qn]=Reflect.ownKeys(Jn).filter(e=>\\\"symbol\\\"==typeof e&&\\\"Symbol(pyproxy.attrs)\\\"===String(e)),zn(!0)),y},registerJSModule:Sn,run:Nn($n),runAsync:Nn(jn),runEvent:Nn(Bn),transform:(e,t)=>Un(Xn,e,[t]),writeFile:(e,t,n,r)=>{const s=xn(t,r);if(s)return e.unpackArchive(n,s,{extractDir:t.slice(0,-1)});const{FS:o,PATH:a,_module:{PATH_FS:i}}=e;return en({FS:o,PATH:a,PATH_FS:i},t,n)}};function Xn(e){const{ffi:{PyProxy:t}}=this;if(e&&\\\"object\\\"==typeof e){if(e instanceof t)return e.toJs(In);if(e instanceof Map)return new Map([...e.entries()]);if(vt(e))return e.map(Xn,this)}return e}async function Yn(e,t,n=!1){const{log:r}=console,s=(e,...t)=>{r(e,...t),console.log=r,Kn(e),console.log=s};console.log=s,await this.loadPackage(\\\"micropip\\\");const o=this.pyimport(\\\"micropip\\\");if(Gn.has(this)&&o.set_index_urls(Gn.get(this)),await o.install(e,{keep_going:!0}),console.log=r,n&&t instanceof i){const n=o.freeze();t.set(Hn(e),n)}o.destroy()}const Zn=\\\"ruby-wasm-wasi\\\",Qn=Zn.replace(/\\\\W+/g,\\\"_\\\");var er={type:Zn,experimental:!0,module:(e=\\\"2.7.1\\\")=>`https://cdn.jsdelivr.net/npm/@ruby/3.2-wasm-wasi@${e}/dist/browser/+esm`,async engine({DefaultRubyVM:e},t,n,r){n=n.replace(/\\\\/browser\\\\/\\\\+esm$/,\\\"/ruby.wasm\\\");const s=await Zt(n).arrayBuffer(),o=await WebAssembly.compile(s),{vm:a}=await e(o);return t.files&&await un(this,a,t.files,r),t.fetch&&await an(this,a,t.fetch,r),t.js_modules&&await pn(t.js_modules,r),a},registerJSModule(e,t,n){t=t.replace(/\\\\W+/g,\\\"__\\\");const r=`__module_${Qn}_${t}`;globalThis[r]=n,this.run(e,`require \\\"js\\\";$${t}=JS.global[:${r}]`),delete globalThis[r]},run:(e,t,...n)=>e.eval(Et(t),...n),runAsync:(e,t,...n)=>e.evalAsync(Et(t),...n),async runEvent(e,t,n){if(/^xworker\\\\.(on\\\\w+)$/.test(t)){const{$1:t}=RegExp,r=`__module_${Qn}_event`;globalThis[r]=n,this.run(e,`require \\\"js\\\";$xworker.call(\\\"${t}\\\",JS.global[:${r}])`),delete globalThis[r]}else{const r=this.run(e,`method(:${t})`);await r.call(t,e.wrap(n))}},transform:(e,t)=>t,writeFile:()=>{throw new Error(`writeFile is not supported in ${Zn}`)}};var tr={type:\\\"wasmoon\\\",module:(e=\\\"1.16.0\\\")=>`https://cdn.jsdelivr.net/npm/wasmoon@${e}/+esm`,async engine({LuaFactory:e,LuaLibraries:t},n,r,s){const{stderr:o,stdout:a,get:i}=_t(),c=await i((new e).createEngine());return c.global.getTable(t.Base,e=>{c.global.setField(e,\\\"print\\\",a),c.global.setField(e,\\\"printErr\\\",o)}),n.files&&await un(this,c,n.files,s),n.fetch&&await an(this,c,n.fetch,s),n.js_modules&&await pn(n.js_modules,s),c},registerJSModule:(e,t,n)=>{e.global.set(t,n)},run:(e,t,...n)=>{try{return e.doStringSync(Et(t),...n)}catch(t){wt.get(e).stderr(t)}},runAsync:async(e,t,...n)=>{try{return await e.doString(Et(t),...n)}catch(t){wt.get(e).stderr(t)}},runEvent:async(e,t,n)=>{const[r,...s]=t.split(\\\".\\\");let o,a=e.global.get(r);for(const e of s)[o,a]=[a,a[e]];try{await a.call(o,n)}catch(t){wt.get(e).stderr(t)}},transform:(e,t)=>t,writeFile:({cmodule:{module:{FS:e}}},t,n)=>((e,t,n)=>(nn(e,tn(t)),t=rn(e,t),e.writeFile(t,new Uint8Array(n),{canOwn:!0})))(e,t,n)};const nr=new WeakMap,rr=new FinalizationRegistry(e=>e()),sr=async(e,t)=>{const{shelter:n,destroy:r,io:s}=nr.get(e),{output:o,result:a}=await n.captureR(Et(t));for(const{type:e,data:t}of o)s[e](t);return rr.register(a,r),a};var or={type:\\\"webr\\\",experimental:!0,module:(e=\\\"0.5.5-dev\\\")=>`https://cdn.jsdelivr.net/npm/webr@${e}/dist/webr.mjs`,async engine(e,t,n,r){const{get:s}=_t(),o=new e.WebR;await s(o.init().then(()=>o));const a=await new o.Shelter;return nr.set(o,{module:e,shelter:a,destroy:a.destroy.bind(a),io:wt.get(o)}),t.files&&await un(this,o,t.files,r),t.fetch&&await an(this,o,t.fetch,r),t.js_modules&&await pn(t.js_modules,r),o},registerJSModule(e,t){console.warn(`Experimental interpreter: module ${t} is not supported (yet)`)},run:sr,runAsync:sr,async runEvent(e,t,n){await e.evalRVoid(`${t}(event)`,{env:{event:{type:[n.type]}}})},transform:(e,t)=>t,writeFile:()=>{}};const ar=new Map,ir=new Map,cr=new Proxy(new Map,{get(e,t){if(!e.has(t)){const[n,...r]=t.split(\\\"@\\\"),s=ar.get(n),o=/^(?:\\\\.?\\\\.?\\\\/|[a-z0-9-]+:\\\\/\\\\/)/i.test(r)?r.join(\\\"@\\\"):s.module(...r);e.set(t,{url:o,module:import(o),engine:s.engine.bind(s)})}const{url:n,module:r,engine:s}=e.get(t);return(e,o)=>r.then(r=>(ir.set(t,e),s(r,e,n,o)))}}),lr=e=>{for(const t of[].concat(e.type))ar.set(t,e)};for(const e of[Gt,Ln,Vn,er,tr,or])lr(e);const{parse:ur}=JSON,pr=(e,t,n={})=>{const[r,s]=((e,t=\\\"./config.txt\\\")=>{let n=typeof e;return\\\"string\\\"===n&&/\\\\.(json|toml|txt)$/.test(e)?n=RegExp.$1:e=t,[Mt(e),n]})(e,t);return\\\"json\\\"===s?n=Zt(r).json():\\\"toml\\\"===s?n=Zt(r).text().then(Fn):\\\"string\\\"===s?n=dr(e):\\\"object\\\"===s&&e?n=e:\\\"txt\\\"===s&&\\\"string\\\"==typeof n&&(n=dr(n)),[n,e=r]},dr=e=>{try{return ur(e)}catch(t){return Fn(e)}},fr=\\\"BeforeRun\\\",hr=\\\"AfterRun\\\",yr=[`code${fr}`,`code${fr}Async`,`code${hr}`,`code${hr}Async`],mr=[\\\"onWorker\\\",\\\"onReady\\\",`on${fr}`,`on${fr}Async`,`on${hr}`,`on${hr}Async`];function gr(e,t){const{run:n,runAsync:r}=ar.get(this.type);return{...e,run:n.bind(this,t),runAsync:r.bind(this,t)}}const wr=(e,t,n,r,s,o)=>{if(s||o){const a=gr.bind(e,t),i=r?\\\"runAsync\\\":\\\"run\\\",c=e[i];e[i]=r?async function(e,t,...r){s&&await s.call(this,a(e),n);const i=await c.call(this,e,t,...r);return o&&await o.call(this,a(e),n),i}:function(e,t,...r){s&&s.call(this,a(e),n);const i=c.call(this,e,t,...r);return o&&o.call(this,a(e),n),i}}};let _r,br,Ar;const Er=(e,t)=>{addEventListener(e,t||(async t=>{try{await _r,br(`xworker.on${e}`,t)}catch(e){postMessage(e)}}),!!t&&{once:!0})},{proxy:vr,sync:kr,native:Sr,window:xr,isWindowProxy:$r,ffi:jr}=await(async e=>{const t=await mt({...e,decoder:e?.decoder||de}),n=We({...e,buffer:!0,reflect:t.proxy[l],timeout:t.ffi_timeout});return t.proxy[u]=n.reflect,{...t,window:n.global,isWindowProxy:n.isProxy,ffi:{assign:n.assign,direct:n.direct,evaluate:n.evaluate,gather:n.gather,query:n.query}}})({transfer:!1,transform:e=>Ar?Ar(e):e}),Br={polyfill:kr,sync:vr,window:Sr||kr?xr:null,isWindowProxy:$r,onmessage:console.info,onerror:console.error,onmessageerror:console.warn,postMessage:postMessage.bind(self)};Er(\\\"message\\\",({data:{options:e,config:t,configURL:n,code:r,hooks:s}})=>{_r=(async()=>{try{const{id:o,tag:c,type:l,custom:u,version:p,config:d,async:f}=e,h=((e,t=\\\"\\\")=>`${e}@${t}`.replace(/@$/,\\\"\\\"))(l,p),y=await((e,t,n,r={})=>(t&&([r,t]=pr(t,n,r)),Bt(r).then(n=>cr[e](n,t))))(h,t,n,d),{js_modules:m}=ir.get(h),g=m?.main,w=St(ar.get(l)),_=((e,t,n,r)=>({type:t,config:n,interpreter:r,io:wt.get(r),run:(t,...n)=>e.run(r,t,...n),runAsync:(t,...n)=>e.runAsync(r,t,...n),runEvent:(...t)=>e.runEvent(r,...t)}))(w,u||l,d||{},y);let b=\\\"run\\\";if(f&&(b+=\\\"Async\\\"),s){let e,t,n=\\\"\\\",r=\\\"\\\";for(const e of yr){const t=s[e];if(t){const s=e.endsWith(\\\"Async\\\");(s&&f||!s&&!f)&&(e.startsWith(\\\"codeBefore\\\")?n=t:r=t)}}(n||r)&&((e,t,n,r)=>{const s=e[t].bind(e);e[t]=\\\"run\\\"===t?(e,t,...o)=>{n&&s(e,n,...o);const a=s(e,Dt(t),...o);return r&&s(e,r,...o),a}:async(e,t,...o)=>{n&&await s(e,n,...o);const a=await s(e,Dt(t),...o);return r&&await s(e,r,...o),a}})(w,b,n,r);for(const n of mr.slice(2)){const r=s[n];if(r){const s=n.endsWith(\\\"Async\\\");if(s&&f||!s&&!f){const s=Rt(r);n.startsWith(\\\"onBefore\\\")?e=s:t=s}}}wr(w,_,Br,f,e,t)}let A,E,v,k=null,S=\\\"\\\";(Sr||kr)&&(({CustomEvent:A,document:E}=xr),k=o&&E.getElementById(o)||null,v=e=>Pt(k,u||l,e,!0,A));const x=qt(xr,vr,g,t);if(((e,t,n,r)=>{if(\\\"pyodide\\\"===e)return;const s=\\\"polyscript.js_modules\\\";for(const e of Reflect.ownKeys(r))t.registerJSModule(n,`${s}.${e}`,Ct(r,e));t.registerJSModule(n,s,r)})(l,w,y,x),w.registerJSModule(y,\\\"polyscript\\\",{IDBMap:a,IDBMapSync:i,xworker:Br,currentScript:k,config:_.config,js_modules:x,ffi:jr,get target(){return!S&&k&&(\\\"SCRIPT\\\"===c?k.after(kt(xr.document.createElement(`script-${u||l}`),{id:S=`${o}-target`})):(S=o,k.replaceChildren(),k.style.display=\\\"block\\\")),S}}),br=w.runEvent.bind(w,y),Ar=w.transform.bind(w,y),k&&v(\\\"ready\\\"),s?.onReady&&Rt(s?.onReady).call(w,gr.call(w,_,y),Br),await w[b](y,r),[\\\"micropython\\\",\\\"pyodide\\\"].includes(w.type)){const e=\\\"polyscript\\\",t=`__${e}_workers__`,n=\\\"__export__\\\";y.runPython([`import js as ${t}`,`${t}.${t} = \\\"${n}\\\" in locals() and ${n} or []`,`del ${t}`].join(\\\"\\\\n\\\"));const r=[...globalThis[t]];delete globalThis[t],r.length&&y.runPython([`from ${e} import xworker as ${t}`,...r.map(e=>`${t}.sync.${e} = ${e}`),`del ${t}`].join(\\\"\\\\n\\\"))}return k&&v(\\\"done\\\"),postMessage(\\\"polyscript:done\\\"),y}catch(e){postMessage(e)}})(),Er(\\\"error\\\"),Er(\\\"message\\\"),Er(\\\"messageerror\\\"),(Sr||kr)&&addEventListener(\\\"py:progress\\\",({type:e,detail:t})=>{xr.dispatchEvent(new xr.CustomEvent(e,{detail:t}))})});\\n\".replace(re,place)],{type:'text/javascript'})), ...args)\n/* c8 ignore stop */\n","import local from 'reflected-ffi/local';\nimport patchEvent from 'reflected-ffi/utils/events';\nimport { encoder as directEncoder } from 'reflected-ffi/encoder';\n\nimport { MAIN, WORKER } from './constants.js';\n\nimport coincident from '../main.js';\nimport { ffi_timeout } from '../utils.js';\n\nexport default options => {\n  const esm = options?.import;\n  const timeout = ffi_timeout(options);\n  const exports = coincident({\n    ...options,\n    encoder: options?.encoder || directEncoder,\n  });\n\n  /** @type {Worker & { proxy: Record<string, function> }} */\n  class Worker extends exports.Worker {\n    #terminate;\n\n    constructor(url, options) {\n      const { proxy } = super(url, options);\n      const ffi = local({\n        ...options,\n        buffer: true,\n        reflect: proxy[WORKER],\n        timeout: ffi_timeout(options, timeout),\n        remote(event) { if (event instanceof Event) patchEvent(event); },\n        module: options?.import || esm || (name => import(new URL(name, location).href)),\n      });\n\n      this.#terminate = ffi.terminate;\n\n      this.ffi = {  \n        assign: ffi.assign,\n        direct: ffi.direct,\n        evaluate: ffi.evaluate,\n        gather: ffi.gather,\n        query: ffi.query,\n      };\n\n      proxy[MAIN] = ffi.reflect;\n    }\n\n    terminate() {\n      this.#terminate();\n      super.terminate();\n    }\n  }\n\n  return { ...exports, Worker };\n};\n","import fetch from '@webreflection/fetch';\n\nimport { interpreter } from './interpreters.js';\nimport { absoluteURL, resolve } from './utils.js';\nimport { toml } from './3rd-party.js';\n\nconst { parse } = JSON;\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const getConfigURLAndType = (config, configURL = './config.txt') => {\n    let type = typeof config;\n    if (type === 'string' && /\\.(json|toml|txt)$/.test(config))\n        type = RegExp.$1;\n    else\n        config = configURL;\n    return [absoluteURL(config), type];\n};\n\nexport const resolveConfig = (config, configURL, options = {}) => {\n    const [absolute, type] = getConfigURLAndType(config, configURL);\n    if (type === 'json') {\n        options = fetch(absolute).json();\n    } else if (type === 'toml') {\n        options = fetch(absolute).text().then(toml);\n    } else if (type === 'string') {\n        options = parseString(config);\n    } else if (type === 'object' && config) {\n        options = config;\n    } else if (type === 'txt' && typeof options === 'string') {\n        options = parseString(options);\n    }\n    config = absolute;\n    return [options, config];\n};\n\nconst parseString = config => {\n    try {\n        return parse(config);\n    }\n    // eslint-disable-next-line no-unused-vars\n    catch (_) {\n        return toml(config);\n    }\n};\n/* c8 ignore stop */\n\n/**\n * Parse a generic config if it came from an attribute either as URL\n * or as a serialized string. In XWorker case, accepts a pre-defined\n * options to use as it is to avoid needing at all a fetch operation.\n * In latter case, config will be suffixed as `config.txt`.\n * @param {string} id the interpreter name @ version identifier\n * @param {string | object} config optional config file to parse\n * @param {string} [configURL] optional config URL if config is not string\n * @param {object} [options] optional options used to bootstrap XWorker\n * @returns\n */\nexport const getRuntime = (id, config, configURL, options = {}) => {\n    if (config) {\n        // REQUIRES INTEGRATION TEST\n        /* c8 ignore start */\n        [options, config] = resolveConfig(config, configURL, options);\n        /* c8 ignore stop */\n    }\n    return resolve(options).then(options => interpreter[id](options, config));\n};\n\n/**\n * @param {string} type the interpreter type\n * @param {string} [version] the optional interpreter version\n * @returns\n */\nexport const getRuntimeID = (type, version = '') =>\n    `${type}@${version}`.replace(/@$/, '');\n","// (c) https://github.com/WebReflection/to-json-callback\r\n// brought in here to avoid a dependency for quick testing\r\n\r\n/**\r\n * @param {Function} [callback=this]\r\n * @returns {string}\r\n */\r\nexport default function (callback = this) {\r\n  return String(callback).replace(\r\n    /^(async\\s*)?(\\bfunction\\b)?(.*?)\\(/,\r\n    (_, isAsync, fn, name) => (\r\n      name && !fn ?\r\n        `${isAsync || \"\"}function ${name}(` :\r\n        _\r\n    ),\r\n  );\r\n};\r\n","import { registry } from './interpreters.js';\n\nconst beforeRun = 'BeforeRun';\nconst afterRun = 'AfterRun';\n\nexport const code = [\n    `code${beforeRun}`,\n    `code${beforeRun}Async`,\n    `code${afterRun}`,\n    `code${afterRun}Async`,\n];\n\nexport const js = [\n    'onWorker',\n    'onReady',\n    `on${beforeRun}`,\n    `on${beforeRun}Async`,\n    `on${afterRun}`,\n    `on${afterRun}Async`,\n];\n\n/* c8 ignore start */\n// create a copy of the resolved wrapper with the original\n// run and runAsync so that, if used within onBeforeRun/Async\n// or onAfterRun/Async polluted entries won't matter and just\n// the native utilities will be available without seppuku.\n// The same applies if called within `onReady` worker hook.\nexport function patch(resolved, interpreter) {\n    const { run, runAsync } = registry.get(this.type);\n    return {\n        ...resolved,\n        run: run.bind(this, interpreter),\n        runAsync: runAsync.bind(this, interpreter)\n    };\n}\n\n/**\n * Created the wrapper to pass along hooked callbacks.\n * @param {object} module the details module\n * @param {object} ref the node or reference to pass as second argument\n * @param {boolean} isAsync if run should be async\n * @param {function?} before callback to run before\n * @param {function?} after callback to run after\n * @returns {object}\n */\nexport const polluteJS = (module, resolved, ref, isAsync, before, after) => {\n    if (before || after) {\n        const patched = patch.bind(module, resolved);\n        const name = isAsync ? 'runAsync' : 'run';\n        const method = module[name];\n        module[name] = isAsync ?\n            async function (interpreter, code, ...args) {\n                if (before) await before.call(this, patched(interpreter), ref);\n                const result = await method.call(\n                    this,\n                    interpreter,\n                    code,\n                    ...args\n                );\n                if (after) await after.call(this, patched(interpreter), ref);\n                return result;\n            } :\n            function (interpreter, code, ...args) {\n                if (before) before.call(this, patched(interpreter), ref);\n                const result = method.call(this, interpreter, code, ...args);\n                if (after) after.call(this, patched(interpreter), ref);\n                return result;\n            }\n        ;\n    }\n};\n/* c8 ignore stop */\n","import toJSONCallback from 'reflected-ffi/to-json-callback';\n\nimport { dedent } from '../utils.js';\nimport { js as jsHooks, code as codeHooks } from '../hooks.js';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default class Hook {\n    constructor(interpreter, hooks = {}) {\n        const { main, worker } = hooks;\n        this.interpreter = interpreter;\n        this.onWorker = main?.onWorker;\n        // ignore onWorker as that's main only\n        for (const key of jsHooks.slice(1))\n            this[key] = worker?.[key];\n        for (const key of codeHooks)\n            this[key] = worker?.[key];\n    }\n    toJSON() {\n        const hooks = {};\n        // ignore onWorker as that's main only\n        for (const key of jsHooks.slice(1)) {\n            if (this[key]) hooks[key] = toJSONCallback(this[key]);\n        }\n        // code related: exclude `onReady` callback\n        for (const key of codeHooks) {\n            if (this[key]) hooks[key] = dedent(this[key]());\n        }\n        return hooks;\n    }\n}\n/* c8 ignore stop */\n","import withResolvers from '@webreflection/utils/with-resolvers';\nimport fetch from '@webreflection/fetch';\nimport xworker from './xworker.js';\nimport { getConfigURLAndType } from '../loader.js';\nimport { assign, create, defineProperties, importCSS, importJS } from '../utils.js';\nimport Hook from './hook.js';\n\n/**\n * @typedef {Object} WorkerOptions custom configuration\n * @prop {string} type the interpreter type to use\n * @prop {string} [version] the optional interpreter version to use\n * @prop {string | object} [config] the optional config to use within such interpreter\n * @prop {string} [configURL] the optional configURL used to resolve config entries\n * @prop {string} [serviceWorker] the optional Service Worker for SharedArrayBuffer fallback\n * @prop {string} [service_worker] alias for `serviceWorker`\n */\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default (...args) =>\n    /**\n     * A XWorker is a Worker facade able to bootstrap a channel with any desired interpreter.\n     * @param {string} url the remote file to evaluate on bootstrap\n     * @param {WorkerOptions} [options] optional arguments to define the interpreter to use\n     * @returns {Worker}\n     */\n    function XWorker(url, options) {\n        if (args.length) {\n            const [type, version] = args;\n            options = assign({}, options || { type, version });\n            if (!options.type) options.type = type;\n        }\n\n        // provide a base url to fetch or load config files from a Worker\n        // because there's no location at all in the Worker as it's embedded.\n        // fallback to a generic, ignored, config.txt file to still provide a URL.\n        const [ config ] = getConfigURLAndType(options.config, options.configURL);\n\n        const serviceWorker = options?.serviceWorker || options?.service_worker;\n        const worker = xworker({\n            serviceWorker,\n            reflected_ffi_timeout: globalThis.reflected_ffi_timeout ?? -1,\n        });\n        const { postMessage } = worker;\n        const isHook = this instanceof Hook;\n\n        const sync = assign(\n            worker.proxy,\n            { importJS, importCSS },\n        );\n\n        const resolver = withResolvers();\n\n        let bootstrap = fetch(url)\n            .text()\n            .then(code => {\n                const hooks = isHook ? this.toJSON() : void 0;\n                postMessage.call(worker, { options, config, code, hooks });\n            })\n            .then(() => {\n                // boost postMessage performance\n                bootstrap = { then: fn => fn() };\n            });\n\n        defineProperties(worker, {\n            sync: { value: sync },\n            ready: { value: resolver.promise },\n            postMessage: {\n                value: (data, ...rest) => bootstrap.then(\n                    () => postMessage.call(worker, data, ...rest),\n                ),\n            },\n            onerror: {\n                writable: true,\n                configurable: true,\n                value: console.error\n            }\n        });\n\n        worker.addEventListener('message', event => {\n            const { data } = event;\n            const isError = data instanceof Error;\n            if (isError || data === 'polyscript:done') {\n                event.stopImmediatePropagation();\n                if (isError) {\n                    resolver.reject(data);\n                    worker.onerror(create(event, {\n                        type: { value: 'error' },\n                        error: { value: data }\n                    }));\n                }\n                else resolver.resolve(worker);\n            }\n        });\n\n        if (isHook) this.onWorker?.(this.interpreter, worker);\n\n        return worker;\n    };\n\n/* c8 ignore stop */","export const INVALID_CONTENT = 'Invalid content';\nexport const INVALID_SRC_ATTR = 'Invalid worker attribute';\nexport const INVALID_WORKER_ATTR = 'Invalid worker attribute';\n","import { INVALID_CONTENT, INVALID_SRC_ATTR, INVALID_WORKER_ATTR } from '../errors.js';\n\nimport { dedent, unescape } from '../utils.js';\n\nconst hasCommentsOnly = text => !text\n    .replace(/\\/\\*[\\s\\S]*?\\*\\//g, '')\n    .replace(/^\\s*(?:\\/\\/|#).*/gm, '')\n    .trim()\n;\n\n/* c8 ignore start */ // tested via integration\nexport default element => {\n  const { src, worker } = element.attributes;\n  if (worker) {\n      let { value } = worker;\n      // throw on worker values as ambiguous\n      // @see https://github.com/pyscript/polyscript/issues/43\n      if (value) throw new SyntaxError(INVALID_WORKER_ATTR);\n      value = src?.value;\n      if (!value) {\n          // throw on empty src attributes\n          if (src) throw new SyntaxError(INVALID_SRC_ATTR);\n          if (!element.childElementCount)\n              value = element.textContent;\n          else {\n              const { innerHTML, localName, type } = element;\n              const name = type || localName.replace(/-script$/, '');\n              value = unescape(innerHTML);\n              console.warn(\n                  `Deprecated: use <script type=\"${name}\"> for an always safe content parsing:\\n`,\n                  value,\n              );\n          }\n\n          const url = URL.createObjectURL(new Blob([dedent(value)], { type: 'text/plain' }));\n          // TODO: should we really clean up this? debugging non-existent resources\n          //       at distance might be very problematic if the url is revoked.\n          // setTimeout(URL.revokeObjectURL, 5000, url);\n          return url;\n      }\n      return value;\n  }\n  // validate ambiguous cases with src and not empty/commented content\n  if (src && !hasCommentsOnly(element.textContent))\n    throw new SyntaxError(INVALID_CONTENT);\n};\n/* c8 ignore stop */\n","import fetch from '@webreflection/fetch';\nimport { $ } from 'basic-devtools';\n\nimport IDBMap from '@webreflection/idb-map';\nimport IDBMapSync from '@webreflection/idb-map/sync';\n\nimport { workers, workersHandler } from './workers.js';\nimport $xworker from './worker/class.js';\nimport workerURL from './worker/url.js';\nimport { getRuntime, getRuntimeID } from './loader.js';\nimport { registry } from './interpreters.js';\nimport { JSModules, isSync, all, dispatch, resolve, defineProperty, nodeInfo, registerJSModules } from './utils.js';\n\nconst getRoot = (script) => {\n    let parent = script;\n    while (parent.parentNode) parent = parent.parentNode;\n    return parent;\n};\n\nexport const queryTarget = (script, idOrSelector) => {\n    const root = getRoot(script);\n    return root.getElementById(idOrSelector) || $(idOrSelector, root);\n};\n\nconst targets = new WeakMap();\nconst targetDescriptor = {\n    get() {\n        let target = targets.get(this);\n        if (!target) {\n            target = document.createElement(`${this.type}-script`);\n            targets.set(this, target);\n            handle(this);\n        }\n        return target;\n    },\n    set(target) {\n        if (typeof target === 'string')\n            targets.set(this, queryTarget(this, target));\n        else {\n            targets.set(this, target);\n            handle(this);\n        }\n    },\n};\n\nconst handled = new WeakMap();\n\nexport const interpreters = new Map();\n\nconst execute = async (currentScript, source, XWorker, isAsync) => {\n    const { type } = currentScript;\n    const module = registry.get(type);\n    /* c8 ignore start */\n    if (module.experimental)\n        console.warn(`The ${type} interpreter is experimental`);\n    const [interpreter, content] = await all([\n        handled.get(currentScript).interpreter,\n        source,\n    ]);\n    try {\n        registerJSModules(type, module, interpreter, JSModules);\n        module.registerJSModule(interpreter, 'polyscript', {\n            IDBMap,\n            IDBMapSync,\n            XWorker,\n            currentScript,\n            js_modules: JSModules,\n            workers: workersHandler,\n        });\n        dispatch(currentScript, type, 'ready');\n        // temporarily override inherited document.currentScript in a non writable way\n        // but it deletes it right after to preserve native behavior (as it's sync: no trouble)\n        defineProperty(document, 'currentScript', {\n            configurable: true,\n            get: () => currentScript,\n        });\n        const done = dispatch.bind(null, currentScript, type, 'done');\n        let result = module[isAsync ? 'runAsync' : 'run'](interpreter, content);\n        if (isAsync) result = await result;\n        done();\n        return result;\n    } finally {\n        delete document.currentScript;\n    }\n    /* c8 ignore stop */\n};\n\nconst getValue = (ref, prefix) => {\n    const value = ref?.value;\n    return value ? prefix + value : '';\n};\n\nexport const getDetails = (type, id, name, version, config, configURL, runtime = type) => {\n    if (!interpreters.has(id)) {\n        const details = {\n            interpreter: getRuntime(name, config, configURL),\n            queue: resolve(),\n            XWorker: $xworker(type, version),\n        };\n        interpreters.set(id, details);\n        // enable sane defaults when single interpreter *of kind* is used in the page\n        // this allows `xxx-*` attributes to refer to such interpreter without `env` around\n        /* c8 ignore start *//* this is tested very well in PyScript */\n        if (!interpreters.has(type)) interpreters.set(type, details);\n        if (!interpreters.has(runtime)) interpreters.set(runtime, details);\n        /* c8 ignore stopt */\n    }\n    return interpreters.get(id);\n};\n\n/**\n * @param {HTMLScriptElement} script a special type of <script>\n */\nexport const handle = async (script) => {\n    // known node, move its companion target after\n    // vDOM or other use cases where the script is a tracked element\n    if (handled.has(script)) {\n        const { target } = script;\n        if (target) {\n            // if the script is in the head just append target to the body\n            if (script.closest('head')) document.body.append(target);\n            // in any other case preserve the script position\n            else script.after(target);\n        }\n    }\n    // new script to handle ... allow newly created scripts to work\n    // just exactly like any other script would\n    else {\n        // allow a shared config among scripts, beside interpreter,\n        // and/or source code with different config or interpreter\n        const {\n            attributes: {\n                config,\n                env,\n                name: wn,\n                target,\n                version,\n                ['service-worker']: sw,\n            },\n            src,\n            type,\n        } = script;\n\n        /* c8 ignore start */\n        const isAsync = !isSync(script);\n\n        const versionValue = version?.value;\n        const name = getRuntimeID(type, versionValue);\n        let configValue = getValue(config, '|');\n        const id = getValue(env, '') || `${name}${configValue}`;\n        configValue = configValue.slice(1);\n\n        const url = workerURL(script);\n        if (url) {\n            const XWorker = $xworker(type, versionValue);\n            const xworker = new XWorker(url, {\n                ...nodeInfo(script, type),\n                version: versionValue,\n                async: isAsync,\n                config: configValue,\n                serviceWorker: sw?.value,\n            });\n            handled.set(\n                defineProperty(script, 'xworker', { value: xworker }),\n                { xworker },\n            );\n            const workerName = wn?.value;\n            if (workerName) workers[workerName].resolve(xworker.ready);\n            return;\n        }\n        /* c8 ignore stop */\n\n        const targetValue = getValue(target, '');\n        const details = getDetails(type, id, name, versionValue, configValue);\n\n        handled.set(\n            defineProperty(script, 'target', targetDescriptor),\n            details,\n        );\n\n        if (targetValue) targets.set(script, queryTarget(script, targetValue));\n\n        // start fetching external resources ASAP\n        const source = src ? fetch(src).text() : script.textContent;\n        details.queue = details.queue.then(() =>\n            execute(script, source, details.XWorker, isAsync),\n        );\n    }\n};\n","import { $x } from 'basic-devtools';\n\nimport { interpreters } from './script-handler.js';\nimport { all, create } from './utils.js';\nimport { registry, prefixes } from './interpreters.js';\n\n/* c8 ignore start */\nexport const env = new Proxy(create(null), {\n    get: (_, name) => new Promise(queueMicrotask).then(\n        () => awaitInterpreter(name)\n    ),\n});\n\n// attributes are tested via integration / e2e\n// ensure both interpreter and its queue are awaited then returns the interpreter\nconst awaitInterpreter = async (key) => {\n    if (interpreters.has(key)) {\n        const { interpreter, queue } = interpreters.get(key);\n        return (await all([interpreter, queue]))[0];\n    }\n\n    const available = interpreters.size\n        ? `Available interpreters are: ${[...interpreters.keys()]\n              .map((r) => `\"${r}\"`)\n              .join(', ')}.`\n        : 'There are no interpreters in this page.';\n\n    throw new Error(`The interpreter \"${key}\" was not found. ${available}`);\n};\n\nexport const listener = async (event) => {\n    const { type, currentTarget } = event;\n    if (!prefixes.length) return;\n    for (let { name, value, ownerElement: el } of $x(\n        `./@*[${prefixes.map((p) => `name()=\"${p}${type}\"`).join(' or ')}]`,\n        currentTarget,\n    )) {\n        name = name.slice(0, -(type.length + 1));\n        const interpreter = await awaitInterpreter(\n            el.getAttribute(`${name}-env`) || name,\n        );\n        const handler = registry.get(name);\n        handler.runEvent(interpreter, value, event);\n    }\n};\n\n/**\n * Look for known prefixes and add related listeners.\n * @param {Document | Element} root\n */\nexport const addAllListeners = (root) => {\n    if (!prefixes.length) return;\n    for (let { name, ownerElement: el } of $x(\n        `.//@*[${prefixes\n            .map((p) => `starts-with(name(),\"${p}\")`)\n            .join(' or ')}]`,\n        root,\n    )) {\n        const i = name.lastIndexOf('-');\n        const type = name.slice(i + 1);\n        if (type !== 'env') {\n            el.addEventListener(type, listener);\n            // automatically disable form controls that are not disabled already\n            if ('disabled' in el && !el.disabled) {\n                el.disabled = true;\n                // set these to enable once the interpreter is known (registered + loaded)\n                env[name.slice(0, i)].then(() => {\n                    el.disabled = false;\n                });\n            }\n        }\n    }\n};\n/* c8 ignore stop */\n","import xworker from './worker/class.js';\nimport Hook from './worker/hook.js';\n\nconst XWorker = xworker();\n\nexport { Hook, XWorker };\n","import withResolvers from '@webreflection/utils/with-resolvers';\nimport { $$ } from 'basic-devtools';\n\nimport IDBMap from '@webreflection/idb-map';\nimport IDBMapSync from '@webreflection/idb-map/sync';\n\nimport { JSModules, isSync, assign, create, createOverload, createResolved, dedent, defineProperty, nodeInfo, registerJSModules } from './utils.js';\nimport { getDetails } from './script-handler.js';\nimport { registry as defaultRegistry, prefixes, configs } from './interpreters.js';\nimport { getRuntimeID, resolveConfig } from './loader.js';\nimport { addAllListeners } from './listeners.js';\nimport { Hook, XWorker as XW } from './xworker.js';\nimport { workers, workersHandler } from './workers.js';\nimport { polluteJS, js as jsHooks, code as codeHooks } from './hooks.js';\nimport workerURL from './worker/url.js';\n\nexport const CUSTOM_SELECTORS = [];\n\nexport const customObserver = new Map();\n\n/**\n * @typedef {Object} Runtime custom configuration\n * @prop {object} interpreter the bootstrapped interpreter\n * @prop {(url:string, options?: object) => Worker} XWorker an XWorker constructor that defaults to same interpreter on the Worker.\n * @prop {object} config a cloned config used to bootstrap the interpreter\n * @prop {(code:string) => any} run an utility to run code within the interpreter\n * @prop {(code:string) => Promise<any>} runAsync an utility to run code asynchronously within the interpreter\n * @prop {(path:string, data:ArrayBuffer) => void} writeFile an utility to write a file in the virtual FS, if available\n */\n\nconst types = new Map();\nconst waitList = new Map();\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\n/**\n * @param {Element} node any DOM element registered via define.\n */\nexport const handleCustomType = async (node) => {\n    for (const selector of CUSTOM_SELECTORS) {\n        if (node.matches(selector)) {\n            const type = types.get(selector);\n            const details = registry.get(type);\n            const { resolve } = waitList.get(type);\n            const { options, known } = details;\n\n            if (known.has(node)) return;\n            known.add(node);\n\n            for (const [selector, callback] of customObserver) {\n                if (node.matches(selector)) await callback(node);\n            }\n\n            const {\n                interpreter: runtime,\n                configURL,\n                config,\n                version,\n                env,\n                onerror,\n                hooks,\n            } = options;\n\n            let error;\n            try {\n                const worker = workerURL(node);\n                if (worker) {\n                    let v = version;\n                    let url = configURL;\n                    let cfg = node.getAttribute('config') || config || {};\n                    if (!v || !cfg) {\n                        const [o, u] = resolveConfig(cfg, configURL);\n                        cfg = await o;\n                        url = u;\n                        v = cfg.version || cfg.interpreter;\n                        if (v && /\\.m?js$/.test(v))\n                            v = new URL(v, url).href;\n                    }\n\n                    if (Number.isSafeInteger(cfg?.experimental_ffi_timeout))\n                        globalThis.reflected_ffi_timeout = cfg.experimental_ffi_timeout;\n\n                    const xworker = XW.call(new Hook(null, hooks), worker, {\n                        ...nodeInfo(node, type),\n                        configURL: url,\n                        version: v,\n                        type: runtime,\n                        custom: type,\n                        config: cfg,\n                        async: !isSync(node),\n                        serviceWorker: node.getAttribute('service-worker'),\n                    });\n                    defineProperty(node, 'xworker', { value: xworker });\n                    resolve({ type, xworker });\n                    const workerName = node.getAttribute('name');\n                    if (workerName) workers[workerName].resolve(xworker.ready);\n                    return;\n                }\n            }\n            // let the custom type handle errors via its `io`\n            catch (workerError) {\n                error = workerError;\n            }\n\n            const name = getRuntimeID(runtime, version);\n            const id = env || `${name}${config ? `|${config}` : ''}`;\n            const { interpreter: engine, XWorker: Worker } = getDetails(\n                type,\n                id,\n                name,\n                version,\n                config,\n                configURL,\n                runtime\n            );\n\n            const interpreter = await engine;\n\n            const module = create(defaultRegistry.get(runtime));\n\n            const hook = new Hook(interpreter, hooks);\n\n            const XWorker = function XWorker(...args) {\n                return Worker.apply(hook, args);\n            };\n\n            const resolved = {\n                ...createResolved(\n                    module,\n                    type,\n                    structuredClone(configs.get(name)),\n                    interpreter,\n                ),\n                XWorker,\n            };\n\n            registerJSModules(runtime, module, interpreter, JSModules);\n            module.registerJSModule(interpreter, 'polyscript', {\n                IDBMap,\n                IDBMapSync,\n                XWorker,\n                config: resolved.config,\n                currentScript: type.startsWith('_') ? null : node,\n                js_modules: JSModules,\n                workers: workersHandler,\n            });\n\n            // patch methods accordingly to hooks (and only if needed)\n            for (const suffix of ['Run', 'RunAsync']) {\n                let before = '';\n                let after = '';\n\n                for (const key of codeHooks) {\n                    const value = hooks?.main?.[key];\n                    if (value && key.endsWith(suffix)) {\n                        if (key.startsWith('codeBefore'))\n                            before = dedent(value());\n                        else\n                            after = dedent(value());\n                    }\n                }\n\n                if (before || after) {\n                    createOverload(\n                        module,\n                        `r${suffix.slice(1)}`,\n                        before,\n                        after,\n                    );\n                }\n\n                let beforeCB, afterCB;\n                // ignore onReady and onWorker\n                for (let i = 2; i < jsHooks.length; i++) {\n                    const key = jsHooks[i];\n                    const value = hooks?.main?.[key];\n                    if (value && key.endsWith(suffix)) {\n                        if (key.startsWith('onBefore'))\n                            beforeCB = value;\n                        else\n                            afterCB = value;\n                    }\n                }\n                polluteJS(module, resolved, node, suffix.endsWith('Async'), beforeCB, afterCB);\n            }\n\n            details.queue = details.queue.then(() => {\n                resolve(resolved);\n                if (error) onerror?.(error, node);\n                return hooks?.main?.onReady?.(resolved, node);\n            });\n        }\n    }\n};\n\n/**\n * @type {Map<string, {options:object, known:WeakSet<Element>}>}\n */\nconst registry = new Map();\n\n/**\n * @typedef {Object} CustomOptions custom configuration\n * @prop {'pyodide' | 'micropython' | 'ruby-wasm-wasi' | 'wasmoon'} interpreter the interpreter to use\n * @prop {string} [version] the optional interpreter version to use\n * @prop {string} [config] the optional config to use within such interpreter\n */\n\nlet dontBotherCount = 0;\n\n/**\n * Allows custom types and components on the page to receive interpreters to execute any code\n * @param {string} type the unique `<script type=\"...\">` identifier\n * @param {CustomOptions} options the custom type configuration\n */\nexport const define = (type, options) => {\n    // allow no-type to be bootstrapped out of the box\n    let dontBother = type == null;\n\n    if (dontBother)\n        type = `_ps${dontBotherCount++}`;\n    else if (defaultRegistry.has(type) || registry.has(type))\n        throw new Error(`<script type=\"${type}\"> already registered`);\n\n    if (!defaultRegistry.has(options?.interpreter))\n        throw new Error('Unspecified interpreter');\n\n    // allows reaching out the interpreter helpers on events\n    defaultRegistry.set(type, defaultRegistry.get(options.interpreter));\n\n    // allows selector -> registry by type\n    const selectors = [`script[type=\"${type}\"]`];\n\n    // ensure a Promise can resolve once a custom type has been bootstrapped\n    whenDefined(type);\n\n    if (dontBother) {\n        // add a script then cleanup everything once that's ready\n        const { hooks } = options;\n        const onReady = hooks?.main?.onReady;\n        options = {\n            ...options,\n            hooks: {\n                ...hooks,\n                main: {\n                    ...hooks?.main,\n                    onReady(resolved, node) {\n                        CUSTOM_SELECTORS.splice(CUSTOM_SELECTORS.indexOf(type), 1);\n                        defaultRegistry.delete(type);\n                        registry.delete(type);\n                        waitList.delete(type);\n                        node.remove();\n                        onReady?.(resolved);\n                    }\n                }\n            },\n        };\n        document.head.append(\n            assign(document.createElement('script'), { type })\n        );\n    }\n    else {\n        selectors.push(`${type}-script`);\n        prefixes.push(`${type}-`);\n    }\n\n    for (const selector of selectors) types.set(selector, type);\n    CUSTOM_SELECTORS.push(...selectors);\n\n    // ensure always same env for this custom type\n    registry.set(type, {\n        options: assign({ env: type }, options),\n        known: new WeakSet(),\n        queue: Promise.resolve(),\n    });\n\n    if (!dontBother) addAllListeners(document);\n    $$(selectors.join(',')).forEach(handleCustomType);\n};\n\n/**\n * Resolves whenever a defined custom type is bootstrapped on the page\n * @param {string} type the unique `<script type=\"...\">` identifier\n * @returns {Promise<object>}\n */\nexport const whenDefined = (type) => {\n    if (!waitList.has(type)) waitList.set(type, withResolvers());\n    return waitList.get(type).promise;\n};\n/* c8 ignore stop */\n","/** @typedef {(type: string, options: import(\"./custom.js\").CustomOptions) => void} CustomOptions */\n\nimport stickyModule from 'sticky-module';\nimport { $$ } from 'basic-devtools';\n\nimport { handle } from './script-handler.js';\nimport { assign } from './utils.js';\nimport { selectors, prefixes } from './interpreters.js';\nimport { listener, addAllListeners } from './listeners.js';\n\nimport {\n    CUSTOM_SELECTORS,\n    handleCustomType,\n    customObserver as $customObserver,\n    define as $define,\n    whenDefined as $whenDefined\n} from './custom.js';\n\nimport { env as $env } from './listeners.js';\nimport { Hook as $Hook, XWorker as $XWorker } from './xworker.js';\n\n// avoid multiple initialization of the same library\nconst [\n    {\n        customObserver,\n        define,\n        whenDefined,\n        env,\n        Hook,\n        XWorker\n    },\n    alreadyLive\n] = stickyModule(\n    'polyscript',\n    {\n        customObserver: $customObserver,\n        define: $define,\n        whenDefined: $whenDefined,\n        env: $env,\n        Hook: $Hook,\n        XWorker: $XWorker\n    }\n);\n\nexport {\n    customObserver,\n    define,\n    whenDefined,\n    env,\n    Hook,\n    XWorker\n};\n\nexport * from './errors.js';\n\n\nif (!alreadyLive) {\n    const mo = new MutationObserver((records) => {\n        const selector = selectors.join(',');\n        for (const { type, target, attributeName, addedNodes } of records) {\n            // attributes are tested via integration / e2e\n            /* c8 ignore start */\n            if (type === 'attributes') {\n                const i = attributeName.lastIndexOf('-') + 1;\n                if (i) {\n                    const prefix = attributeName.slice(0, i);\n                    for (const p of prefixes) {\n                        if (prefix === p) {\n                            const type = attributeName.slice(i);\n                            if (type !== 'env') {\n                                const method = target.hasAttribute(attributeName)\n                                    ? 'add'\n                                    : 'remove';\n                                target[`${method}EventListener`](type, listener);\n                            }\n                            break;\n                        }\n                    }\n                }\n                continue;\n            }\n            for (const node of addedNodes) {\n                if (node.nodeType === 1) {\n                    addAllListeners(node);\n                    if (selector && node.matches(selector)) handle(node);\n                    else bootstrap(selector, node, true);\n                }\n            }\n            /* c8 ignore stop */\n        }\n    });\n\n    /* c8 ignore start */\n    const bootstrap = (selector, node, shouldHandle) => {\n        if (selector) $$(selector, node).forEach(handle);\n        selector = CUSTOM_SELECTORS.join(',');\n        if (selector) {\n            if (shouldHandle) handleCustomType(node);\n            $$(selector, node).forEach(handleCustomType);\n        }\n    };\n    /* c8 ignore stop */\n\n    const observe = (root) => {\n        mo.observe(root, { childList: true, subtree: true, attributes: true });\n        return root;\n    };\n\n    const { attachShadow } = Element.prototype;\n    assign(Element.prototype, {\n        attachShadow(init) {\n            return observe(attachShadow.call(this, init));\n        },\n    });\n\n    // give 3rd party a chance to apply changes before this happens\n    queueMicrotask(() => {\n        addAllListeners(observe(document));\n        bootstrap(selectors.join(','), document, false);\n    });\n\n}\n","export default new Map([\n    [\"py\", \"pyodide\"],\n    [\"mpy\", \"micropython\"],\n]);\n","import withResolvers from \"@webreflection/utils/with-resolvers\";\nimport TYPES from \"./types.js\";\n\nconst waitForIt = [];\n\nfor (const [TYPE] of TYPES) {\n    const selectors = [`script[type=\"${TYPE}\"]`, `${TYPE}-script`];\n    for (const element of document.querySelectorAll(selectors.join(\",\"))) {\n        const { promise, resolve } = withResolvers();\n        waitForIt.push(promise);\n        element.addEventListener(`${TYPE}:done`, resolve, { once: true });\n    }\n}\n\n// wait for all the things then cleanup\nPromise.all(waitForIt).then(() => {\n    dispatchEvent(new Event(\"py:all-done\"));\n});\n","// ⚠️ This file is an artifact: DO NOT MODIFY\nexport default {\n    codemirror: () =>\n        import(\n            /* webpackIgnore: true */\n            \"./plugins/codemirror.js\"\n        ),\n    [\"deprecations-manager\"]: () =>\n        import(\n            /* webpackIgnore: true */\n            \"./plugins/deprecations-manager.js\"\n        ),\n    donkey: () =>\n        import(\n            /* webpackIgnore: true */\n            \"./plugins/donkey.js\"\n        ),\n    error: () =>\n        import(\n            /* webpackIgnore: true */\n            \"./plugins/error.js\"\n        ),\n    [\"py-editor\"]: () =>\n        import(\n            /* webpackIgnore: true */\n            \"./plugins/py-editor.js\"\n        ),\n    [\"py-game\"]: () =>\n        import(\n            /* webpackIgnore: true */\n            \"./plugins/py-game.js\"\n        ),\n    [\"py-terminal\"]: () =>\n        import(\n            /* webpackIgnore: true */\n            \"./plugins/py-terminal.js\"\n        ),\n};\n","import { assign } from \"polyscript/exports\";\n\nconst CLOSEBUTTON =\n    \"<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='currentColor' width='12px'><path d='M.293.293a1 1 0 011.414 0L8 6.586 14.293.293a1 1 0 111.414 1.414L9.414 8l6.293 6.293a1 1 0 01-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 01-1.414-1.414L6.586 8 .293 1.707a1 1 0 010-1.414z'/></svg>\";\n\n/**\n * These error codes are used to identify the type of error that occurred.\n * @see https://pyscript.github.io/docs/latest/reference/exceptions.html?highlight=errors\n */\nexport const ErrorCode = {\n    GENERIC: \"PY0000\", // Use this only for development then change to a more specific error code\n    CONFLICTING_CODE: \"PY0409\",\n    BAD_CONFIG: \"PY1000\",\n    MICROPIP_INSTALL_ERROR: \"PY1001\",\n    BAD_PLUGIN_FILE_EXTENSION: \"PY2000\",\n    NO_DEFAULT_EXPORT: \"PY2001\",\n    TOP_LEVEL_AWAIT: \"PY9000\",\n    // Currently these are created depending on error code received from fetching\n    FETCH_ERROR: \"PY0001\",\n    FETCH_NAME_ERROR: \"PY0002\",\n    FETCH_UNAUTHORIZED_ERROR: \"PY0401\",\n    FETCH_FORBIDDEN_ERROR: \"PY0403\",\n    FETCH_NOT_FOUND_ERROR: \"PY0404\",\n    FETCH_SERVER_ERROR: \"PY0500\",\n    FETCH_UNAVAILABLE_ERROR: \"PY0503\",\n};\n\n/**\n * Keys of the ErrorCode object\n * @typedef {keyof ErrorCode} ErrorCodes\n * */\n\nexport class UserError extends Error {\n    /**\n     * @param {ErrorCodes} errorCode\n     * @param {string} message\n     * @param {string} messageType\n     * */\n    constructor(errorCode, message = \"\", messageType = \"text\") {\n        super(`(${errorCode}): ${message}`);\n        this.errorCode = errorCode;\n        this.messageType = messageType;\n        this.name = \"UserError\";\n    }\n}\n\nexport class FetchError extends UserError {\n    /**\n     * @param {ErrorCodes} errorCode\n     * @param {string} message\n     * */\n    constructor(errorCode, message) {\n        super(errorCode, message);\n        this.name = \"FetchError\";\n    }\n}\n\nexport class InstallError extends UserError {\n    /**\n     * @param {ErrorCodes} errorCode\n     * @param {string} message\n     * */\n    constructor(errorCode, message) {\n        super(errorCode, message);\n        this.name = \"InstallError\";\n    }\n}\n\n/**\n * Internal function for creating alert banners on the page\n * @param {string} message The message to be displayed to the user\n * @param {string} level The alert level of the message. Can be any string; 'error' or 'warning' cause matching messages to be emitted to the console\n * @param {string} [messageType=\"text\"] If set to \"html\", the message content will be assigned to the banner's innerHTML directly, instead of its textContent\n * @param {any} [logMessage=true] An additional flag for whether the message should be sent to the console log.\n */\nexport function _createAlertBanner(\n    message,\n    level,\n    messageType = \"text\",\n    logMessage = true,\n) {\n    switch (`log-${level}-${logMessage}`) {\n        case \"log-error-true\":\n            console.error(message);\n            break;\n        case \"log-warning-true\":\n            console.warn(message);\n            break;\n    }\n\n    const content = messageType === \"html\" ? \"innerHTML\" : \"textContent\";\n    const banner = assign(document.createElement(\"div\"), {\n        className: `alert-banner py-${level}`,\n        [content]: message,\n    });\n\n    if (level === \"warning\") {\n        const closeButton = assign(document.createElement(\"button\"), {\n            id: \"alert-close-button\",\n            innerHTML: CLOSEBUTTON,\n        });\n\n        banner.appendChild(closeButton).addEventListener(\"click\", () => {\n            banner.remove();\n        });\n    }\n\n    document.body.prepend(banner);\n}\n","import { FetchError, ErrorCode } from \"./exceptions.js\";\n\n/**\n * @param {Response} response\n * @returns\n */\nexport const getText = (response) => response.text();\n\n/**\n * This is a fetch wrapper that handles any non 200 responses and throws a\n * FetchError with the right ErrorCode. This is useful because our FetchError\n * will automatically create an alert banner.\n *\n * @param {string} url - URL to fetch\n * @param {Request} [options] - options to pass to fetch\n * @returns {Promise<Response>}\n */\nexport async function robustFetch(url, options) {\n    let response;\n\n    // Note: We need to wrap fetch into a try/catch block because fetch\n    // throws a TypeError if the URL is invalid such as http://blah.blah\n    try {\n        response = await fetch(url, options);\n    } catch (err) {\n        const error = err;\n        let errMsg;\n        if (url.startsWith(\"http\")) {\n            errMsg =\n                `Fetching from URL ${url} failed with error ` +\n                `'${error.message}'. Are your filename and path correct?`;\n        } else {\n            errMsg = `Polyscript: Access to local files\n        (using [[fetch]] configurations in &lt;py-config&gt;)\n        is not available when directly opening a HTML file;\n        you must use a webserver to serve the additional files.\n        See <a style=\"text-decoration: underline;\" href=\"https://github.com/pyscript/pyscript/issues/257#issuecomment-1119595062\">this reference</a>\n        on starting a simple webserver with Python.\n            `;\n        }\n        throw new FetchError(ErrorCode.FETCH_ERROR, errMsg);\n    }\n\n    // Note that response.ok is true for 200-299 responses\n    if (!response.ok) {\n        const errorMsg = `Fetching from URL ${url} failed with error ${response.status} (${response.statusText}). Are your filename and path correct?`;\n        switch (response.status) {\n            case 404:\n                throw new FetchError(ErrorCode.FETCH_NOT_FOUND_ERROR, errorMsg);\n            case 401:\n                throw new FetchError(\n                    ErrorCode.FETCH_UNAUTHORIZED_ERROR,\n                    errorMsg,\n                );\n            case 403:\n                throw new FetchError(ErrorCode.FETCH_FORBIDDEN_ERROR, errorMsg);\n            case 500:\n                throw new FetchError(ErrorCode.FETCH_SERVER_ERROR, errorMsg);\n            case 503:\n                throw new FetchError(\n                    ErrorCode.FETCH_UNAVAILABLE_ERROR,\n                    errorMsg,\n                );\n            default:\n                throw new FetchError(ErrorCode.FETCH_ERROR, errorMsg);\n        }\n    }\n    return response;\n}\n","/**\n * This file parses a generic <py-config> or config attribute\n * to use as base config for all py-script elements, importing\n * also a queue of plugins *before* the interpreter (if any) resolves.\n */\nimport { $$ } from \"basic-devtools\";\n\nimport TYPES from \"./types.js\";\nimport allPlugins from \"./plugins.js\";\nimport { robustFetch as fetch, getText } from \"./fetch.js\";\nimport { ErrorCode } from \"./exceptions.js\";\n\nconst { BAD_CONFIG, CONFLICTING_CODE } = ErrorCode;\n\nconst badURL = (url, expected = \"\") => {\n    let message = `(${BAD_CONFIG}): Invalid URL: ${url}`;\n    if (expected) message += `\\nexpected ${expected} content`;\n    throw new Error(message);\n};\n\n/**\n * Given a string, returns its trimmed content as text,\n * fetching it from a file if the content is a URL.\n * @param {string} config either JSON, TOML, or a file to fetch\n * @param {string?} type the optional type to enforce\n * @returns {{json: boolean, toml: boolean, text: string}}\n */\nexport const configDetails = async (config, type) => {\n    let text = config?.trim();\n    // we only support an object as root config\n    let url = \"\",\n        toml = false,\n        json = /^{/.test(text) && /}$/.test(text);\n    // handle files by extension (relaxing urls parts after)\n    if (!json && /\\.(\\w+)(?:\\?\\S*)?$/.test(text)) {\n        const ext = RegExp.$1;\n        if (ext === \"json\" && type !== \"toml\") json = true;\n        else if (ext === \"toml\" && type !== \"json\") toml = true;\n        else badURL(text, type);\n        url = text;\n        text = (await fetch(url).then(getText)).trim();\n    }\n    return { json, toml: toml || (!json && !!text), text, url };\n};\n\nconst conflictError = (reason) => new Error(`(${CONFLICTING_CODE}): ${reason}`);\n\nconst relative_url = (url, base = location.href) => new URL(url, base).href;\n\nconst syntaxError = (type, url, { message }) => {\n    let str = `(${BAD_CONFIG}): Invalid ${type}`;\n    if (url) str += ` @ ${url}`;\n    return new SyntaxError(`${str}\\n${message}`);\n};\n\nconst configs = new Map();\n\nfor (const [TYPE] of TYPES) {\n    /** @type {() => Promise<[...any]>} A Promise wrapping any plugins which should be loaded. */\n    let plugins;\n\n    /** @type {any} The PyScript configuration parsed from the JSON or TOML object*. May be any of the return types of JSON.parse() or toml-j0.4's parse() ( {number | string | boolean | null | object | Array} ) */\n    let parsed;\n\n    /** @type {Error | undefined} The error thrown when parsing the PyScript config, if any.*/\n    let error;\n\n    /** @type {string | undefined} The `configURL` field to normalize all config operations as opposite of guessing it once resolved */\n    let configURL;\n\n    let config,\n        type,\n        pyElement,\n        pyConfigs = $$(`${TYPE}-config`),\n        attrConfigs = $$(\n            [\n                `script[type=\"${TYPE}\"][config]:not([worker])`,\n                `${TYPE}-script[config]:not([worker])`,\n            ].join(\",\"),\n        );\n\n    // throw an error if there are multiple <py-config> or <mpy-config>\n    if (pyConfigs.length > 1) {\n        error = conflictError(`Too many ${TYPE}-config`);\n    } else {\n        // throw an error if there are <x-config> and config=\"x\" attributes\n        if (pyConfigs.length && attrConfigs.length) {\n            error = conflictError(\n                `Ambiguous ${TYPE}-config VS config attribute`,\n            );\n        } else if (pyConfigs.length) {\n            [pyElement] = pyConfigs;\n            config = pyElement.getAttribute(\"src\") || pyElement.textContent;\n            type = pyElement.getAttribute(\"type\");\n        } else if (attrConfigs.length) {\n            [pyElement, ...attrConfigs] = attrConfigs;\n            config = pyElement.getAttribute(\"config\");\n            // throw an error if dirrent scripts use different configs\n            if (\n                attrConfigs.some((el) => el.getAttribute(\"config\") !== config)\n            ) {\n                error = conflictError(\n                    \"Unable to use different configs on main\",\n                );\n            }\n        }\n    }\n\n    // catch possible fetch errors\n    if (!error && config) {\n        try {\n            const { json, toml, text, url } = await configDetails(config, type);\n            if (url) configURL = relative_url(url);\n            config = text;\n            if (json || type === \"json\") {\n                try {\n                    parsed = JSON.parse(text);\n                } catch (e) {\n                    error = syntaxError(\"JSON\", url, e);\n                }\n            } else if (toml || type === \"toml\") {\n                try {\n                    const { parse } = await import(\n                        /* webpackIgnore: true */ \"./3rd-party/toml.js\"\n                    );\n                    parsed = parse(text);\n                } catch (e) {\n                    error = syntaxError(\"TOML\", url, e);\n                }\n            }\n        } catch (e) {\n            error = e;\n        }\n    }\n\n    // parse all plugins and optionally ignore only\n    // those flagged as \"undesired\" via `!` prefix\n    plugins = async () => {\n        const toBeAwaited = [];\n        for (const [key, value] of Object.entries(allPlugins)) {\n            if (error) {\n                if (key === \"error\") {\n                    // show on page the config is broken, meaning that\n                    // it was not possible to disable error plugin neither\n                    // as that part wasn't correctly parsed anyway\n                    value().then(({ notify }) => notify(error.message));\n                }\n            } else if (!parsed?.plugins?.includes(`!${key}`)) {\n                toBeAwaited.push(value().then(({ default: p }) => p));\n            } else if (key === \"error\") {\n                toBeAwaited.push(value().then(({ notOnDOM }) => notOnDOM()));\n            }\n        }\n        return await Promise.all(toBeAwaited);\n    };\n\n    if (Number.isSafeInteger(parsed?.experimental_ffi_timeout))\n        globalThis.reflected_ffi_timeout = parsed?.experimental_ffi_timeout;\n\n    configs.set(TYPE, { config: parsed, configURL, plugins, error });\n}\n\nexport { configs, relative_url };\n","import IDBMap from \"@webreflection/idb-map\";\nimport withResolvers from \"@webreflection/utils/with-resolvers\";\nimport { assign } from \"polyscript/exports\";\nimport { $$ } from \"basic-devtools\";\n\nconst stop = (event) => {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n};\n\n// ⚠️ these two constants MUST be passed as `fs`\n//     within the worker onBeforeRunAsync hook!\nexport const NAMESPACE = \"@pyscript.fs\";\nexport const ERROR = \"storage permissions not granted\";\n\nexport const idb = new IDBMap(NAMESPACE);\n\n/**\n * Ask a user action via dialog and returns the directory handler once granted.\n * @param {{id?:string, mode?:\"read\"|\"readwrite\", hint?:\"desktop\"|\"documents\"|\"downloads\"|\"music\"|\"pictures\"|\"videos\"}} options\n * @returns {Promise<FileSystemDirectoryHandle>}\n */\nexport const getFileSystemDirectoryHandle = async (options) => {\n    if (!(\"showDirectoryPicker\" in globalThis)) {\n        return Promise.reject(\n            new Error(\"showDirectoryPicker is not supported\"),\n        );\n    }\n\n    const { promise, resolve, reject } = withResolvers();\n\n    const how = { id: \"pyscript\", mode: \"readwrite\", ...options };\n    if (options.hint) how.startIn = options.hint;\n\n    const transient = async () => {\n        try {\n            /* eslint-disable */\n            const handler = await showDirectoryPicker(how);\n            /* eslint-enable */\n            if ((await handler.requestPermission(how)) === \"granted\") {\n                resolve(handler);\n                return true;\n            }\n        } catch ({ message }) {\n            console.warn(message);\n        }\n        return false;\n    };\n\n    // in case the user decided to attach the event itself\n    // as opposite of relying our dialog walkthrough\n    if (navigator.userActivation?.isActive) {\n        if (!(await transient())) reject(new Error(ERROR));\n    } else {\n        const dialog = assign(document.createElement(\"dialog\"), {\n            className: \"pyscript-fs\",\n            innerHTML: [\n                \"<strong>ℹ️ Persistent FileSystem</strong><hr>\",\n                \"<p><small>PyScript would like to access a local folder.</small></p>\",\n                \"<div><button title='ok'>✅ Authorize</button>\",\n                \"<button title='cancel'>❌</button></div>\",\n            ].join(\"\"),\n        });\n\n        const [ok, cancel] = $$(\"button\", dialog);\n\n        ok.addEventListener(\"click\", async (event) => {\n            stop(event);\n            if (await transient()) dialog.close();\n        });\n\n        cancel.addEventListener(\"click\", async (event) => {\n            stop(event);\n            reject(new Error(ERROR));\n            dialog.close();\n        });\n\n        document.body.appendChild(dialog).showModal();\n    }\n\n    return promise;\n};\n","import { idb, getFileSystemDirectoryHandle } from \"./fs.js\";\n\nexport default {\n    // allow pyterminal checks to bootstrap\n    is_pyterminal: () => false,\n\n    /**\n     * 'Sleep' for the given number of seconds. Used to implement Python's time.sleep in Worker threads.\n     * @param {number} seconds The number of seconds to sleep.\n     */\n    sleep(seconds) {\n        return new Promise(($) => setTimeout($, seconds * 1000));\n    },\n\n    /**\n     * Ask a user action via dialog and returns the directory handler once granted.\n     * @param {string} uid\n     * @param {{id?:string, mode?:\"read\"|\"readwrite\", hint?:\"desktop\"|\"documents\"|\"downloads\"|\"music\"|\"pictures\"|\"videos\"}} options\n     * @returns {boolean}\n     */\n    async storeFSHandler(uid, options = {}) {\n        if (await idb.has(uid)) return true;\n        return getFileSystemDirectoryHandle(options).then(\n            async (handler) => {\n                await idb.set(uid, handler);\n                return true;\n            },\n            () => false,\n        );\n    },\n};\n","import { defineProperty } from \"polyscript/exports\";\n\n// helper for all script[type=\"py\"] out there\nconst before = (script) => {\n    defineProperty(document, \"currentScript\", {\n        configurable: true,\n        get: () => script,\n    });\n};\n\nconst after = () => {\n    delete document.currentScript;\n};\n\n// common life-cycle handlers for any node\nexport default async (main, wrap, element, hook) => {\n    const isAsync = hook.endsWith(\"Async\");\n    const isBefore = hook.startsWith(\"onBefore\");\n    // make it possible to reach the current target node via Python\n    // or clean up for other scripts executing around this one\n    (isBefore ? before : after)(element);\n    for (const fn of main(hook)) {\n        if (isAsync) await fn(wrap, element);\n        else fn(wrap, element);\n    }\n};\n","const any = () => true;\nconst error = message => {\n  throw new TypeError(message);\n};\n\nconst validator = (type, Class) => {\n  const checks = [];\n  if (type) {\n    for (const t of type.split(/\\s*\\|\\s*/)) {\n      if (t === 'object')\n        checks.push(v => v !== null && typeof v === t);\n      else if (t === 'null')\n        checks.push(v => v === null);\n      else\n        checks.push(v => typeof v === t);\n    }\n  }\n  if (Class) {\n    for (const C of [].concat(Class))\n      checks.push(o => o instanceof C);\n  }\n  switch (checks.length) {\n    case 0: return any;\n    case 1: return checks[0];\n    default: return v => checks.some(f => f(v));\n  }\n};\n\nconst failure = (type, Class, kind, onerror = error) => value => {\n  const message = [`Invalid ${typeof value} ${kind}: expected `];\n  if (type) {\n    message.push(type);\n    if (Class) message.push(' or ');\n  }\n  if (Class) {\n    message.push('an instanceof ');\n    message.push([].concat(Class).map(({name}) => name).join(' | '));\n  }\n  onerror(message.join(''), value);\n};\n\nconst checkFail = (options, kind = 'value') => {\n  const type = options?.typeof;\n  const Class = options?.instanceof;\n  return [\n    validator(type, Class),\n    failure(type, Class, kind, options?.onerror)\n  ];\n};\n\nconst createSet = Set => options => {\n  const [check, fail] = checkFail(options);\n  return class TypedSet extends Set {\n    add(value) {\n      return check(value) ? super.add(value) : fail(value);\n    }\n  };\n};\n\nexport const typedSet = createSet(Set);\nexport const typedWeakSet = createSet(WeakSet);\n\nconst createMap = Map => ([keyOptions, valueOptions]) => {\n  const [checkKey, failKey] = checkFail(keyOptions, 'key');\n  const [checkValue, failValue] = checkFail(valueOptions);\n  return class TypedMap extends Map {\n    set(key, value) {\n      if (!checkKey(key)) failKey(key);\n      if (!checkValue(value)) failValue(value);\n      return super.set(key, value);\n    }\n  };\n};\n\nexport const typedMap = createMap(Map);\nexport const typedWeakMap = createMap(WeakMap);\n","export default function (callback = this) {\n  return String(callback).replace(\n    /^(async\\s*)?(\\bfunction\\b)?(.*?)\\(/,\n    (_, isAsync, fn, name) => (\n      name && !fn ?\n        `${isAsync || \"\"}function ${name}(` :\n        _\n    ),\n  );\n};\n","/**\n * Create through Python the pyscript module through\n * the artifact generated at build time.\n * This the returned value is a string that must be used\n * either before a worker execute code or when the module\n * is registered on the main thread.\n */\n\nimport pyscript from \"./stdlib/pyscript.js\";\n\nclass Ignore extends Array {\n    #add = false;\n    #paths;\n    #array;\n    constructor(array, ...paths) {\n        super();\n        this.#array = array;\n        this.#paths = paths;\n    }\n    push(...values) {\n        if (this.#add) super.push(...values);\n        return this.#array.push(...values);\n    }\n    path(path) {\n        for (const _path of this.#paths) {\n            // bails out at the first `true` value\n            if ((this.#add = path.startsWith(_path))) break;\n        }\n    }\n}\n\nconst { entries } = Object;\n\nconst python = [\n    \"import os as _os\",\n    \"from pathlib import Path as _Path\",\n    \"_path = None\",\n];\n\nconst ignore = new Ignore(python, \"-\");\n\nconst write = (base, literal) => {\n    for (const [key, value] of entries(literal)) {\n        ignore.path(`${base}/${key}`);\n        ignore.push(`_path = _Path(\"${base}/${key}\")`);\n        if (typeof value === \"string\") {\n            const code = JSON.stringify(value);\n            ignore.push(`_path.write_text(${code},encoding=\"utf-8\")`);\n        } else {\n            // @see https://github.com/pyscript/pyscript/pull/1813#issuecomment-1781502909\n            ignore.push(`if not _os.path.exists(\"${base}/${key}\"):`);\n            ignore.push(\"    _path.mkdir(parents=True, exist_ok=True)\");\n            write(`${base}/${key}`, value);\n        }\n    }\n};\n\nwrite(\".\", pyscript);\n\n// in order to fix js.document in the Worker case\n// we need to bootstrap pyscript module ASAP\npython.push(\"import pyscript as _pyscript\");\n\npython.push(\n    ...[\"_Path\", \"_path\", \"_os\", \"_pyscript\"].map((ref) => `del ${ref}`),\n);\npython.push(\"\\n\");\n\nexport const stdlib = python.join(\"\\n\");\nexport const optional = ignore.join(\"\\n\");\n","// ⚠️ This file is an artifact: DO NOT MODIFY\nexport default {\n  \"pyscript\": {\n    \"__init__.py\": \"from polyscript import lazy_py_modules as py_import\\nfrom pyscript.magic_js import RUNNING_IN_WORKER,PyWorker,config,current_target,document,js_import,js_modules,sync,window\\nfrom pyscript.display import HTML,display\\nfrom pyscript.fetch import fetch\\nfrom pyscript.storage import Storage,storage\\nfrom pyscript.websocket import WebSocket\\nfrom pyscript.events import when,Event\\nif not RUNNING_IN_WORKER:from pyscript.workers import create_named_worker,workers\",\n    \"display.py\": \"_L='_repr_mimebundle_'\\n_K='image/svg+xml'\\n_J='application/json'\\n_I='__repr__'\\n_H='savefig'\\n_G='text/html'\\n_F='image/jpeg'\\n_E='application/javascript'\\n_D='utf-8'\\n_C='text/plain'\\n_B='image/png'\\n_A=None\\nimport base64,html,io,re\\nfrom pyscript.magic_js import current_target,document,window\\n_MIME_METHODS={_H:_B,'_repr_javascript_':_E,'_repr_json_':_J,'_repr_latex':'text/latex','_repr_png_':_B,'_repr_jpeg_':_F,'_repr_pdf_':'application/pdf','_repr_svg_':_K,'_repr_markdown_':'text/markdown','_repr_html_':_G,_I:_C}\\ndef _render_image(mime,value,meta):\\n\\tA=value\\n\\tif isinstance(A,bytes):A=base64.b64encode(A).decode(_D)\\n\\tB=re.compile('^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$')\\n\\tif len(A)>0 and not B.match(A):A=base64.b64encode(A.encode(_D)).decode(_D)\\n\\tC=f\\\"data:{mime};charset=utf-8;base64,{A}\\\";D=' '.join(['{k}=\\\"{v}\\\"'for(A,B)in meta.items()]);return f'<img src=\\\"{C}\\\" {D}></img>'\\ndef _identity(value,meta):return value\\n_MIME_RENDERERS={_C:html.escape,_G:_identity,_B:lambda value,meta:_render_image(_B,value,meta),_F:lambda value,meta:_render_image(_F,value,meta),_K:_identity,_J:_identity,_E:lambda value,meta:f\\\"<script>{value}<\\\\\\\\/script>\\\"}\\nclass HTML:\\n\\tdef __init__(A,html):A._html=html\\n\\tdef _repr_html_(A):return A._html\\ndef _eval_formatter(obj,print_method):\\n\\tB=obj;A=print_method\\n\\tif A==_I:return repr(B)\\n\\tif hasattr(B,A):\\n\\t\\tif A==_H:C=io.BytesIO();B.savefig(C,format='png');C.seek(0);return base64.b64encode(C.read()).decode(_D)\\n\\t\\treturn getattr(B,A)()\\n\\tif A==_L:return{},{}\\ndef _format_mime(obj):\\n\\tC=obj\\n\\tif isinstance(C,str):return html.escape(C),_C\\n\\tD=_eval_formatter(C,_L)\\n\\tif isinstance(D,tuple):E,I=D\\n\\telse:E=D\\n\\tA,F=_A,[]\\n\\tfor(H,B)in _MIME_METHODS.items():\\n\\t\\tif B in E:A=E[B]\\n\\t\\telse:A=_eval_formatter(C,H)\\n\\t\\tif A is _A:continue\\n\\t\\tif B not in _MIME_RENDERERS:F.append(B);continue\\n\\t\\tbreak\\n\\tif A is _A:\\n\\t\\tif F:window.console.warn(f\\\"Rendered object requested unavailable MIME renderers: {F}\\\")\\n\\t\\tA=repr(A);B=_C\\n\\telif isinstance(A,tuple):A,G=A\\n\\telse:G={}\\n\\treturn _MIME_RENDERERS[B](A,G),B\\ndef _write(element,value,append=False):\\n\\tB=element;C,D=_format_mime(value)\\n\\tif C=='\\\\\\\\n':return\\n\\tif append:A=document.createElement('div');B.append(A)\\n\\telse:\\n\\t\\tA=B.lastElementChild\\n\\t\\tif A is _A:A=B\\n\\tif D in(_E,_G):E=document.createRange().createContextualFragment(C);A.append(E)\\n\\telse:A.innerHTML=C\\ndef display(*E,target=_A,append=True):\\n\\tD=append;A=target\\n\\tif A is _A:A=current_target()\\n\\telif not isinstance(A,str):C=f\\\"target must be str or None, not {A.__class__.__name__}\\\";raise TypeError(C)\\n\\telif A=='':C='Cannot have an empty target';raise ValueError(C)\\n\\telif A.startswith('#'):A=A[1:]\\n\\tB=document.getElementById(A)\\n\\tif B is _A:C=f\\\"Invalid selector with id={A}. Cannot be found in the page.\\\";raise ValueError(C)\\n\\tif B.tagName=='SCRIPT'and hasattr(B,'target'):B=B.target\\n\\tfor F in E:\\n\\t\\tif not D:B.replaceChildren()\\n\\t\\t_write(B,F,append=D)\",\n    \"events.py\": \"import asyncio,inspect,sys\\nfrom functools import wraps\\nfrom pyscript.magic_js import document\\nfrom pyscript.ffi import create_proxy\\nfrom pyscript.util import is_awaitable\\nfrom pyscript import config\\nclass Event:\\n\\tdef __init__(A):A._listeners=[]\\n\\tdef trigger(C,result):\\n\\t\\tB=result\\n\\t\\tfor A in C._listeners:\\n\\t\\t\\tif is_awaitable(A):asyncio.create_task(A(B))\\n\\t\\t\\telse:A(B)\\n\\tdef add_listener(B,listener):\\n\\t\\tA=listener\\n\\t\\tif is_awaitable(A)or callable(A):\\n\\t\\t\\tif A not in B._listeners:B._listeners.append(A)\\n\\t\\telse:C='Listener must be callable or awaitable.';raise ValueError(C)\\n\\tdef remove_listener(A,*B):\\n\\t\\tif B:\\n\\t\\t\\tfor C in B:A._listeners.remove(C)\\n\\t\\telse:A._listeners=[]\\ndef when(target,*B,**D):\\n\\tG='handler';C=target;E=None\\n\\tif B and(callable(B[0])or is_awaitable(B[0])):E=B[0]\\n\\telif callable(D.get(G))or is_awaitable(D.get(G)):E=D.pop(G)\\n\\tif isinstance(C,str):\\n\\t\\tA=B[0]if B else D.pop('selector')\\n\\t\\tif not A:I='No selector provided.';raise ValueError(I)\\n\\t\\tfrom pyscript.web import Element as J,ElementCollection as K\\n\\t\\tif isinstance(A,str):F=document.querySelectorAll(A)\\n\\t\\telif isinstance(A,J):F=[A._dom_element]\\n\\t\\telif isinstance(A,K):F=[A._dom_element for A in A]\\n\\t\\telse:F=A if isinstance(A,list)else[A]\\n\\tdef H(func):\\n\\t\\tE='positional arguments';D='takes';A=func\\n\\t\\tif config['type']=='mpy':\\n\\t\\t\\tif is_awaitable(A):\\n\\t\\t\\t\\tasync def B(*C,**F):\\n\\t\\t\\t\\t\\ttry:return await A(*C,**F)\\n\\t\\t\\t\\t\\texcept TypeError as B:\\n\\t\\t\\t\\t\\t\\tif D in str(B)and E in str(B):return await A()\\n\\t\\t\\t\\t\\t\\traise\\n\\t\\t\\telse:\\n\\t\\t\\t\\tdef B(*C,**F):\\n\\t\\t\\t\\t\\ttry:return A(*C,**F)\\n\\t\\t\\t\\t\\texcept TypeError as B:\\n\\t\\t\\t\\t\\t\\tif D in str(B)and E in str(B):return A()\\n\\t\\t\\t\\t\\t\\traise\\n\\t\\telse:\\n\\t\\t\\tG=inspect.signature(A)\\n\\t\\t\\tif G.parameters:\\n\\t\\t\\t\\tif is_awaitable(A):\\n\\t\\t\\t\\t\\tasync def B(event):return await A(event)\\n\\t\\t\\t\\telse:B=A\\n\\t\\t\\telif is_awaitable(A):\\n\\t\\t\\t\\tasync def B(*B,**C):return await A()\\n\\t\\t\\telse:\\n\\t\\t\\t\\tdef B(*B,**C):return A()\\n\\t\\tB=wraps(A)(B)\\n\\t\\tif isinstance(C,Event):C.add_listener(B)\\n\\t\\telif isinstance(C,list)and all(isinstance(A,Event)for A in C):\\n\\t\\t\\tfor H in C:H.add_listener(B)\\n\\t\\telse:\\n\\t\\t\\tfor I in F:I.addEventListener(C,create_proxy(B))\\n\\t\\treturn B\\n\\treturn H(E)if E else H\",\n    \"fetch.py\": \"import json,js\\nfrom pyscript.util import as_bytearray\\nclass _Response:\\n\\tdef __init__(A,response):A._response=response\\n\\tdef __getattr__(A,attr):return getattr(A._response,attr)\\n\\tasync def arrayBuffer(B):\\n\\t\\tA=await B._response.arrayBuffer()\\n\\t\\tif hasattr(A,'to_py'):return A.to_py()\\n\\t\\treturn memoryview(as_bytearray(A))\\n\\tasync def blob(A):return await A._response.blob()\\n\\tasync def bytearray(A):B=await A._response.arrayBuffer();return as_bytearray(B)\\n\\tasync def json(A):return json.loads(await A.text())\\n\\tasync def text(A):return await A._response.text()\\nclass _DirectResponse:\\n\\t@staticmethod\\n\\tdef setup(promise,response):A=promise;A._response=_Response(response);return A._response\\n\\tdef __init__(B,promise):A=promise;B._promise=A;A._response=None;A.arrayBuffer=B.arrayBuffer;A.blob=B.blob;A.bytearray=B.bytearray;A.json=B.json;A.text=B.text\\n\\tasync def _response(A):\\n\\t\\tif not A._promise._response:await A._promise\\n\\t\\treturn A._promise._response\\n\\tasync def arrayBuffer(A):B=await A._response();return await B.arrayBuffer()\\n\\tasync def blob(A):B=await A._response();return await B.blob()\\n\\tasync def bytearray(A):B=await A._response();return await B.bytearray()\\n\\tasync def json(A):B=await A._response();return await B.json()\\n\\tasync def text(A):B=await A._response();return await B.text()\\ndef fetch(url,**B):C=js.JSON.parse(json.dumps(B));D=lambda response,*B:_DirectResponse.setup(A,response);A=js.fetch(url,C).then(D);_DirectResponse(A);return A\",\n    \"ffi.py\": \"try:\\n\\timport js;from pyodide.ffi import create_proxy as _cp,to_js as _py_tjs;from_entries=js.Object.fromEntries\\n\\tdef _tjs(value,**A):\\n\\t\\tB='dict_converter'\\n\\t\\tif not hasattr(A,B):A[B]=from_entries\\n\\t\\treturn _py_tjs(value,**A)\\nexcept:from jsffi import create_proxy as _cp;from jsffi import to_js as _tjs\\ncreate_proxy=_cp\\nto_js=_tjs\\ntry:\\n\\tfrom polyscript import ffi as _ffi;direct=_ffi.direct;gather=_ffi.gather;query=_ffi.query\\n\\tdef assign(source,*B):\\n\\t\\tA=source\\n\\t\\tfor C in B:_ffi.assign(A,to_js(C))\\n\\t\\treturn A\\nexcept:\\n\\timport js;_assign=js.Object.assign;direct=lambda source:source\\n\\tdef assign(source,*B):\\n\\t\\tA=source\\n\\t\\tfor C in B:_assign(A,to_js(C))\\n\\t\\treturn A\",\n    \"flatted.py\": \"import json as _json\\nclass _Known:\\n\\tdef __init__(A):A.key=[];A.value=[]\\nclass _String:\\n\\tdef __init__(A,value):A.value=value\\ndef _array_keys(value):\\n\\tA=[];B=0\\n\\tfor C in value:A.append(B);B+=1\\n\\treturn A\\ndef _object_keys(value):\\n\\tA=[]\\n\\tfor B in value:A.append(B)\\n\\treturn A\\ndef _is_array(value):return isinstance(value,(list,tuple))\\ndef _is_object(value):return isinstance(value,dict)\\ndef _is_string(value):return isinstance(value,str)\\ndef _index(known,input,value):B=value;A=known;input.append(B);C=str(len(input)-1);A.key.append(B);A.value.append(C);return C\\ndef _loop(keys,input,known,output):\\n\\tA=output\\n\\tfor B in keys:\\n\\t\\tC=A[B]\\n\\t\\tif isinstance(C,_String):_ref(B,input[int(C.value)],input,known,A)\\n\\treturn A\\ndef _ref(key,value,input,known,output):\\n\\tB=known;A=value\\n\\tif _is_array(A)and A not in B:B.append(A);A=_loop(_array_keys(A),input,B,A)\\n\\telif _is_object(A)and A not in B:B.append(A);A=_loop(_object_keys(A),input,B,A)\\n\\toutput[key]=A\\ndef _relate(known,input,value):\\n\\tB=known;A=value\\n\\tif _is_string(A)or _is_array(A)or _is_object(A):\\n\\t\\ttry:return B.value[B.key.index(A)]\\n\\t\\texcept:return _index(B,input,A)\\n\\treturn A\\ndef _transform(known,input,value):\\n\\tB=known;A=value\\n\\tif _is_array(A):\\n\\t\\tC=[]\\n\\t\\tfor F in A:C.append(_relate(B,input,F))\\n\\t\\treturn C\\n\\tif _is_object(A):\\n\\t\\tD={}\\n\\t\\tfor E in A:D[E]=_relate(B,input,A[E])\\n\\t\\treturn D\\n\\treturn A\\ndef _wrap(value):\\n\\tA=value\\n\\tif _is_string(A):return _String(A)\\n\\tif _is_array(A):\\n\\t\\tB=0\\n\\t\\tfor D in A:A[B]=_wrap(D);B+=1\\n\\telif _is_object(A):\\n\\t\\tfor C in A:A[C]=_wrap(A[C])\\n\\treturn A\\ndef parse(value,*C,**D):\\n\\tA=value;E=_json.loads(A,*C,**D);B=[]\\n\\tfor A in E:B.append(_wrap(A))\\n\\tinput=[]\\n\\tfor A in B:\\n\\t\\tif isinstance(A,_String):input.append(A.value)\\n\\t\\telse:input.append(A)\\n\\tA=input[0]\\n\\tif _is_array(A):return _loop(_array_keys(A),input,[A],A)\\n\\tif _is_object(A):return _loop(_object_keys(A),input,[A],A)\\n\\treturn A\\ndef stringify(value,*D,**E):\\n\\tB=_Known();input=[];C=[];A=int(_index(B,input,value))\\n\\twhile A<len(input):C.append(_transform(B,input,input[A]));A+=1\\n\\treturn _json.dumps(C,*D,**E)\",\n    \"fs.py\": \"mounted={}\\nasync def mount(path,mode='readwrite',root='',id='pyscript'):\\n\\tE=path;import js;from _pyscript import fs as A,interpreter as I;from pyscript.ffi import to_js as H;from pyscript.magic_js import RUNNING_IN_WORKER as J,sync;js.console.warn('experimental pyscript.fs ⚠️');B=None;C=f\\\"{E}@{id}\\\";F={'id':id,'mode':mode}\\n\\tif root!='':F['startIn']=root\\n\\tif J:\\n\\t\\tG=sync.storeFSHandler(C,H(F))\\n\\t\\tif isinstance(G,bool):D=G\\n\\t\\telse:D=await G\\n\\t\\tif D:from polyscript import IDBMap as K;L=K.new(A.NAMESPACE);B=await L.get(C)\\n\\t\\telse:raise RuntimeError(A.ERROR)\\n\\telse:\\n\\t\\tD=await A.idb.has(C)\\n\\t\\tif D:B=await A.idb.get(C)\\n\\t\\telse:B=await A.getFileSystemDirectoryHandle(H(F));await A.idb.set(C,B)\\n\\tmounted[E]=await I.mountNativeFS(E,B)\\nasync def sync(path):await mounted[path].syncfs()\\nasync def unmount(path):from _pyscript import interpreter as A;await sync(path);A._module.FS.unmount(path)\",\n    \"magic_js.py\": \"import json,sys,js as globalThis\\nfrom polyscript import config as _config,js_modules\\nfrom pyscript.util import NotSupported\\nRUNNING_IN_WORKER=not hasattr(globalThis,'document')\\nconfig=json.loads(globalThis.JSON.stringify(_config))\\nif'MicroPython'in sys.version:config['type']='mpy'\\nelse:config['type']='py'\\nclass JSModule:\\n\\tdef __init__(A,name):A.name=name\\n\\tdef __getattr__(B,field):\\n\\t\\tA=field\\n\\t\\tif not A.startswith('_'):return getattr(getattr(js_modules,B.name),A)\\nfor name in globalThis.Reflect.ownKeys(js_modules):sys.modules[f\\\"pyscript.js_modules.{name}\\\"]=JSModule(name)\\nsys.modules['pyscript.js_modules']=js_modules\\nif RUNNING_IN_WORKER:\\n\\timport polyscript;PyWorker=NotSupported('pyscript.PyWorker','pyscript.PyWorker works only when running in the main thread')\\n\\ttry:import js;window=polyscript.xworker.window;document=window.document;js.document=document;js_import=window.Function('return (...urls) => Promise.all(urls.map((url) => import(url)))')()\\n\\texcept:message='Unable to use `window` or `document` -> https://docs.pyscript.net/latest/faq/#sharedarraybuffer';globalThis.console.warn(message);window=NotSupported('pyscript.window',message);document=NotSupported('pyscript.document',message);js_import=None\\n\\tsync=polyscript.xworker.sync\\n\\tdef current_target():return polyscript.target\\nelse:\\n\\timport _pyscript;from _pyscript import PyWorker,js_import;window=globalThis;document=globalThis.document;sync=NotSupported('pyscript.sync','pyscript.sync works only when running in a worker')\\n\\tdef current_target():return _pyscript.target\",\n    \"media.py\": \"from pyscript import window\\nfrom pyscript.ffi import to_js\\nclass Device:\\n\\tdef __init__(A,device):A._dom_element=device\\n\\t@property\\n\\tdef id(self):return self._dom_element.deviceId\\n\\t@property\\n\\tdef group(self):return self._dom_element.groupId\\n\\t@property\\n\\tdef kind(self):return self._dom_element.kind\\n\\t@property\\n\\tdef label(self):return self._dom_element.label\\n\\tdef __getitem__(A,key):return getattr(A,key)\\n\\t@classmethod\\n\\tasync def load(E,audio=False,video=True):\\n\\t\\tC='video';B=video;A={};A['audio']=audio\\n\\t\\tif isinstance(B,bool):A[C]=B\\n\\t\\telse:\\n\\t\\t\\tA[C]={}\\n\\t\\t\\tfor D in B:A[C][D]=B[D]\\n\\t\\treturn await window.navigator.mediaDevices.getUserMedia(to_js(A))\\n\\tasync def get_stream(A):B=A.kind.replace('input','').replace('output','');C={B:{'deviceId':{'exact':A.id}}};return await A.load(**C)\\nasync def list_devices():return[Device(A)for A in await window.navigator.mediaDevices.enumerateDevices()]\",\n    \"storage.py\": \"_C='memoryview'\\n_B='bytearray'\\n_A='generic'\\nfrom polyscript import storage as _storage\\nfrom pyscript.flatted import parse as _parse\\nfrom pyscript.flatted import stringify as _stringify\\ndef _to_idb(value):\\n\\tA=value\\n\\tif A is None:return _stringify(['null',0])\\n\\tif isinstance(A,(bool,float,int,str,list,dict,tuple)):return _stringify([_A,A])\\n\\tif isinstance(A,bytearray):return _stringify([_B,list(A)])\\n\\tif isinstance(A,memoryview):return _stringify([_C,list(A)])\\n\\tB=f\\\"Unexpected value: {A}\\\";raise TypeError(B)\\ndef _from_idb(value):\\n\\tC=value;A,B=_parse(C)\\n\\tif A=='null':return\\n\\tif A==_A:return B\\n\\tif A==_B:return bytearray(B)\\n\\tif A==_C:return memoryview(bytearray(B))\\n\\treturn C\\nclass Storage(dict):\\n\\tdef __init__(B,store):A=store;super().__init__({A:_from_idb(B)for(A,B)in A.entries()});B.__store__=A\\n\\tdef __delitem__(A,attr):A.__store__.delete(attr);super().__delitem__(attr)\\n\\tdef __setitem__(B,attr,value):A=value;B.__store__.set(attr,_to_idb(A));super().__setitem__(attr,A)\\n\\tdef clear(A):A.__store__.clear();super().clear()\\n\\tasync def sync(A):await A.__store__.sync()\\nasync def storage(name='',storage_class=Storage):\\n\\tif not name:A='The storage name must be defined';raise ValueError(A)\\n\\treturn storage_class(await _storage(f\\\"@pyscript/{name}\\\"))\",\n    \"util.py\": \"import js,sys,inspect\\ndef as_bytearray(buffer):\\n\\tA=js.Uint8Array.new(buffer);B=A.length;C=bytearray(B)\\n\\tfor D in range(B):C[D]=A[D]\\n\\treturn C\\nclass NotSupported:\\n\\tdef __init__(A,name,error):object.__setattr__(A,'name',name);object.__setattr__(A,'error',error)\\n\\tdef __repr__(A):return f\\\"<NotSupported {A.name} [{A.error}]>\\\"\\n\\tdef __getattr__(A,attr):raise AttributeError(A.error)\\n\\tdef __setattr__(A,attr,value):raise AttributeError(A.error)\\n\\tdef __call__(A,*B):raise TypeError(A.error)\\ndef is_awaitable(obj):\\n\\tA=obj;from pyscript import config as B\\n\\tif B['type']=='mpy':\\n\\t\\tif'<closure <generator>'in repr(A):return True\\n\\t\\treturn inspect.isgeneratorfunction(A)\\n\\treturn inspect.iscoroutinefunction(A)\",\n    \"web.py\": \"_C='htmlFor'\\n_B='on_'\\n_A=None\\nfrom pyscript import document,when,Event\\nfrom pyscript.ffi import create_proxy\\ndef wrap_dom_element(dom_element):return Element.wrap_dom_element(dom_element)\\nclass Element:\\n\\telement_classes_by_tag_name={}\\n\\t@classmethod\\n\\tdef get_tag_name(A):return A.__name__.replace('_','')\\n\\t@classmethod\\n\\tdef register_element_classes(B,element_classes):\\n\\t\\tfor A in element_classes:C=A.get_tag_name();B.element_classes_by_tag_name[C]=A\\n\\t@classmethod\\n\\tdef unregister_element_classes(A,element_classes):\\n\\t\\tfor B in element_classes:C=B.get_tag_name();A.element_classes_by_tag_name.pop(C,_A)\\n\\t@classmethod\\n\\tdef wrap_dom_element(A,dom_element):B=dom_element;C=A.element_classes_by_tag_name.get(B.tagName.lower(),A);return C(dom_element=B)\\n\\tdef __init__(A,dom_element=_A,classes=_A,style=_A,**E):\\n\\t\\tA._dom_element=dom_element or document.createElement(type(A).get_tag_name());A._on_events={};C={}\\n\\t\\tfor(B,D)in E.items():\\n\\t\\t\\tif B.startswith(_B):F=A.get_event(B);F.add_listener(D)\\n\\t\\t\\telse:C[B]=D\\n\\t\\tA._classes=Classes(A);A._style=Style(A);A.update(classes=classes,style=style,**C)\\n\\tdef __eq__(A,obj):return isinstance(obj,Element)and obj._dom_element==A._dom_element\\n\\tdef __getitem__(B,key):\\n\\t\\tA=key\\n\\t\\tif isinstance(A,(int,slice)):return B.children[A]\\n\\t\\treturn B.find(A)\\n\\tdef __getattr__(B,name):\\n\\t\\tA=name\\n\\t\\tif A.startswith(_B):return B.get_event(A)\\n\\t\\tif A.endswith('_'):A=A[:-1]\\n\\t\\tif A=='for':A=_C\\n\\t\\treturn getattr(B._dom_element,A)\\n\\tdef __setattr__(C,name,value):\\n\\t\\tB=value;A=name\\n\\t\\tif A.startswith('_'):super().__setattr__(A,B)\\n\\t\\telse:\\n\\t\\t\\tif A.endswith('_'):A=A[:-1]\\n\\t\\t\\tif A=='for':A=_C\\n\\t\\t\\tif A.startswith(_B):C._on_events[A]=B\\n\\t\\t\\tsetattr(C._dom_element,A,B)\\n\\tdef get_event(A,name):\\n\\t\\tB=name\\n\\t\\tif not B.startswith(_B):C=\\\"Event names must start with 'on_'.\\\";raise ValueError(C)\\n\\t\\tD=B[3:]\\n\\t\\tif not hasattr(A._dom_element,D):C=f\\\"Element has no '{D}' event.\\\";raise ValueError(C)\\n\\t\\tif B in A._on_events:return A._on_events[B]\\n\\t\\tE=Event();A._on_events[B]=E;A._dom_element.addEventListener(D,create_proxy(E.trigger));return E\\n\\t@property\\n\\tdef children(self):return ElementCollection.wrap_dom_elements(self._dom_element.children)\\n\\t@property\\n\\tdef classes(self):return self._classes\\n\\t@property\\n\\tdef parent(self):\\n\\t\\tif self._dom_element.parentElement is _A:return\\n\\t\\treturn Element.wrap_dom_element(self._dom_element.parentElement)\\n\\t@property\\n\\tdef style(self):return self._style\\n\\tdef append(B,*C):\\n\\t\\tfor A in C:\\n\\t\\t\\tif isinstance(A,Element):B._dom_element.appendChild(A._dom_element)\\n\\t\\t\\telif isinstance(A,ElementCollection):\\n\\t\\t\\t\\tfor D in A:B._dom_element.appendChild(D._dom_element)\\n\\t\\t\\telif isinstance(A,(list,tuple)):\\n\\t\\t\\t\\tfor E in A:B.append(E)\\n\\t\\t\\telse:\\n\\t\\t\\t\\ttry:A.tagName;B._dom_element.appendChild(A)\\n\\t\\t\\t\\texcept AttributeError:\\n\\t\\t\\t\\t\\ttry:\\n\\t\\t\\t\\t\\t\\tA.length\\n\\t\\t\\t\\t\\t\\tfor F in A:B._dom_element.appendChild(F)\\n\\t\\t\\t\\t\\texcept AttributeError:G=f'Element \\\"{A}\\\" is a proxy object, \\\"but not a valid element or a NodeList.';raise TypeError(G)\\n\\tdef clone(B,clone_id=_A):A=Element.wrap_dom_element(B._dom_element.cloneNode(True));A.id=clone_id;return A\\n\\tdef find(A,selector):return ElementCollection.wrap_dom_elements(A._dom_element.querySelectorAll(selector))\\n\\tdef show_me(A):A._dom_element.scrollIntoView()\\n\\tdef update(A,classes=_A,style=_A,**D):\\n\\t\\tC=style;B=classes\\n\\t\\tif B:A.classes.add(B)\\n\\t\\tif C:A.style.set(**C)\\n\\t\\tfor(E,F)in D.items():setattr(A,E,F)\\nclass Classes:\\n\\tdef __init__(A,element):A._element=element;A._class_list=A._element._dom_element.classList\\n\\tdef __contains__(A,item):return item in A._class_list\\n\\tdef __eq__(C,other):\\n\\t\\tA=other\\n\\t\\tif isinstance(A,Classes):B=list(A._class_list)\\n\\t\\telse:\\n\\t\\t\\ttry:B=iter(A)\\n\\t\\t\\texcept TypeError:return False\\n\\t\\treturn set(C._class_list)==set(B)\\n\\tdef __iter__(A):return iter(A._class_list)\\n\\tdef __len__(A):return A._class_list.length\\n\\tdef __repr__(A):return f\\\"Classes({\\\", \\\".join(A._class_list)})\\\"\\n\\tdef __str__(A):return' '.join(A._class_list)\\n\\tdef add(B,*C):\\n\\t\\tfor A in C:\\n\\t\\t\\tif isinstance(A,list):\\n\\t\\t\\t\\tfor D in A:B.add(D)\\n\\t\\t\\telse:B._class_list.add(A)\\n\\tdef contains(A,class_name):return class_name in A\\n\\tdef remove(B,*C):\\n\\t\\tfor A in C:\\n\\t\\t\\tif isinstance(A,list):\\n\\t\\t\\t\\tfor D in A:B.remove(D)\\n\\t\\t\\telse:B._class_list.remove(A)\\n\\tdef replace(A,old_class,new_class):A.remove(old_class);A.add(new_class)\\n\\tdef toggle(A,*C):\\n\\t\\tfor B in C:\\n\\t\\t\\tif B in A:A.remove(B)\\n\\t\\t\\telse:A.add(B)\\nclass HasOptions:\\n\\t@property\\n\\tdef options(self):\\n\\t\\tA=self\\n\\t\\tif not hasattr(A,'_options'):A._options=Options(A)\\n\\t\\treturn A._options\\nclass Options:\\n\\tdef __init__(A,element):A._element=element\\n\\tdef __getitem__(A,key):return A.options[key]\\n\\tdef __iter__(A):yield from A.options\\n\\tdef __len__(A):return len(A.options)\\n\\tdef __repr__(A):return f\\\"{A.__class__.__name__} (length: {len(A)}) {A.options}\\\"\\n\\t@property\\n\\tdef options(self):return[Element.wrap_dom_element(A)for A in self._element._dom_element.options]\\n\\t@property\\n\\tdef selected(self):return self.options[self._element._dom_element.selectedIndex]\\n\\tdef add(D,value=_A,html=_A,text=_A,before=_A,**B):\\n\\t\\tC=value;A=before\\n\\t\\tif C is not _A:B['value']=C\\n\\t\\tif html is not _A:B['innerHTML']=html\\n\\t\\tif text is not _A:B['text']=text\\n\\t\\tE=option(**B)\\n\\t\\tif A and isinstance(A,Element):A=A._dom_element\\n\\t\\tD._element._dom_element.add(E._dom_element,A)\\n\\tdef clear(A):\\n\\t\\twhile len(A)>0:A.remove(0)\\n\\tdef remove(A,index):A._element._dom_element.remove(index)\\nclass Style:\\n\\tdef __init__(A,element):A._element=element;A._style=A._element._dom_element.style\\n\\tdef __getitem__(A,key):return A._style.getPropertyValue(key)\\n\\tdef __setitem__(A,key,value):A._style.setProperty(key,value)\\n\\tdef remove(A,key):A._style.removeProperty(key)\\n\\tdef set(A,**B):\\n\\t\\tfor(C,D)in B.items():A._element._dom_element.style.setProperty(C,D)\\n\\t@property\\n\\tdef visible(self):return self._element._dom_element.style.visibility\\n\\t@visible.setter\\n\\tdef visible(self,value):self._element._dom_element.style.visibility=value\\nclass ContainerElement(Element):\\n\\tdef __init__(B,*C,children=_A,dom_element=_A,style=_A,classes=_A,**D):\\n\\t\\tsuper().__init__(dom_element=dom_element,style=style,classes=classes,**D)\\n\\t\\tfor A in list(C)+(children or[]):\\n\\t\\t\\tif isinstance(A,(Element,ElementCollection)):B.append(A)\\n\\t\\t\\telse:B._dom_element.insertAdjacentHTML('beforeend',A)\\n\\tdef __iter__(A):yield from A.children\\nclass ClassesCollection:\\n\\tdef __init__(A,collection):A._collection=collection\\n\\tdef __contains__(A,class_name):\\n\\t\\tfor B in A._collection:\\n\\t\\t\\tif class_name in B.classes:return True\\n\\t\\treturn False\\n\\tdef __eq__(B,other):A=other;return isinstance(A,ClassesCollection)and B._collection==A._collection\\n\\tdef __iter__(A):yield from A._all_class_names()\\n\\tdef __len__(A):return len(A._all_class_names())\\n\\tdef __repr__(A):return f\\\"ClassesCollection({A._collection!r})\\\"\\n\\tdef __str__(A):return' '.join(A._all_class_names())\\n\\tdef add(A,*B):\\n\\t\\tfor C in A._collection:C.classes.add(*B)\\n\\tdef contains(A,class_name):return class_name in A\\n\\tdef remove(A,*B):\\n\\t\\tfor C in A._collection:C.classes.remove(*B)\\n\\tdef replace(A,old_class,new_class):\\n\\t\\tfor B in A._collection:B.classes.replace(old_class,new_class)\\n\\tdef toggle(A,*B):\\n\\t\\tfor C in A._collection:C.classes.toggle(*B)\\n\\tdef _all_class_names(B):\\n\\t\\tA=set()\\n\\t\\tfor C in B._collection:\\n\\t\\t\\tfor D in C.classes:A.add(D)\\n\\t\\treturn A\\nclass StyleCollection:\\n\\tdef __init__(A,collection):A._collection=collection\\n\\tdef __getitem__(A,key):return[A.style[key]for A in A._collection._elements]\\n\\tdef __setitem__(A,key,value):\\n\\t\\tfor B in A._collection._elements:B.style[key]=value\\n\\tdef __repr__(A):return f\\\"StyleCollection({A._collection!r})\\\"\\n\\tdef remove(A,key):\\n\\t\\tfor B in A._collection._elements:B.style.remove(key)\\nclass ElementCollection:\\n\\t@classmethod\\n\\tdef wrap_dom_elements(A,dom_elements):return A([Element.wrap_dom_element(A)for A in dom_elements])\\n\\tdef __init__(A,elements):A._elements=elements;A._classes=ClassesCollection(A);A._style=StyleCollection(A)\\n\\tdef __eq__(A,obj):return isinstance(obj,ElementCollection)and obj._elements==A._elements\\n\\tdef __getitem__(B,key):\\n\\t\\tA=key\\n\\t\\tif isinstance(A,int):return B._elements[A]\\n\\t\\tif isinstance(A,slice):return ElementCollection(B._elements[A])\\n\\t\\treturn B.find(A)\\n\\tdef __iter__(A):yield from A._elements\\n\\tdef __len__(A):return len(A._elements)\\n\\tdef __repr__(A):return f\\\"{A.__class__.__name__} (length: {len(A._elements)}) {A._elements}\\\"\\n\\tdef __getattr__(A,name):return[getattr(A,name)for A in A._elements]\\n\\tdef __setattr__(C,name,value):\\n\\t\\tB=value;A=name\\n\\t\\tif A.startswith('_'):super().__setattr__(A,B)\\n\\t\\telse:\\n\\t\\t\\tfor D in C._elements:setattr(D,A,B)\\n\\t@property\\n\\tdef classes(self):return self._classes\\n\\t@property\\n\\tdef elements(self):return self._elements\\n\\t@property\\n\\tdef style(self):return self._style\\n\\tdef find(B,selector):\\n\\t\\tA=[]\\n\\t\\tfor C in B._elements:A.extend(C.find(selector))\\n\\t\\treturn ElementCollection(A)\\nclass a(ContainerElement):0\\nclass abbr(ContainerElement):0\\nclass address(ContainerElement):0\\nclass area(Element):0\\nclass article(ContainerElement):0\\nclass aside(ContainerElement):0\\nclass audio(ContainerElement):0\\nclass b(ContainerElement):0\\nclass base(Element):0\\nclass blockquote(ContainerElement):0\\nclass body(ContainerElement):0\\nclass br(Element):0\\nclass button(ContainerElement):0\\nclass canvas(ContainerElement):\\n\\tdef download(A,filename='snapped.png'):B=a(download=filename,href=A._dom_element.toDataURL());A.append(B);B._dom_element.click()\\n\\tdef draw(E,what,width=_A,height=_A):\\n\\t\\tC=height;B=width;A=what\\n\\t\\tif isinstance(A,Element):A=A._dom_element\\n\\t\\tD=E._dom_element.getContext('2d')\\n\\t\\tif B or C:D.drawImage(A,0,0,B,C)\\n\\t\\telse:D.drawImage(A,0,0)\\nclass caption(ContainerElement):0\\nclass cite(ContainerElement):0\\nclass code(ContainerElement):0\\nclass col(Element):0\\nclass colgroup(ContainerElement):0\\nclass data(ContainerElement):0\\nclass datalist(ContainerElement,HasOptions):0\\nclass dd(ContainerElement):0\\nclass del_(ContainerElement):0\\nclass details(ContainerElement):0\\nclass dialog(ContainerElement):0\\nclass div(ContainerElement):0\\nclass dl(ContainerElement):0\\nclass dt(ContainerElement):0\\nclass em(ContainerElement):0\\nclass embed(Element):0\\nclass fieldset(ContainerElement):0\\nclass figcaption(ContainerElement):0\\nclass figure(ContainerElement):0\\nclass footer(ContainerElement):0\\nclass form(ContainerElement):0\\nclass h1(ContainerElement):0\\nclass h2(ContainerElement):0\\nclass h3(ContainerElement):0\\nclass h4(ContainerElement):0\\nclass h5(ContainerElement):0\\nclass h6(ContainerElement):0\\nclass head(ContainerElement):0\\nclass header(ContainerElement):0\\nclass hgroup(ContainerElement):0\\nclass hr(Element):0\\nclass html(ContainerElement):0\\nclass i(ContainerElement):0\\nclass iframe(ContainerElement):0\\nclass img(Element):0\\nclass input_(Element):0\\nclass ins(ContainerElement):0\\nclass kbd(ContainerElement):0\\nclass label(ContainerElement):0\\nclass legend(ContainerElement):0\\nclass li(ContainerElement):0\\nclass link(Element):0\\nclass main(ContainerElement):0\\nclass map_(ContainerElement):0\\nclass mark(ContainerElement):0\\nclass menu(ContainerElement):0\\nclass meta(ContainerElement):0\\nclass meter(ContainerElement):0\\nclass nav(ContainerElement):0\\nclass object_(ContainerElement):0\\nclass ol(ContainerElement):0\\nclass optgroup(ContainerElement,HasOptions):0\\nclass option(ContainerElement):0\\nclass output(ContainerElement):0\\nclass p(ContainerElement):0\\nclass param(ContainerElement):0\\nclass picture(ContainerElement):0\\nclass pre(ContainerElement):0\\nclass progress(ContainerElement):0\\nclass q(ContainerElement):0\\nclass s(ContainerElement):0\\nclass script(ContainerElement):0\\nclass section(ContainerElement):0\\nclass select(ContainerElement,HasOptions):0\\nclass small(ContainerElement):0\\nclass source(Element):0\\nclass span(ContainerElement):0\\nclass strong(ContainerElement):0\\nclass style(ContainerElement):0\\nclass sub(ContainerElement):0\\nclass summary(ContainerElement):0\\nclass sup(ContainerElement):0\\nclass table(ContainerElement):0\\nclass tbody(ContainerElement):0\\nclass td(ContainerElement):0\\nclass template(ContainerElement):0\\nclass textarea(ContainerElement):0\\nclass tfoot(ContainerElement):0\\nclass th(ContainerElement):0\\nclass thead(ContainerElement):0\\nclass time(ContainerElement):0\\nclass title(ContainerElement):0\\nclass tr(ContainerElement):0\\nclass track(Element):0\\nclass u(ContainerElement):0\\nclass ul(ContainerElement):0\\nclass var(ContainerElement):0\\nclass video(ContainerElement):\\n\\tdef snap(E,to=_A,width=_A,height=_A):\\n\\t\\tH='CANVAS';G='Element to snap to must be a canvas.';C=height;B=width;A=to;B=B if B is not _A else E.videoWidth;C=C if C is not _A else E.videoHeight\\n\\t\\tif A is _A:A=canvas(width=B,height=C)\\n\\t\\telif isinstance(A,Element):\\n\\t\\t\\tif A.tag!='canvas':D=G;raise TypeError(D)\\n\\t\\telif getattr(A,'tagName','')==H:A=canvas(dom_element=A)\\n\\t\\telif isinstance(A,str):\\n\\t\\t\\tF=document.querySelectorAll(A)\\n\\t\\t\\tif F.length==0:D='No element with selector {to} to snap to.';raise TypeError(D)\\n\\t\\t\\tif F[0].tagName!=H:D=G;raise TypeError(D)\\n\\t\\t\\tA=canvas(dom_element=F[0])\\n\\t\\tA.draw(E,B,C);return A\\nclass wbr(Element):0\\nELEMENT_CLASSES=[a,abbr,address,area,article,aside,audio,b,base,blockquote,body,br,button,canvas,caption,cite,code,col,colgroup,data,datalist,dd,del_,details,dialog,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,i,iframe,img,input_,ins,kbd,label,legend,li,link,main,map_,mark,menu,meta,meter,nav,object_,ol,optgroup,option,output,p,param,picture,pre,progress,q,s,script,section,select,small,source,span,strong,style,sub,summary,sup,table,tbody,td,template,textarea,tfoot,th,thead,time,title,tr,track,u,ul,var,video,wbr]\\nElement.register_element_classes(ELEMENT_CLASSES)\\nclass Page:\\n\\tdef __init__(A):A.html=Element.wrap_dom_element(document.documentElement);A.body=Element.wrap_dom_element(document.body);A.head=Element.wrap_dom_element(document.head)\\n\\tdef __getitem__(A,selector):return A.find(selector)\\n\\t@property\\n\\tdef title(self):return document.title\\n\\t@title.setter\\n\\tdef title(self,value):document.title=value\\n\\tdef append(A,*B):A.body.append(*B)\\n\\tdef find(A,selector):return ElementCollection.wrap_dom_elements(document.querySelectorAll(selector))\\npage=Page()\",\n    \"websocket.py\": \"import js\\nfrom pyscript.ffi import create_proxy\\nfrom pyscript.util import as_bytearray\\ncode='code'\\nprotocols='protocols'\\nreason='reason'\\nmethods=['onclose','onerror','onmessage','onopen']\\nclass EventMessage:\\n\\tdef __init__(A,event):A._event=event\\n\\tdef __getattr__(B,attr):\\n\\t\\tA=getattr(B._event,attr)\\n\\t\\tif attr=='data'and not isinstance(A,str):\\n\\t\\t\\tif hasattr(A,'to_py'):return A.to_py()\\n\\t\\t\\treturn memoryview(as_bytearray(A))\\n\\t\\treturn A\\nclass WebSocket:\\n\\tCONNECTING=0;OPEN=1;CLOSING=2;CLOSED=3\\n\\tdef __init__(E,**A):\\n\\t\\tD=A['url']\\n\\t\\tif protocols in A:B=js.WebSocket.new(D,A[protocols])\\n\\t\\telse:B=js.WebSocket.new(D)\\n\\t\\tobject.__setattr__(E,'_ws',B)\\n\\t\\tfor C in methods:\\n\\t\\t\\tif C in A:setattr(B,C,create_proxy(A[C]))\\n\\tdef __getattr__(A,attr):return getattr(A._ws,attr)\\n\\tdef __setattr__(B,attr,value):\\n\\t\\tC=value;A=attr\\n\\t\\tif A in methods:D=lambda e:C(EventMessage(e));setattr(B._ws,A,create_proxy(D))\\n\\t\\telse:setattr(B._ws,A,C)\\n\\tdef close(B,**A):\\n\\t\\tif code in A and reason in A:B._ws.close(A[code],A[reason])\\n\\t\\telif code in A:B._ws.close(A[code])\\n\\t\\telse:B._ws.close()\\n\\tdef send(B,data):\\n\\t\\tA=data\\n\\t\\tif isinstance(A,str):B._ws.send(A)\\n\\t\\telse:\\n\\t\\t\\tC=js.Uint8Array.new(len(A))\\n\\t\\t\\tfor(D,E)in enumerate(A):C[D]=E\\n\\t\\t\\tB._ws.send(C)\",\n    \"workers.py\": \"import js as _js\\nfrom polyscript import workers as _workers\\n_get=_js.Reflect.get\\ndef _set(script,name,value=''):script.setAttribute(name,value)\\nclass _ReadOnlyProxy:\\n\\tdef __getitem__(A,name):return _get(_workers,name)\\n\\tdef __getattr__(A,name):return _get(_workers,name)\\nworkers=_ReadOnlyProxy()\\nasync def create_named_worker(src='',name='',config=None,type='py'):\\n\\tC=name;B=config;from json import dumps\\n\\tif not src:D='Named workers require src';raise ValueError(D)\\n\\tif not C:D='Named workers require a name';raise ValueError(D)\\n\\tA=_js.document.createElement('script');A.type=type;A.src=src;_set(A,'worker');_set(A,'name',C)\\n\\tif B:_set(A,'config',isinstance(B,str)and B or dumps(B))\\n\\t_js.document.body.append(A);return await workers[C]\"\n  }\n};\n","import { typedSet } from \"type-checked-collections\";\nimport { dedent } from \"polyscript/exports\";\nimport toJSONCallback from \"to-json-callback\";\n\nimport { stdlib, optional } from \"./stdlib.js\";\n\nexport const main = (name) => hooks.main[name];\nexport const worker = (name) => hooks.worker[name];\n\nconst code = (hooks, branch, key, lib) => {\n    hooks[key] = () => {\n        const arr = lib ? [lib] : [];\n        arr.push(...branch(key));\n        return arr.map(dedent).join(\"\\n\");\n    };\n};\n\nexport const codeFor = (branch, type) => {\n    const pylib = type === \"mpy\" ? stdlib.replace(optional, \"\") : stdlib;\n    const hooks = {};\n    code(hooks, branch, `codeBeforeRun`, pylib);\n    code(hooks, branch, `codeBeforeRunAsync`, pylib);\n    code(hooks, branch, `codeAfterRun`);\n    code(hooks, branch, `codeAfterRunAsync`);\n    return hooks;\n};\n\nexport const createFunction = (self, name) => {\n    const cbs = [...worker(name)];\n    if (cbs.length) {\n        const cb = toJSONCallback(\n            self[`_${name}`] ||\n                (name.endsWith(\"Async\")\n                    ? async (wrap, xworker, ...cbs) => {\n                          for (const cb of cbs) await cb(wrap, xworker);\n                      }\n                    : (wrap, xworker, ...cbs) => {\n                          for (const cb of cbs) cb(wrap, xworker);\n                      }),\n        );\n        const a = cbs.map(toJSONCallback).join(\", \");\n        return Function(`return(w,x)=>(${cb})(w,x,...[${a}])`)();\n    }\n};\n\nconst SetFunction = typedSet({ typeof: \"function\" });\nconst SetString = typedSet({ typeof: \"string\" });\n\nexport const inputFailure = `\n    import builtins\n    def input(prompt=\"\"):\n        raise Exception(\"\\\\n           \".join([\n            \"input() doesn't work when PyScript runs in the main thread.\",\n            \"Consider using the worker attribute: https://pyscript.github.io/docs/2023.11.2/user-guide/workers/\"\n        ]))\n\n    builtins.input = input\n    del builtins\n    del input\n`;\n\nexport const hooks = {\n    main: {\n        /** @type {Set<function>} */\n        onWorker: new SetFunction(),\n        /** @type {Set<function>} */\n        onReady: new SetFunction(),\n        /** @type {Set<function>} */\n        onBeforeRun: new SetFunction(),\n        /** @type {Set<function>} */\n        onBeforeRunAsync: new SetFunction(),\n        /** @type {Set<function>} */\n        onAfterRun: new SetFunction(),\n        /** @type {Set<function>} */\n        onAfterRunAsync: new SetFunction(),\n        /** @type {Set<string>} */\n        codeBeforeRun: new SetString([inputFailure]),\n        /** @type {Set<string>} */\n        codeBeforeRunAsync: new SetString(),\n        /** @type {Set<string>} */\n        codeAfterRun: new SetString(),\n        /** @type {Set<string>} */\n        codeAfterRunAsync: new SetString(),\n    },\n    worker: {\n        /** @type {Set<function>} */\n        onReady: new SetFunction(),\n        /** @type {Set<function>} */\n        onBeforeRun: new SetFunction(),\n        /** @type {Set<function>} */\n        onBeforeRunAsync: new SetFunction([\n            ({ interpreter }) => {\n                interpreter.registerJsModule(\"_pyscript\", {\n                    // cannot be imported from fs.js\n                    // because this code is stringified\n                    fs: {\n                        ERROR: \"storage permissions not granted\",\n                        NAMESPACE: \"@pyscript.fs\",\n                    },\n                    interpreter,\n                });\n            },\n        ]),\n        /** @type {Set<function>} */\n        onAfterRun: new SetFunction(),\n        /** @type {Set<function>} */\n        onAfterRunAsync: new SetFunction(),\n        /** @type {Set<string>} */\n        codeBeforeRun: new SetString(),\n        /** @type {Set<string>} */\n        codeBeforeRunAsync: new SetString(),\n        /** @type {Set<string>} */\n        codeAfterRun: new SetString(),\n        /** @type {Set<string>} */\n        codeAfterRunAsync: new SetString(),\n    },\n};\n","// lazy loaded on-demand codemirror related files\nexport default {\n    get core() {\n        return import(/* webpackIgnore: true */ \"../3rd-party/codemirror.js\");\n    },\n    get state() {\n        return import(\n            /* webpackIgnore: true */ \"../3rd-party/codemirror_state.js\"\n        );\n    },\n    get python() {\n        return import(\n            /* webpackIgnore: true */ \"../3rd-party/codemirror_lang-python.js\"\n        );\n    },\n    get language() {\n        return import(\n            /* webpackIgnore: true */ \"../3rd-party/codemirror_language.js\"\n        );\n    },\n    get view() {\n        return import(\n            /* webpackIgnore: true */ \"../3rd-party/codemirror_view.js\"\n        );\n    },\n    get commands() {\n        return import(\n            /* webpackIgnore: true */ \"../3rd-party/codemirror_commands.js\"\n        );\n    },\n};\n","/*! (c) PyScript Development Team */\n\nimport \"./zero-redirect.js\";\nimport stickyModule from \"sticky-module\";\nimport withResolvers from \"@webreflection/utils/with-resolvers\";\n\nimport {\n    INVALID_CONTENT,\n    Hook,\n    XWorker,\n    assign,\n    dedent,\n    define,\n    defineProperty,\n    dispatch,\n    isSync,\n    queryTarget,\n    unescape,\n    whenDefined,\n} from \"polyscript/exports\";\n\nimport \"./all-done.js\";\nimport TYPES from \"./types.js\";\nimport { configs, relative_url } from \"./config.js\";\nimport sync from \"./sync.js\";\nimport bootstrapNodeAndPlugins from \"./plugins-helper.js\";\nimport { ErrorCode } from \"./exceptions.js\";\nimport { robustFetch as fetch, getText } from \"./fetch.js\";\nimport {\n    hooks,\n    main,\n    worker,\n    codeFor,\n    createFunction,\n    inputFailure,\n} from \"./hooks.js\";\nimport * as fs from \"./fs.js\";\n\nimport codemirror from \"./plugins/codemirror.js\";\nexport { codemirror };\n\nimport { stdlib, optional } from \"./stdlib.js\";\nexport { stdlib, optional, inputFailure };\n\nexport const donkey = (options) =>\n    import(/* webpackIgnore: true */ \"./plugins/donkey.js\").then((module) =>\n        module.default(options),\n    );\n\n// generic helper to disambiguate between custom element and script\nconst isScript = ({ tagName }) => tagName === \"SCRIPT\";\n\n// Used to create either Pyodide or MicroPython workers\n// with the PyScript module available within the code\nconst [PyWorker, MPWorker] = [...TYPES.entries()].map(\n    ([TYPE, interpreter]) =>\n        /**\n         * A `Worker` facade able to bootstrap on the worker thread only a PyScript module.\n         * @param {string} file the python file to run ina worker.\n         * @param {{config?: string | object, async?: boolean}} [options] optional configuration for the worker.\n         * @returns {Promise<Worker & {sync: object}>}\n         */\n        async function PyScriptWorker(file, options) {\n            await configs.get(TYPE).plugins;\n            const xworker = XWorker.call(\n                new Hook(null, hooked.get(TYPE)),\n                file,\n                {\n                    ...options,\n                    type: interpreter,\n                },\n            );\n            assign(xworker.sync, sync);\n            return xworker.ready;\n        },\n);\n\n// avoid multiple initialization of the same library\nconst [\n    {\n        PyWorker: exportedPyWorker,\n        MPWorker: exportedMPWorker,\n        hooks: exportedHooks,\n        config: exportedConfig,\n        whenDefined: exportedWhenDefined,\n    },\n    alreadyLive,\n] = stickyModule(\"@pyscript/core\", {\n    PyWorker,\n    MPWorker,\n    hooks,\n    config: {},\n    whenDefined,\n});\n\nexport {\n    TYPES,\n    relative_url,\n    exportedPyWorker as PyWorker,\n    exportedMPWorker as MPWorker,\n    exportedHooks as hooks,\n    exportedConfig as config,\n    exportedWhenDefined as whenDefined,\n};\n\nexport const offline_interpreter = (config) =>\n    config?.interpreter && relative_url(config.interpreter);\n\nconst hooked = new Map();\n\nfor (const [TYPE, interpreter] of TYPES) {\n    // avoid any dance if the module already landed\n    if (alreadyLive) break;\n\n    const dispatchDone = (element, isAsync, result) => {\n        if (isAsync) result.then(() => dispatch(element, TYPE, \"done\"));\n        else dispatch(element, TYPE, \"done\");\n    };\n\n    const { config, configURL, plugins, error } = configs.get(TYPE);\n\n    // create a unique identifier when/if needed\n    let id = 0;\n    const getID = (prefix = TYPE) => `${prefix}-${id++}`;\n\n    /**\n     * Given a generic DOM Element, tries to fetch the 'src' attribute, if present.\n     * It either throws an error if the 'src' can't be fetched or it returns a fallback\n     * content as source.\n     */\n    const fetchSource = async (tag, io, asText) => {\n        if (tag.hasAttribute(\"src\")) {\n            try {\n                return await fetch(tag.getAttribute(\"src\")).then(getText);\n            } catch (error) {\n                io.stderr(error);\n            }\n        }\n\n        if (asText) return dedent(tag.textContent);\n\n        const code = dedent(unescape(tag.innerHTML));\n        console.warn(\n            `Deprecated: use <script type=\"${TYPE}\"> for an always safe content parsing:\\n`,\n            code,\n        );\n        return code;\n    };\n\n    // register once any interpreter\n    let alreadyRegistered = false;\n\n    // allows lazy element features on code evaluation\n    let currentElement;\n\n    const registerModule = ({ XWorker, interpreter, io }) => {\n        // avoid multiple registration of the same interpreter\n        if (alreadyRegistered) return;\n        alreadyRegistered = true;\n\n        // automatically use the pyscript stderr (when/if defined)\n        // this defaults to console.error\n        function PyWorker(...args) {\n            const worker = XWorker(...args);\n            worker.onerror = ({ error }) => io.stderr(error);\n            return worker;\n        }\n\n        // enrich the Python env with some JS utility for main\n        interpreter.registerJsModule(\"_pyscript\", {\n            PyWorker,\n            fs,\n            interpreter,\n            js_import: (...urls) => Promise.all(urls.map((url) => import(url))),\n            get target() {\n                return isScript(currentElement)\n                    ? currentElement.target.id\n                    : currentElement.id;\n            },\n        });\n    };\n\n    // define the module as both `<script type=\"py\">` and `<py-script>`\n    // but only if the config didn't throw an error\n    if (!error) {\n        // ensure plugins are bootstrapped already before custom type definition\n        // NOTE: we cannot top-level await in here as plugins import other utilities\n        //       from core.js itself so that custom definition should not be blocking.\n        plugins().then(() => {\n            // possible early errors sent by polyscript\n            const errors = new Map();\n\n            // specific main and worker hooks\n            const hooks = {\n                main: {\n                    ...codeFor(main, TYPE),\n                    async onReady(wrap, element) {\n                        registerModule(wrap);\n\n                        // allows plugins to do whatever they want with the element\n                        // before regular stuff happens in here\n                        for (const callback of main(\"onReady\"))\n                            await callback(wrap, element);\n\n                        // now that all possible plugins are configured,\n                        // bail out if polyscript encountered an error\n                        if (errors.has(element)) {\n                            let { message } = errors.get(element);\n                            errors.delete(element);\n                            const clone = message === INVALID_CONTENT;\n                            message = `(${ErrorCode.CONFLICTING_CODE}) ${message} for `;\n                            message += element.cloneNode(clone).outerHTML;\n                            wrap.io.stderr(message);\n                            return;\n                        }\n\n                        if (isScript(element)) {\n                            const isAsync = !isSync(element);\n                            const target = element.getAttribute(\"target\");\n                            const show = target\n                                ? queryTarget(element, target)\n                                : document.createElement(\"script-py\");\n\n                            if (!target) {\n                                const { head, body } = document;\n                                if (head.contains(element)) body.append(show);\n                                else element.after(show);\n                            }\n                            if (!show.id) show.id = getID();\n\n                            // allows the code to retrieve the target element via\n                            // document.currentScript.target if needed\n                            defineProperty(element, \"target\", { value: show });\n\n                            // notify before the code runs\n                            dispatch(element, TYPE, \"ready\");\n                            dispatchDone(\n                                element,\n                                isAsync,\n                                wrap[`run${isAsync ? \"Async\" : \"\"}`](\n                                    await fetchSource(element, wrap.io, true),\n                                ),\n                            );\n                        } else {\n                            // resolve PyScriptElement to allow connectedCallback\n                            element._wrap.resolve(wrap);\n                        }\n                        console.debug(\"[pyscript/main] PyScript Ready\");\n                    },\n                    onWorker(_, xworker) {\n                        assign(xworker.sync, sync);\n                        for (const callback of main(\"onWorker\"))\n                            callback(_, xworker);\n                    },\n                    onBeforeRun(wrap, element) {\n                        currentElement = element;\n                        bootstrapNodeAndPlugins(\n                            main,\n                            wrap,\n                            element,\n                            \"onBeforeRun\",\n                        );\n                    },\n                    onBeforeRunAsync(wrap, element) {\n                        currentElement = element;\n                        return bootstrapNodeAndPlugins(\n                            main,\n                            wrap,\n                            element,\n                            \"onBeforeRunAsync\",\n                        );\n                    },\n                    onAfterRun(wrap, element) {\n                        bootstrapNodeAndPlugins(\n                            main,\n                            wrap,\n                            element,\n                            \"onAfterRun\",\n                        );\n                    },\n                    onAfterRunAsync(wrap, element) {\n                        return bootstrapNodeAndPlugins(\n                            main,\n                            wrap,\n                            element,\n                            \"onAfterRunAsync\",\n                        );\n                    },\n                },\n                worker: {\n                    ...codeFor(worker, TYPE),\n                    // these are lazy getters that returns a composition\n                    // of the current hooks or undefined, if no hook is present\n                    get onReady() {\n                        return createFunction(this, \"onReady\", true);\n                    },\n                    get onBeforeRun() {\n                        return createFunction(this, \"onBeforeRun\", false);\n                    },\n                    get onBeforeRunAsync() {\n                        return createFunction(this, \"onBeforeRunAsync\", true);\n                    },\n                    get onAfterRun() {\n                        return createFunction(this, \"onAfterRun\", false);\n                    },\n                    get onAfterRunAsync() {\n                        return createFunction(this, \"onAfterRunAsync\", true);\n                    },\n                },\n            };\n\n            hooked.set(TYPE, hooks);\n\n            define(TYPE, {\n                config,\n                configURL,\n                interpreter,\n                hooks,\n                env: `${TYPE}-script`,\n                version: offline_interpreter(config),\n                onerror(error, element) {\n                    errors.set(element, error);\n                },\n            });\n\n            customElements.define(\n                `${TYPE}-script`,\n                class extends HTMLElement {\n                    constructor() {\n                        assign(super(), {\n                            _wrap: withResolvers(),\n                            srcCode: \"\",\n                            executed: false,\n                        });\n                    }\n                    get id() {\n                        return super.id || (super.id = getID());\n                    }\n                    set id(value) {\n                        super.id = value;\n                    }\n                    async connectedCallback() {\n                        if (!this.executed) {\n                            this.executed = true;\n                            const isAsync = !isSync(this);\n                            const { io, run, runAsync } = await this._wrap\n                                .promise;\n                            this.srcCode = await fetchSource(\n                                this,\n                                io,\n                                !this.childElementCount,\n                            );\n                            this.replaceChildren();\n                            this.style.display = \"block\";\n                            dispatch(this, TYPE, \"ready\");\n                            dispatchDone(\n                                this,\n                                isAsync,\n                                (isAsync ? runAsync : run)(this.srcCode),\n                            );\n                        }\n                    }\n                },\n            );\n        });\n    }\n\n    // export the used config without allowing leaks through it\n    exportedConfig[TYPE] = structuredClone(config);\n}\n"],"names":["crypto","randomUUID","_","location","href","startsWith","replace","stickyModule","name","value","global","globalThis","symbol","Symbol","for","known","Object","defineProperty","withResolvers$1","Promise","withResolvers","bind","io","WeakMap","stdio","init","context","console","localIO","buffered","stderr","error","stdout","log","args","get","engine","interpreter","set","decoder","TextDecoder","callback","EOL","buffer","maybeUI8","Uint8Array","c","decode","splice","push","d","getOwnPropertyDescriptors","Response","prototype","isFunction","handler","p","k","hasOwnProperty","then","r","bypass","direct","fetch$1","input","Proxy","fetch","assign","STORAGE","READONLY","READWRITE","defaultOptions","durability","prefix","result","target","IDBMap","EventTarget","db","options","transaction","what","how","t","this","onsuccess","onerror","objectStore","constructor","super","resolve","reject","indexedDB","open","onupgradeneeded","objectStoreNames","length","createObjectStore","oncomplete","event","dispatchEvent","boundDispatch","key","type","message","isTrusted","Event","close","size","store","count","clear","delete","entries","keys","all","map","forEach","call","has","getKey","getAllKeys","put","values","toStringTag","IDBMapSync","Map","queue","sync","dedent","object","string","s","i","l","arguments","content","line","split","trim","test","RegExp","$1","es","unes","cape","m","tpl","unescape","un","isArray","Array","create","defineProperties","$","absoluteURL","path","base","URL","fixedRelative","id","nodeInfo","node","tag","tagName","dispatch","worker","CE","CustomEvent","bubbles","detail","createResolved","module","config","run","code","runAsync","runEvent","dropLine0","createOverload","before","after","method","async","js_modules","jsModules","JSModules","ownKeys","field","proxy","modules","registerJSModules","Reflect","registerJSModule","importJS","source","import","esm","importCSS","onload","document","querySelector","head","append","createElement","rel","isCSS","pathname","isSync","element","getAttribute","RUNNING_IN_WORKER","window","writeFile","FS","PATH","PATH_FS","absPath","dirPath","dirname","mkdirTree","canOwn","tree","pop","join","current","branch","mkdir","cwd","concat","joinPaths","parts","res","part","filter","fetchBuffer","url","baseURL","arrayBuffer","fetchPaths","config_fetch","files","to_file","from","undefined","Error","endsWith","flatMap","to_folder","file","filename","slice","lastIndexOf","calculateFetchPaths","fillName","dest","parseTemplate","src","SyntaxError","fetchFiles","config_files","targets","Set","sourceDest","add","calculateFilesPaths","fetchJSModules","main","promises","createProgress","FALSE","TRUE","UNDEFINED","NULL","NUMBER","UI8","NAN","INFINITY","N_INFINITY","ZERO","N_ZERO","BIGINT","BIGUINT","STRING","SYMBOL","ARRAY","BUFFER","DATE","ERROR","MAP","OBJECT","REGEXP","SET","VIEW","IMAGE_DATA","RECURSION","ImageData","encoder","TextEncoder","symbols","String","fromSymbol","toSymbol","description","keyFor","asSymbol","fromArray","isView","ArrayBuffer","tv","identity","loopValues","asValue","arr","cache","fromKey","toKey","output","apply","subarray","dv","DataView","u8a8","index","number","getUint32","deflate","getFloat64","j","array","textDecoder","Date","stack","data","width","height","colorSpace","pixelFormat","flags","NaN","Infinity","getBigInt64","getBigUint64","Stack","self","offset","o","v","last","byteLength","byteOffset","grow","getPrototypeOf","construct","toString","toTag","ref","isNaN","isFinite","isInteger","Number","is","process","unknown","setUint32","inflate","setFloat64","ui8a","pushView","getTime","json","toJSON","encoded","textEncoder","encode","setBigUint64","setBigInt64","JSON","parse","stringify","loader","loadProgress","progress","lazy_py_modules","packages","pyimport","storage","registerJsModule","getFormat","runPython","runPythonAsync","globals","registry","require","Function","dummy","transform","mip","toml","text","syncfs","direction","err","initializeNativeFS","MEMFS","filesystems","nativeFSAsync","DIR_MODE","FILE_MODE","mount","opts","fileSystemHandle","populate","local","getLocalSet","remote","getRemoteSet","dst","reconcile","e","isRealDir","toAbsolute","root","join2","check","readdir","mountpoint","stat","isDir","mode","timestamp","mtime","handles","getFsHandles","handle","kind","getFile","lastModifiedDate","loadLocalEntry","lookupPath","isFile","contents","getFileDataAsTypedArray","storeLocalEntry","entry","chmod","utime","removeLocalEntry","rmdir","unlink","loadRemoteEntry","storeRemoteEntry","parentDirHandle","getFileHandle","basename","getDirectoryHandle","writable","createWritable","write","removeRemoteEntry","removeEntry","total","e2","sort","remove","reverse","relPath","normalize","substring","NATIVEFS_ASYNC","TypeError","follow_mount","isMountpoint","ensureMountPathExists","dirHandle","collect","curDirHandle","relativePath","micropython","version","loadMicroPython","linebuffer","py_imports","importPackages","mountNativeFS","_module","PyProxy","toJs","fs","format","extractDir","blob","Blob","BlobReader","Uint8ArrayWriter","ZipReader","zipReader","getEntries","directory","getData","TMP","mpyPackage","install","toJsOptions","dict_converter","fromEntries","FunctionPrototype","overrideMethod","pyproxy","to_js","override","intercept","proxies","patch","arg","shared","gcRegistered","deref","wr","WeakRef","indexURLs","pyodide","loadPyodide","index_urls","indexURL","save","packages_cache","lockFileURL","createObjectURL","debug","setDebug","revokeObjectURL","experimental_create_proxy","toPy","unpackArchive","ffi","_log","rest","loadPackage","micropip","set_index_urls","keep_going","frozen","freeze","destroy","jsType","ruby_wasm_wasi","experimental","DefaultRubyVM","WebAssembly","compile","vm","eval","evalAsync","wrap","wasmoon","LuaFactory","LuaLibraries","createEngine","getTable","Base","setField","doStringSync","doString","cmodule","writeFileShim","fr","FinalizationRegistry","fn","shelter","captureR","register","webr","WebR","Shelter","warn","evalRVoid","env","configs","selectors","prefixes","$$","css","querySelectorAll","$x","xpath","XPathEvaluator","createExpression","evaluate","XPathResult","ORDERED_NODE_SNAPSHOT_TYPE","snapshotLength","snapshotItem","workers","ignore","workersHandler","promise","w","UNREF","ASSIGN","EVALUATE","GATHER","QUERY","APPLY","CONSTRUCT","DEFINE_PROPERTY","DELETE_PROPERTY","GET","GET_OWN_PROPERTY_DESCRIPTOR","GET_PROTOTYPE_OF","HAS","IS_EXTENSIBLE","OWN_KEYS","SET_PROTOTYPE_OF","toBuffer","resizable","maxByteLength","brackets","query","reduce","gather","asResult","Node","deleteProperty","getOwnPropertyDescriptor","isExtensible","setPrototypeOf","reflect","timeout","fromValue","cached","fromValues","weakRefs","unregister","toValue","globalTarget","hasDirect","BYTES_PER_ELEMENT","toView","REMOTE","fromKeys","toKeys","unref","ids","refs","uid","heap","arrayKey","memoize","WeakSet","isGlobal","asModule","descriptor","body","terminate","addEventListener","eventsHandler","invoke","CHANNEL","MAIN","WORKER","nextResolver","as","nothing","buffers","SharedArrayBuffer","SAB","native","growable","newLength","resize","ID","Math","random","defaults","Int32Array","proxied","ok","stop","stopImmediatePropagation","preventDefault","ffi_timeout","fallback","reflected_ffi_timeout","next","bootstrap","Atomics","MessageChannel","Worker","views","addListener","once","wait","Request","view","xhr","XMLHttpRequest","SW","setRequestHeader","send","UID","responseText","bc","BroadcastChannel","onmessage","swid","wid","vid","postMessage","port1","scriptURL","notify","details","serviceWorker","activate","swc","getRegistration","ready","controller","installing","waiting","active","state","reload","serviceWorkerURL","navigator","info","MessageEvent","coincident$1","checkTransferred","transfer","sabayon.Worker","sabayon.Atomics","channel","port2","sabayon.MessageChannel","callbacks","sabayon.register","resolving","cb","at","transferred.get","setTimeout","clearTimeout","deadlock","i32","start","transferred.set","re","place","q","f","exports","coincident","directEncoder","currentTarget","methods","patchEvent","getConfigURLAndType","configURL","resolveConfig","absolute","parseString","getRuntime","getRuntimeID","toJSONCallback$1","isAsync","beforeRun","afterRun","js","resolved","polluteJS","patched","Hook$1","hooks","onWorker","jsHooks","codeHooks","toJSONCallback","xworker","service_worker","isHook","Hook","resolver","configurable","isError","INVALID_CONTENT","workerURL","attributes","childElementCount","innerHTML","localName","textContent","queryTarget","script","idOrSelector","parent","parentNode","getRoot","getElementById","targetDescriptor","handled","interpreters","getValue","getDetails","runtime","XWorker","$xworker","closest","wn","sw","versionValue","configValue","workerName","targetValue","currentScript","done","execute","queueMicrotask","awaitInterpreter","available","listener","ownerElement","el","addAllListeners","disabled","CUSTOM_SELECTORS","customObserver","types","waitList","handleCustomType","selector","matches","cfg","u","isSafeInteger","experimental_ffi_timeout","XW","custom","workerError","defaultRegistry","hook","structuredClone","suffix","beforeCB","afterCB","onReady","dontBotherCount","whenDefined","define","alreadyLive","$customObserver","dontBother","indexOf","$whenDefined","$env","$Hook","$XWorker","mo","MutationObserver","records","attributeName","addedNodes","hasAttribute","nodeType","shouldHandle","observe","childList","subtree","attachShadow","Element","TYPES","waitForIt","TYPE","allPlugins","codemirror","codemirror$1","donkey","ErrorCode","CONFLICTING_CODE","BAD_CONFIG","FETCH_ERROR","FETCH_UNAUTHORIZED_ERROR","FETCH_FORBIDDEN_ERROR","FETCH_NOT_FOUND_ERROR","FETCH_SERVER_ERROR","FETCH_UNAVAILABLE_ERROR","UserError","errorCode","messageType","FetchError","getText","response","robustFetch","errMsg","errorMsg","status","statusText","configDetails","ext","expected","badURL","conflictError","reason","relative_url","syntaxError","str","plugins","parsed","pyElement","pyConfigs","attrConfigs","some","toBeAwaited","includes","notOnDOM","default","NAMESPACE","idb","getFileSystemDirectoryHandle","hint","startIn","transient","showDirectoryPicker","requestPermission","userActivation","isActive","dialog","className","cancel","appendChild","showModal","is_pyterminal","sleep","seconds","bootstrapNodeAndPlugins","any","validator","Class","checks","C","failure","typedSet","fail","typeof","instanceof","checkFail","createSet","python","paths","_path","literal","pyscript","stdlib","optional","lib","codeFor","pylib","createFunction","cbs","a","SetFunction","SetString","inputFailure","onBeforeRun","onBeforeRunAsync","onAfterRun","onAfterRunAsync","codeBeforeRun","codeBeforeRunAsync","codeAfterRun","codeAfterRunAsync","core","language","n","x","commands","isScript","PyWorker","MPWorker","hooked","exportedPyWorker","exportedMPWorker","exportedHooks","exportedConfig","exportedWhenDefined","offline_interpreter","dispatchDone","getID","fetchSource","asText","currentElement","alreadyRegistered","registerModule","js_import","urls","errors","clone","cloneNode","outerHTML","show","contains","_wrap","customElements","HTMLElement","srcCode","executed","connectedCallback","replaceChildren","style","display"],"mappings":"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","x_google_ignoreList":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,74,75]}